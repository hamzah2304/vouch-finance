{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Watch = void 0;\nclass Watch {\n  constructor() {\n    this.timestamps = new Map();\n  }\n  start(label) {\n    if (this.timestamps.has(label)) {\n      throw new Error(`Watch already started for label: ${label}`);\n    }\n    this.timestamps.set(label, {\n      started: Date.now()\n    });\n  }\n  stop(label) {\n    const timestamp = this.get(label);\n    if (typeof timestamp.elapsed !== \"undefined\") {\n      throw new Error(`Watch already stopped for label: ${label}`);\n    }\n    const elapsed = Date.now() - timestamp.started;\n    this.timestamps.set(label, {\n      started: timestamp.started,\n      elapsed\n    });\n  }\n  get(label) {\n    const timestamp = this.timestamps.get(label);\n    if (typeof timestamp === \"undefined\") {\n      throw new Error(`No timestamp found for label: ${label}`);\n    }\n    return timestamp;\n  }\n  elapsed(label) {\n    const timestamp = this.get(label);\n    const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n    return elapsed;\n  }\n}\nexports.Watch = Watch;\nexports.default = Watch;\n//# sourceMappingURL=watch.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}