{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { initialWalletState } from './wallet.store';\nexport const walletSlice = createSlice({\n  name: 'wallet',\n  initialState: initialWalletState,\n  reducers: {\n    setConnectWalletModalOpened: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.isModalOpened = payload;\n    },\n    setChoosenProvider: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.choosenProvider = payload;\n    },\n    setIsConnecting: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.isConnecting = payload;\n    },\n    setError: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.error = payload;\n    },\n    setConnector: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.connectors[payload.provider] = payload.connector;\n    }\n  }\n});\nexport const {\n  setConnectWalletModalOpened,\n  setChoosenProvider,\n  setIsConnecting,\n  setError,\n  setConnector\n} = walletSlice.actions;\nexport default walletSlice.reducer;","map":{"version":3,"names":["createSlice","initialWalletState","walletSlice","name","initialState","reducers","setConnectWalletModalOpened","state","payload","isModalOpened","setChoosenProvider","choosenProvider","setIsConnecting","isConnecting","setError","error","setConnector","connectors","provider","connector","actions","reducer"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/vouch-finance/vouch-finance-frontend/src/features/wallet/store/wallet.reducers.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { ConnectorType, initialWalletState, ProviderType } from './wallet.store'\n\nexport const walletSlice = createSlice({\n  name: 'wallet',\n  initialState: initialWalletState,\n  reducers: {\n    setConnectWalletModalOpened: (\n      state,\n      { payload }: PayloadAction<boolean>,\n    ) => {\n      state.isModalOpened = payload\n    },\n    setChoosenProvider: (state, { payload }: PayloadAction<ProviderType>) => {\n      state.choosenProvider = payload\n    },\n    setIsConnecting: (state, { payload }: PayloadAction<boolean>) => {\n      state.isConnecting = payload\n    },\n    setError: (state, { payload }: PayloadAction<Error | undefined>) => {\n      state.error = payload\n    },\n    setConnector: (\n      state,\n      {\n        payload,\n      }: PayloadAction<{ provider: string; connector: ConnectorType }>,\n    ) => {\n      state.connectors[payload.provider] = payload.connector\n    },\n  },\n})\n\nexport const {\n  setConnectWalletModalOpened,\n  setChoosenProvider,\n  setIsConnecting,\n  setError,\n  setConnector,\n} = walletSlice.actions\n\nexport default walletSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAE7D,SAAwBC,kBAAkB,QAAsB,gBAAgB;AAEhF,OAAO,MAAMC,WAAW,GAAGF,WAAW,CAAC;EACrCG,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAEH,kBAAkB;EAChCI,QAAQ,EAAE;IACRC,2BAA2B,EAAE,CAC3BC,KAAK,WAEF;MAAA,IADH;QAAEC;MAAgC,CAAC;MAEnCD,KAAK,CAACE,aAAa,GAAGD,OAAO;IAC/B,CAAC;IACDE,kBAAkB,EAAE,CAACH,KAAK,YAA+C;MAAA,IAA7C;QAAEC;MAAqC,CAAC;MAClED,KAAK,CAACI,eAAe,GAAGH,OAAO;IACjC,CAAC;IACDI,eAAe,EAAE,CAACL,KAAK,YAA0C;MAAA,IAAxC;QAAEC;MAAgC,CAAC;MAC1DD,KAAK,CAACM,YAAY,GAAGL,OAAO;IAC9B,CAAC;IACDM,QAAQ,EAAE,CAACP,KAAK,YAAoD;MAAA,IAAlD;QAAEC;MAA0C,CAAC;MAC7DD,KAAK,CAACQ,KAAK,GAAGP,OAAO;IACvB,CAAC;IACDQ,YAAY,EAAE,CACZT,KAAK,YAIF;MAAA,IAHH;QACEC;MAC6D,CAAC;MAEhED,KAAK,CAACU,UAAU,CAACT,OAAO,CAACU,QAAQ,CAAC,GAAGV,OAAO,CAACW,SAAS;IACxD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXb,2BAA2B;EAC3BI,kBAAkB;EAClBE,eAAe;EACfE,QAAQ;EACRE;AACF,CAAC,GAAGd,WAAW,CAACkB,OAAO;AAEvB,eAAelB,WAAW,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}