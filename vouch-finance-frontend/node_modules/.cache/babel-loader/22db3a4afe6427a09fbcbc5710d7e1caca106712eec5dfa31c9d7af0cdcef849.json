{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { cloneElement } from \"react\";\nimport styles from \"../../styles/Icon.css\";\nconst IconElement = props => {\n  var _a, _b, _c;\n  let {\n      size,\n      color,\n      noColor,\n      clickable\n    } = props,\n    rest = __rest(props, [\"size\", \"color\", \"noColor\", \"clickable\"]);\n  if (props.children) {\n    return cloneElement(props.children, Object.assign(Object.assign({}, rest), {\n      children: (_b = (_a = props.children) === null || _a === void 0 ? void 0 : _a.props) === null || _b === void 0 ? void 0 : _b.children,\n      className: `${styles.icon} ${props.className || \"\"} ${noColor ? styles.iconNoColor : \"\"}`,\n      style: Object.assign({\n        width: size,\n        height: size,\n        minWidth: size,\n        minHeight: size,\n        color: color,\n        stroke: color,\n        cursor: clickable ? \"pointer\" : (_c = props.style) === null || _c === void 0 ? void 0 : _c.cursor\n      }, props.style)\n    }));\n  }\n  return null;\n};\nexport function newIcon(icon, noColor) {\n  let noForwardProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return props => {\n    const forward = Object.assign({}, props);\n    noForwardProps.forEach(prop => delete forward[prop]);\n    return React.createElement(IconElement, Object.assign({}, forward), icon instanceof Function ? icon(props) : icon);\n  };\n}\n//# sourceMappingURL=Icon.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}