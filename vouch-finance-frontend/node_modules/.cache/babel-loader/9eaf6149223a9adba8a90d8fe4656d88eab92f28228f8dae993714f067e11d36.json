{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst nlNLPickers = {\n  // Calendar navigation\n  previousMonth: 'Vorige maand',\n  nextMonth: 'Volgende maand',\n  // View navigation\n  openPreviousView: 'open vorige view',\n  openNextView: 'open volgende view',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'jaarweergave is geopend, schakel over naar kalenderweergave' : 'kalenderweergave is geopend, switch naar jaarweergave',\n  // inputModeToggleButtonAriaLabel: (isKeyboardInputOpen: boolean, viewType: 'calendar' | 'clock') => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\n  // DateRange placeholders\n  start: 'Start',\n  end: 'Einde',\n  // Action bar\n  cancelButtonLabel: 'Annuleren',\n  clearButtonLabel: 'Resetten',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Vandaag',\n  // Toolbar titles\n  // datePickerDefaultToolbarTitle: 'Select date',\n  // dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  // timePickerDefaultToolbarTitle: 'Select time',\n  // dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Selecteer ${view}. ${time === null ? 'Geen tijd geselecteerd' : `Geselecteerde tijd is ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} uren`,\n  minutesClockNumberText: minutes => `${minutes} minuten`,\n  secondsClockNumberText: seconds => `${seconds} seconden`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Kies datum, geselecteerde datum is ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Kies datum',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Kies tijd, geselecteerde tijd is ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Kies tijd',\n  // Table labels\n  timeTableLabel: 'kies tijd',\n  dateTableLabel: 'kies datum'\n};\nexport const nlNL = getPickersLocalization(nlNLPickers);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}