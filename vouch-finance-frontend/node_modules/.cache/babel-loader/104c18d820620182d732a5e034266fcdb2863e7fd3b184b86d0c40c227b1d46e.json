{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/Lend/components/withdraw/Transfer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../../../../hooks/useRedux';\nimport { toBigNumber, upScale } from '../../../../../utils/number';\nimport { TransferModal } from '../../../components/TransferModal';\nimport { setWithdrawNextStep } from '../../store/lend.reducers';\nimport { selectLendState } from '../../store/lend.selectors';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function Transfer(_ref) {\n  _s();\n  let {\n    poolInfo\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    decimals\n  } = poolInfo.poolUnderlyingToken;\n  const {\n    withdrawAmount\n  } = useAppSelector(selectLendState);\n  const withdrawBigNumber = toBigNumber(upScale(withdrawAmount, decimals));\n  const handleSuccess = useCallback(() => {\n    dispatch(setWithdrawNextStep());\n  }, [dispatch]);\n  return _jsx(TransferModal, {\n    poolInfo: poolInfo,\n    method: \"withdraw\",\n    params: [withdrawBigNumber],\n    handleSuccess: handleSuccess\n  });\n}\n_s(Transfer, \"dZIv7Lm6ZjAFzBeOIQfEU9bJyAU=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useCallback","useAppDispatch","useAppSelector","toBigNumber","upScale","TransferModal","setWithdrawNextStep","selectLendState","Transfer","poolInfo","dispatch","decimals","poolUnderlyingToken","withdrawAmount","withdrawBigNumber","handleSuccess"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/Lend/components/withdraw/Transfer.tsx"],"sourcesContent":["import React, { useCallback } from 'react'\n\nimport { useAppDispatch, useAppSelector } from '../../../../../hooks/useRedux'\nimport { toBigNumber, upScale } from '../../../../../utils/number'\nimport { PoolInfoType } from '../../../../../utils/pool'\nimport { TransferModal } from '../../../components/TransferModal'\nimport { setWithdrawNextStep } from '../../store/lend.reducers'\nimport { selectLendState } from '../../store/lend.selectors'\n\ntype Props = {\n  poolInfo: PoolInfoType\n}\n\nexport function Transfer({ poolInfo }: Props): React.ReactElement {\n  const dispatch = useAppDispatch()\n  const { decimals } = poolInfo.poolUnderlyingToken\n  const { withdrawAmount } = useAppSelector(selectLendState)\n  const withdrawBigNumber = toBigNumber(upScale(withdrawAmount!, decimals))\n\n  const handleSuccess = useCallback(() => {\n    dispatch(setWithdrawNextStep())\n  }, [dispatch])\n\n  return (\n    <TransferModal\n      poolInfo={poolInfo}\n      method='withdraw'\n      params={[withdrawBigNumber]}\n      handleSuccess={handleSuccess}\n    />\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAE1C,SAASC,cAAc,EAAEC,cAAc,QAAQ,+BAA+B;AAC9E,SAASC,WAAW,EAAEC,OAAO,QAAQ,6BAA6B;AAElE,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,SAASC,eAAe,QAAQ,4BAA4B;AAAA;AAM5D,OAAO,SAASC,QAAQ,OAA0C;EAAA;EAAA,IAAzC;IAAEC;EAAgB,CAAC;EAC1C,MAAMC,QAAQ,GAAGT,cAAc,EAAE;EACjC,MAAM;IAAEU;EAAS,CAAC,GAAGF,QAAQ,CAACG,mBAAmB;EACjD,MAAM;IAAEC;EAAe,CAAC,GAAGX,cAAc,CAACK,eAAe,CAAC;EAC1D,MAAMO,iBAAiB,GAAGX,WAAW,CAACC,OAAO,CAACS,cAAc,EAAGF,QAAQ,CAAC,CAAC;EAEzE,MAAMI,aAAa,GAAGf,WAAW,CAAC,MAAM;IACtCU,QAAQ,CAACJ,mBAAmB,EAAE,CAAC;EACjC,CAAC,EAAE,CAACI,QAAQ,CAAC,CAAC;EAEd,OACE,KAAC,aAAa;IACZ,QAAQ,EAAED,QAAS;IACnB,MAAM,EAAC,UAAU;IACjB,MAAM,EAAE,CAACK,iBAAiB,CAAE;IAC5B,aAAa,EAAEC;EAAc,EAC7B;AAEN;AAAC,GAlBeP,QAAQ;EAAA,QACLP,cAAc,EAEJC,cAAc;AAAA;AAAA,KAH3BM,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}