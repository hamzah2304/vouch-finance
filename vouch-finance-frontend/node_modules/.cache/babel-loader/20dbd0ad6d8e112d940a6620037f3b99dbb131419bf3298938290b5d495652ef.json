{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HeartBeat = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = require(\"events\");\nconst time_1 = require(\"@walletconnect/time\");\nconst types_1 = require(\"./types\");\nconst constants_1 = require(\"./constants\");\nclass HeartBeat extends types_1.IHeartBeat {\n  constructor(opts) {\n    super(opts);\n    this.events = new events_1.EventEmitter();\n    this.interval = constants_1.HEARTBEAT_INTERVAL;\n    this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;\n  }\n  static init(opts) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const heartbeat = new HeartBeat(opts);\n      yield heartbeat.init();\n      return heartbeat;\n    });\n  }\n  init() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      yield this.initialize();\n    });\n  }\n  stop() {\n    clearInterval(this.intervalRef);\n  }\n  on(event, listener) {\n    this.events.on(event, listener);\n  }\n  once(event, listener) {\n    this.events.once(event, listener);\n  }\n  off(event, listener) {\n    this.events.off(event, listener);\n  }\n  removeListener(event, listener) {\n    this.events.removeListener(event, listener);\n  }\n  initialize() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      this.intervalRef = setInterval(() => this.pulse(), time_1.toMiliseconds(this.interval));\n    });\n  }\n  pulse() {\n    this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);\n  }\n}\nexports.HeartBeat = HeartBeat;\n//# sourceMappingURL=heartbeat.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}