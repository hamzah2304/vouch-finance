{"ast":null,"code":"import { EthereumIcon } from '../components/icons';\nconst ETH = {\n  name: 'Ether',\n  symbol: 'ETH',\n  decimals: 18\n};\nexport let ChainEnum;\n(function (ChainEnum) {\n  ChainEnum[ChainEnum[\"Local\"] = 31337] = \"Local\";\n})(ChainEnum || (ChainEnum = {}));\nexport const SupportedChainIds = [ChainEnum.Local];\nexport const CHAINS = {\n  [ChainEnum.Local]: {\n    urls: ['http://localhost:8545'],\n    name: 'Local Hardhat',\n    nativeCurrency: ETH,\n    icon: EthereumIcon,\n    wait: 1\n  }\n};\nfunction isExtendedChainInformation(chainInformation) {\n  return !!chainInformation.nativeCurrency;\n}\nexport function getAddChainParameters(chainId) {\n  const chainInformation = CHAINS[chainId];\n  if (isExtendedChainInformation(chainInformation)) {\n    return {\n      chainId,\n      chainName: chainInformation.name,\n      nativeCurrency: chainInformation.nativeCurrency,\n      rpcUrls: chainInformation.urls\n    };\n  }\n  return chainId;\n}\nexport const getWalletAddressAbbr = address => {\n  if (!address) {\n    return address;\n  }\n  const {\n    length\n  } = address;\n  return `${address.slice(0, 6)}...${address.slice(length - 4, length)}`;\n};","map":{"version":3,"names":["EthereumIcon","ETH","name","symbol","decimals","ChainEnum","SupportedChainIds","Local","CHAINS","urls","nativeCurrency","icon","wait","isExtendedChainInformation","chainInformation","getAddChainParameters","chainId","chainName","rpcUrls","getWalletAddressAbbr","address","length","slice"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/vouch-finance/vouch-finance-frontend/src/utils/chain.ts"],"sourcesContent":["import type { AddEthereumChainParameter } from '@web3-react/types'\nimport { EthereumIcon } from '../components/icons'\nimport { IconType } from '../utilTypes'\n\nconst ETH: AddEthereumChainParameter['nativeCurrency'] = {\n  name: 'Ether',\n  symbol: 'ETH',\n  decimals: 18,\n}\n\ninterface BasicChainInformation {\n  urls: string[]\n  name: string\n  icon: IconType\n  wait: number\n  requestAPIUrl?: string | undefined\n}\n\ninterface ExtendedChainInformation extends BasicChainInformation {\n  nativeCurrency: AddEthereumChainParameter['nativeCurrency']\n  blockExplorerUrls: AddEthereumChainParameter['blockExplorerUrls']\n}\n\nexport enum ChainEnum {\n  Local = 31337,\n}\n\nexport const SupportedChainIds = [ChainEnum.Local]\n\nexport const CHAINS: {\n  [chainId: number]: BasicChainInformation | ExtendedChainInformation\n} = {\n  [ChainEnum.Local]: {\n    urls: ['http://localhost:8545'],\n    name: 'Local Hardhat',\n    nativeCurrency: ETH,\n    icon: EthereumIcon,\n    wait: 1,\n  },\n}\n\nfunction isExtendedChainInformation(\n  chainInformation: BasicChainInformation | ExtendedChainInformation,\n): chainInformation is ExtendedChainInformation {\n  return !!(chainInformation as ExtendedChainInformation).nativeCurrency\n}\n\nexport function getAddChainParameters(\n  chainId: number,\n): AddEthereumChainParameter | number {\n  const chainInformation = CHAINS[chainId]\n  if (isExtendedChainInformation(chainInformation)) {\n    return {\n      chainId,\n      chainName: chainInformation.name,\n      nativeCurrency: chainInformation.nativeCurrency,\n      rpcUrls: chainInformation.urls,\n    }\n  }\n  return chainId\n}\n\nexport const getWalletAddressAbbr = (address: string) => {\n  if (!address) {\n    return address\n  }\n  const { length } = address\n  return `${address.slice(0, 6)}...${address.slice(length - 4, length)}`\n}\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,qBAAqB;AAGlD,MAAMC,GAAgD,GAAG;EACvDC,IAAI,EAAE,OAAO;EACbC,MAAM,EAAE,KAAK;EACbC,QAAQ,EAAE;AACZ,CAAC;AAeD,WAAYC,SAAS;AAEpB,WAFWA,SAAS;EAATA,SAAS,CAATA,SAAS;AAAA,GAATA,SAAS,KAATA,SAAS;AAIrB,OAAO,MAAMC,iBAAiB,GAAG,CAACD,SAAS,CAACE,KAAK,CAAC;AAElD,OAAO,MAAMC,MAEZ,GAAG;EACF,CAACH,SAAS,CAACE,KAAK,GAAG;IACjBE,IAAI,EAAE,CAAC,uBAAuB,CAAC;IAC/BP,IAAI,EAAE,eAAe;IACrBQ,cAAc,EAAET,GAAG;IACnBU,IAAI,EAAEX,YAAY;IAClBY,IAAI,EAAE;EACR;AACF,CAAC;AAED,SAASC,0BAA0B,CACjCC,gBAAkE,EACpB;EAC9C,OAAO,CAAC,CAAEA,gBAAgB,CAA8BJ,cAAc;AACxE;AAEA,OAAO,SAASK,qBAAqB,CACnCC,OAAe,EACqB;EACpC,MAAMF,gBAAgB,GAAGN,MAAM,CAACQ,OAAO,CAAC;EACxC,IAAIH,0BAA0B,CAACC,gBAAgB,CAAC,EAAE;IAChD,OAAO;MACLE,OAAO;MACPC,SAAS,EAAEH,gBAAgB,CAACZ,IAAI;MAChCQ,cAAc,EAAEI,gBAAgB,CAACJ,cAAc;MAC/CQ,OAAO,EAAEJ,gBAAgB,CAACL;IAC5B,CAAC;EACH;EACA,OAAOO,OAAO;AAChB;AAEA,OAAO,MAAMG,oBAAoB,GAAIC,OAAe,IAAK;EACvD,IAAI,CAACA,OAAO,EAAE;IACZ,OAAOA,OAAO;EAChB;EACA,MAAM;IAAEC;EAAO,CAAC,GAAGD,OAAO;EAC1B,OAAQ,GAAEA,OAAO,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAE,MAAKF,OAAO,CAACE,KAAK,CAACD,MAAM,GAAG,CAAC,EAAEA,MAAM,CAAE,EAAC;AACxE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}