{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/vouch-finance/vouch-finance-frontend/src/features/sdk/CreditLine/components/borrow/Loan.tsx\",\n  _s = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useCLFeeManager, useCLPoolAllowance } from '../../../../../hooks/useCLPoolContract';\nimport { useAppDispatch } from '../../../../../hooks/useRedux';\nimport { ChooseAmountModal } from '../../../components';\nimport { setCLBorrowAllowanceApprove, setCLBorrowAmount } from '../../store/creditLine.reducers';\nimport { CL_BORROW_STEP } from '../../store/creditLine.store';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function Loan(_ref) {\n  _s();\n  let {\n    creditRecordStatic,\n    creditAvailableAmount,\n    poolInfo\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    poolUnderlyingToken\n  } = poolInfo;\n  const {\n    symbol\n  } = poolUnderlyingToken;\n  const {\n    approved\n  } = useCLPoolAllowance(poolInfo.poolName, account);\n  const {\n    getFeesCharged\n  } = useCLFeeManager(poolInfo.poolName);\n  const [chargedFees, setChargedFees] = useState(0);\n  const [currentAmount, setCurrentAmount] = useState(0);\n  useEffect(() => {\n    dispatch(setCLBorrowAllowanceApprove(approved));\n  }, [approved, dispatch]);\n  const handleChangeAmount = useCallback(newAmount => {\n    setCurrentAmount(newAmount);\n    const newChargedFees = getFeesCharged(newAmount);\n    setChargedFees(newChargedFees);\n  }, [getFeesCharged]);\n  const handleAction = useCallback(() => {\n    const step = approved ? CL_BORROW_STEP.TransferMoney : CL_BORROW_STEP.ApproveAllowance;\n    dispatch(setCLBorrowAmount({\n      requestLoan: currentAmount,\n      chargedFees,\n      step\n    }));\n  }, [approved, chargedFees, currentAmount, dispatch]);\n  return _jsx(ChooseAmountModal, {\n    title: \"Borrow\",\n    description1: \"Choose Amount\",\n    sliderMax: creditAvailableAmount,\n    currentAmount: currentAmount,\n    tokenSymbol: symbol,\n    topLeft: \"Origination Fee\",\n    topRight: `${chargedFees} ${symbol}`,\n    downLeft: \"APR\",\n    downRight: `${creditRecordStatic.aprInBps / 100}%`,\n    handleChangeAmount: handleChangeAmount,\n    handleAction: handleAction,\n    actionText: \"borrow\"\n  });\n}\n_s(Loan, \"r2ZMbeBi/wKJrexsl8Ai++jDARY=\", false, function () {\n  return [useAppDispatch, useWeb3React, useCLPoolAllowance, useCLFeeManager];\n});\n_c = Loan;\nvar _c;\n$RefreshReg$(_c, \"Loan\");","map":{"version":3,"names":["useWeb3React","React","useCallback","useEffect","useState","useCLFeeManager","useCLPoolAllowance","useAppDispatch","ChooseAmountModal","setCLBorrowAllowanceApprove","setCLBorrowAmount","CL_BORROW_STEP","Loan","creditRecordStatic","creditAvailableAmount","poolInfo","dispatch","account","poolUnderlyingToken","symbol","approved","poolName","getFeesCharged","chargedFees","setChargedFees","currentAmount","setCurrentAmount","handleChangeAmount","newAmount","newChargedFees","handleAction","step","TransferMoney","ApproveAllowance","requestLoan","aprInBps"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/vouch-finance/vouch-finance-frontend/src/features/sdk/CreditLine/components/borrow/Loan.tsx"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport React, { useCallback, useEffect, useState } from 'react'\n\nimport {\n  useCLFeeManager,\n  useCLPoolAllowance,\n} from '../../../../../hooks/useCLPoolContract'\nimport { CreditRecordStaticType } from '../../../../../hooks/usePoolContract'\nimport { useAppDispatch } from '../../../../../hooks/useRedux'\nimport { PoolInfoType } from '../../../../../utils/pool'\nimport { ChooseAmountModal } from '../../../components'\nimport {\n  setCLBorrowAllowanceApprove,\n  setCLBorrowAmount,\n} from '../../store/creditLine.reducers'\nimport { CL_BORROW_STEP } from '../../store/creditLine.store'\n\ntype Props = {\n  creditRecordStatic: CreditRecordStaticType\n  creditAvailableAmount: number\n  poolInfo: PoolInfoType\n}\n\nexport function Loan({\n  creditRecordStatic,\n  creditAvailableAmount,\n  poolInfo,\n}: Props): React.ReactElement | null {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const { poolUnderlyingToken } = poolInfo\n  const { symbol } = poolUnderlyingToken\n  const { approved } = useCLPoolAllowance(poolInfo.poolName, account)\n  const { getFeesCharged } = useCLFeeManager(poolInfo.poolName)\n  const [chargedFees, setChargedFees] = useState(0)\n  const [currentAmount, setCurrentAmount] = useState(0)\n\n  useEffect(() => {\n    dispatch(setCLBorrowAllowanceApprove(approved))\n  }, [approved, dispatch])\n\n  const handleChangeAmount = useCallback(\n    (newAmount: number) => {\n      setCurrentAmount(newAmount)\n      const newChargedFees = getFeesCharged(newAmount)\n      setChargedFees(newChargedFees)\n    },\n    [getFeesCharged],\n  )\n\n  const handleAction = useCallback(() => {\n    const step = approved\n      ? CL_BORROW_STEP.TransferMoney\n      : CL_BORROW_STEP.ApproveAllowance\n    dispatch(\n      setCLBorrowAmount({\n        requestLoan: currentAmount,\n        chargedFees,\n        step,\n      }),\n    )\n  }, [approved, chargedFees, currentAmount, dispatch])\n\n  return (\n    <ChooseAmountModal\n      title='Borrow'\n      description1='Choose Amount'\n      sliderMax={creditAvailableAmount}\n      currentAmount={currentAmount}\n      tokenSymbol={symbol}\n      topLeft='Origination Fee'\n      topRight={`${chargedFees} ${symbol}`}\n      downLeft='APR'\n      downRight={`${creditRecordStatic.aprInBps / 100}%`}\n      handleChangeAmount={handleChangeAmount}\n      handleAction={handleAction}\n      actionText='borrow'\n    />\n  )\n}\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE/D,SACEC,eAAe,EACfC,kBAAkB,QACb,wCAAwC;AAE/C,SAASC,cAAc,QAAQ,+BAA+B;AAE9D,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SACEC,2BAA2B,EAC3BC,iBAAiB,QACZ,iCAAiC;AACxC,SAASC,cAAc,QAAQ,8BAA8B;AAAA;AAQ7D,OAAO,SAASC,IAAI,OAIiB;EAAA;EAAA,IAJhB;IACnBC,kBAAkB;IAClBC,qBAAqB;IACrBC;EACK,CAAC;EACN,MAAMC,QAAQ,GAAGT,cAAc,EAAE;EACjC,MAAM;IAAEU;EAAQ,CAAC,GAAGjB,YAAY,EAAE;EAClC,MAAM;IAAEkB;EAAoB,CAAC,GAAGH,QAAQ;EACxC,MAAM;IAAEI;EAAO,CAAC,GAAGD,mBAAmB;EACtC,MAAM;IAAEE;EAAS,CAAC,GAAGd,kBAAkB,CAACS,QAAQ,CAACM,QAAQ,EAAEJ,OAAO,CAAC;EACnE,MAAM;IAAEK;EAAe,CAAC,GAAGjB,eAAe,CAACU,QAAQ,CAACM,QAAQ,CAAC;EAC7D,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAErDD,SAAS,CAAC,MAAM;IACda,QAAQ,CAACP,2BAA2B,CAACW,QAAQ,CAAC,CAAC;EACjD,CAAC,EAAE,CAACA,QAAQ,EAAEJ,QAAQ,CAAC,CAAC;EAExB,MAAMW,kBAAkB,GAAGzB,WAAW,CACnC0B,SAAiB,IAAK;IACrBF,gBAAgB,CAACE,SAAS,CAAC;IAC3B,MAAMC,cAAc,GAAGP,cAAc,CAACM,SAAS,CAAC;IAChDJ,cAAc,CAACK,cAAc,CAAC;EAChC,CAAC,EACD,CAACP,cAAc,CAAC,CACjB;EAED,MAAMQ,YAAY,GAAG5B,WAAW,CAAC,MAAM;IACrC,MAAM6B,IAAI,GAAGX,QAAQ,GACjBT,cAAc,CAACqB,aAAa,GAC5BrB,cAAc,CAACsB,gBAAgB;IACnCjB,QAAQ,CACNN,iBAAiB,CAAC;MAChBwB,WAAW,EAAET,aAAa;MAC1BF,WAAW;MACXQ;IACF,CAAC,CAAC,CACH;EACH,CAAC,EAAE,CAACX,QAAQ,EAAEG,WAAW,EAAEE,aAAa,EAAET,QAAQ,CAAC,CAAC;EAEpD,OACE,KAAC,iBAAiB;IAChB,KAAK,EAAC,QAAQ;IACd,YAAY,EAAC,eAAe;IAC5B,SAAS,EAAEF,qBAAsB;IACjC,aAAa,EAAEW,aAAc;IAC7B,WAAW,EAAEN,MAAO;IACpB,OAAO,EAAC,iBAAiB;IACzB,QAAQ,EAAG,GAAEI,WAAY,IAAGJ,MAAO,EAAE;IACrC,QAAQ,EAAC,KAAK;IACd,SAAS,EAAG,GAAEN,kBAAkB,CAACsB,QAAQ,GAAG,GAAI,GAAG;IACnD,kBAAkB,EAAER,kBAAmB;IACvC,YAAY,EAAEG,YAAa;IAC3B,UAAU,EAAC;EAAQ,EACnB;AAEN;AAAC,GAxDelB,IAAI;EAAA,QAKDL,cAAc,EACXP,YAAY,EAGXM,kBAAkB,EACZD,eAAe;AAAA;AAAA,KAV5BO,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}