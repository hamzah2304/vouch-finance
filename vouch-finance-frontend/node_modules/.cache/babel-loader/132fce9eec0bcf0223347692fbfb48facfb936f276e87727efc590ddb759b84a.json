{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/vouch-finance/vouch-finance-frontend/src/features/sdk/Lend/components/LendSDK.tsx\",\n  _s = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport React from 'react';\nimport { usePoolAllowance, usePoolUnderlyingTokenBalance, useWithdrawlLockoutInSeconds } from '../../../../hooks/usePoolContract';\nimport { Supply } from './supply/Supply';\nimport { Withdraw } from './withdraw/Withdraw';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function LendSDK(_ref) {\n  _s();\n  let {\n    lenderPosition,\n    lenderApproved,\n    poolInfo,\n    isOpen,\n    handleClose,\n    handleApprove,\n    handleSuccess,\n    actionType\n  } = _ref;\n  const {\n    account\n  } = useWeb3React();\n  const underlyingTokenBalance = usePoolUnderlyingTokenBalance(poolInfo.poolName, poolInfo.poolType, account);\n  const {\n    allowance\n  } = usePoolAllowance(poolInfo.poolName, poolInfo.poolType, account);\n  const withdrawlLockoutSeconds = useWithdrawlLockoutInSeconds(poolInfo.poolName, poolInfo.poolType);\n\n  // when close modal, return null to make sure all the states are reset\n  if (!isOpen) {\n    return null;\n  }\n  if (actionType === 'supply') {\n    return _jsx(Supply, {\n      underlyingTokenBalance: underlyingTokenBalance,\n      withdrawlLockoutSeconds: withdrawlLockoutSeconds,\n      allowance: allowance,\n      lenderApproved: lenderApproved,\n      poolInfo: poolInfo,\n      isOpen: isOpen,\n      handleClose: handleClose,\n      handleApprove: handleApprove,\n      handleSuccess: handleSuccess\n    });\n  }\n  if (actionType === 'withdraw') {\n    return _jsx(Withdraw, {\n      lenderPosition: lenderPosition,\n      withdrawlLockoutSeconds: withdrawlLockoutSeconds,\n      poolInfo: poolInfo,\n      isOpen: isOpen,\n      handleClose: handleClose,\n      handleSuccess: handleSuccess\n    });\n  }\n  return null;\n}\n_s(LendSDK, \"+geICISne2o/E7bCSAI54QmXWX4=\", false, function () {\n  return [useWeb3React, usePoolUnderlyingTokenBalance, usePoolAllowance, useWithdrawlLockoutInSeconds];\n});\n_c = LendSDK;\nvar _c;\n$RefreshReg$(_c, \"LendSDK\");","map":{"version":3,"names":["useWeb3React","React","usePoolAllowance","usePoolUnderlyingTokenBalance","useWithdrawlLockoutInSeconds","Supply","Withdraw","LendSDK","lenderPosition","lenderApproved","poolInfo","isOpen","handleClose","handleApprove","handleSuccess","actionType","account","underlyingTokenBalance","poolName","poolType","allowance","withdrawlLockoutSeconds"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/vouch-finance/vouch-finance-frontend/src/features/sdk/Lend/components/LendSDK.tsx"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport { BigNumber } from 'ethers'\nimport React from 'react'\n\nimport {\n  usePoolAllowance,\n  usePoolUnderlyingTokenBalance,\n  useWithdrawlLockoutInSeconds,\n} from '../../../../hooks/usePoolContract'\nimport { PoolInfoType } from '../../../../utils/pool'\nimport { Supply } from './supply/Supply'\nimport { Withdraw } from './withdraw/Withdraw'\n\ntype Props = {\n  lenderPosition: BigNumber | undefined\n  lenderApproved: boolean\n  poolInfo: PoolInfoType\n  isOpen: boolean\n  handleClose: () => void\n  handleApprove: () => void\n  handleSuccess: (blockNumber: number) => void\n  actionType: 'supply' | 'withdraw'\n}\n\nexport function LendSDK({\n  lenderPosition,\n  lenderApproved,\n  poolInfo,\n  isOpen,\n  handleClose,\n  handleApprove,\n  handleSuccess,\n  actionType,\n}: Props): React.ReactElement | null {\n  const { account } = useWeb3React()\n  const underlyingTokenBalance = usePoolUnderlyingTokenBalance(\n    poolInfo.poolName,\n    poolInfo.poolType,\n    account,\n  )\n  const { allowance } = usePoolAllowance(\n    poolInfo.poolName,\n    poolInfo.poolType,\n    account,\n  )\n  const withdrawlLockoutSeconds = useWithdrawlLockoutInSeconds(\n    poolInfo.poolName,\n    poolInfo.poolType,\n  )\n\n  // when close modal, return null to make sure all the states are reset\n  if (!isOpen) {\n    return null\n  }\n\n  if (actionType === 'supply') {\n    return (\n      <Supply\n        underlyingTokenBalance={underlyingTokenBalance}\n        withdrawlLockoutSeconds={withdrawlLockoutSeconds}\n        allowance={allowance}\n        lenderApproved={lenderApproved}\n        poolInfo={poolInfo}\n        isOpen={isOpen}\n        handleClose={handleClose}\n        handleApprove={handleApprove}\n        handleSuccess={handleSuccess}\n      />\n    )\n  }\n  if (actionType === 'withdraw') {\n    return (\n      <Withdraw\n        lenderPosition={lenderPosition}\n        withdrawlLockoutSeconds={withdrawlLockoutSeconds}\n        poolInfo={poolInfo}\n        isOpen={isOpen}\n        handleClose={handleClose}\n        handleSuccess={handleSuccess}\n      />\n    )\n  }\n\n  return null\n}\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAE/C,OAAOC,KAAK,MAAM,OAAO;AAEzB,SACEC,gBAAgB,EAChBC,6BAA6B,EAC7BC,4BAA4B,QACvB,mCAAmC;AAE1C,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,QAAQ,QAAQ,qBAAqB;AAAA;AAa9C,OAAO,SAASC,OAAO,OASc;EAAA;EAAA,IATb;IACtBC,cAAc;IACdC,cAAc;IACdC,QAAQ;IACRC,MAAM;IACNC,WAAW;IACXC,aAAa;IACbC,aAAa;IACbC;EACK,CAAC;EACN,MAAM;IAAEC;EAAQ,CAAC,GAAGhB,YAAY,EAAE;EAClC,MAAMiB,sBAAsB,GAAGd,6BAA6B,CAC1DO,QAAQ,CAACQ,QAAQ,EACjBR,QAAQ,CAACS,QAAQ,EACjBH,OAAO,CACR;EACD,MAAM;IAAEI;EAAU,CAAC,GAAGlB,gBAAgB,CACpCQ,QAAQ,CAACQ,QAAQ,EACjBR,QAAQ,CAACS,QAAQ,EACjBH,OAAO,CACR;EACD,MAAMK,uBAAuB,GAAGjB,4BAA4B,CAC1DM,QAAQ,CAACQ,QAAQ,EACjBR,QAAQ,CAACS,QAAQ,CAClB;;EAED;EACA,IAAI,CAACR,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEA,IAAII,UAAU,KAAK,QAAQ,EAAE;IAC3B,OACE,KAAC,MAAM;MACL,sBAAsB,EAAEE,sBAAuB;MAC/C,uBAAuB,EAAEI,uBAAwB;MACjD,SAAS,EAAED,SAAU;MACrB,cAAc,EAAEX,cAAe;MAC/B,QAAQ,EAAEC,QAAS;MACnB,MAAM,EAAEC,MAAO;MACf,WAAW,EAAEC,WAAY;MACzB,aAAa,EAAEC,aAAc;MAC7B,aAAa,EAAEC;IAAc,EAC7B;EAEN;EACA,IAAIC,UAAU,KAAK,UAAU,EAAE;IAC7B,OACE,KAAC,QAAQ;MACP,cAAc,EAAEP,cAAe;MAC/B,uBAAuB,EAAEa,uBAAwB;MACjD,QAAQ,EAAEX,QAAS;MACnB,MAAM,EAAEC,MAAO;MACf,WAAW,EAAEC,WAAY;MACzB,aAAa,EAAEE;IAAc,EAC7B;EAEN;EAEA,OAAO,IAAI;AACb;AAAC,GA5DeP,OAAO;EAAA,QAUDP,YAAY,EACDG,6BAA6B,EAKtCD,gBAAgB,EAKNE,4BAA4B;AAAA;AAAA,KArB9CG,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}