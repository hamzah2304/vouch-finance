{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/components/TransferModal.tsx\",\n  _s = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect } from 'react';\nimport { useContractFunction } from '../../../hooks/useContractFunction';\nimport useMount from '../../../hooks/useMount';\nimport { usePoolContract } from '../../../hooks/usePoolContract';\nimport { useAppDispatch } from '../../../hooks/useRedux';\nimport { TxStateType } from '../../../utils/transaction';\nimport { LoadingModal } from './LoadingModal';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function TransferModal(_ref) {\n  _s();\n  let {\n    poolInfo,\n    title,\n    method,\n    params,\n    handleSuccess\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    provider\n  } = useWeb3React();\n  const poolContract = usePoolContract(poolInfo.poolName, poolInfo.poolType);\n  const {\n    state,\n    send\n  } = useContractFunction(state => state);\n  useEffect(() => {\n    if (state === TxStateType.Success) {\n      handleSuccess();\n    }\n  }, [dispatch, handleSuccess, state]);\n  useMount(() => {\n    send(poolContract, method, params, provider);\n  });\n  return _jsx(LoadingModal, {\n    title: title !== null && title !== void 0 ? title : 'Transaction Pending',\n    description: \"Waiting for confirmation...\"\n  });\n}\n_s(TransferModal, \"fLw9vrLUF9bdm9Prd8Gm+f9fE04=\", false, function () {\n  return [useAppDispatch, useWeb3React, usePoolContract, useContractFunction, useMount];\n});\n_c = TransferModal;\nvar _c;\n$RefreshReg$(_c, \"TransferModal\");","map":{"version":3,"names":["useWeb3React","React","useEffect","useContractFunction","useMount","usePoolContract","useAppDispatch","TxStateType","LoadingModal","TransferModal","poolInfo","title","method","params","handleSuccess","dispatch","provider","poolContract","poolName","poolType","state","send","Success"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/components/TransferModal.tsx"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport React, { useEffect } from 'react'\nimport { useContractFunction } from '../../../hooks/useContractFunction'\nimport useMount from '../../../hooks/useMount'\nimport { usePoolContract } from '../../../hooks/usePoolContract'\nimport { useAppDispatch } from '../../../hooks/useRedux'\nimport { PoolInfoType } from '../../../utils/pool'\nimport { TxStateType } from '../../../utils/transaction'\nimport { LoadingModal } from './LoadingModal'\n\ntype Props = {\n  poolInfo: PoolInfoType\n  method: string\n  params: unknown[]\n  handleSuccess: () => void\n  title?: string\n}\n\nexport function TransferModal({\n  poolInfo,\n  title,\n  method,\n  params,\n  handleSuccess,\n}: Props): React.ReactElement {\n  const dispatch = useAppDispatch()\n  const { provider } = useWeb3React()\n  const poolContract = usePoolContract(poolInfo.poolName, poolInfo.poolType)\n  const { state, send } = useContractFunction((state) => state)\n\n  useEffect(() => {\n    if (state === TxStateType.Success) {\n      handleSuccess()\n    }\n  }, [dispatch, handleSuccess, state])\n\n  useMount(() => {\n    send(poolContract!, method, params, provider)\n  })\n\n  return (\n    <LoadingModal\n      title={title ?? 'Transaction Pending'}\n      description='Waiting for confirmation...'\n    />\n  )\n}\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,mBAAmB,QAAQ,oCAAoC;AACxE,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,cAAc,QAAQ,yBAAyB;AAExD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,YAAY,QAAQ,gBAAgB;AAAA;AAU7C,OAAO,SAASC,aAAa,OAMC;EAAA;EAAA,IANA;IAC5BC,QAAQ;IACRC,KAAK;IACLC,MAAM;IACNC,MAAM;IACNC;EACK,CAAC;EACN,MAAMC,QAAQ,GAAGT,cAAc,EAAE;EACjC,MAAM;IAAEU;EAAS,CAAC,GAAGhB,YAAY,EAAE;EACnC,MAAMiB,YAAY,GAAGZ,eAAe,CAACK,QAAQ,CAACQ,QAAQ,EAAER,QAAQ,CAACS,QAAQ,CAAC;EAC1E,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGlB,mBAAmB,CAAEiB,KAAK,IAAKA,KAAK,CAAC;EAE7DlB,SAAS,CAAC,MAAM;IACd,IAAIkB,KAAK,KAAKb,WAAW,CAACe,OAAO,EAAE;MACjCR,aAAa,EAAE;IACjB;EACF,CAAC,EAAE,CAACC,QAAQ,EAAED,aAAa,EAAEM,KAAK,CAAC,CAAC;EAEpChB,QAAQ,CAAC,MAAM;IACbiB,IAAI,CAACJ,YAAY,EAAGL,MAAM,EAAEC,MAAM,EAAEG,QAAQ,CAAC;EAC/C,CAAC,CAAC;EAEF,OACE,KAAC,YAAY;IACX,KAAK,EAAEL,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,qBAAsB;IACtC,WAAW,EAAC;EAA6B,EACzC;AAEN;AAAC,GA5BeF,aAAa;EAAA,QAOVH,cAAc,EACVN,YAAY,EACZK,eAAe,EACZF,mBAAmB,EAQ3CC,QAAQ;AAAA;AAAA,KAlBMK,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}