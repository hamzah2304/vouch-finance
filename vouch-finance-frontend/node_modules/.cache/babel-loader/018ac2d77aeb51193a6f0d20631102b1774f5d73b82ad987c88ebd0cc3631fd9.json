{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/vouch-finance/vouch-finance-frontend/src/features/sdk/Lend/components/supply/Supply.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect } from 'react';\nimport { HumaModal, HumaModalHeader } from '../../../../../components/humaModal';\nimport { useContractFunction } from '../../../../../hooks/useContractFunction';\nimport useMount from '../../../../../hooks/useMount';\nimport { useAppDispatch, useAppSelector } from '../../../../../hooks/useRedux';\nimport { downScale } from '../../../../../utils/number';\nimport { isTxFailed } from '../../../../../utils/transaction';\nimport { ErrorModal } from '../../../components';\nimport { resetAfterSuccess, setSupplyError, setSupplyNextStep } from '../../store/lend.reducers';\nimport { selectLendState } from '../../store/lend.selectors';\nimport { LEND_SUPPLY_STEP } from '../../store/lend.store';\nimport { ApproveAllowance } from './ApproveAllowance';\nimport { CheckingEA } from './CheckingEA';\nimport { ChooseAmount } from './ChooseAmount';\nimport { Success } from './Success';\nimport { Transfer } from './Transfer';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport function Supply(_ref) {\n  _s();\n  let {\n    underlyingTokenBalance,\n    withdrawlLockoutSeconds,\n    allowance,\n    lenderApproved,\n    poolInfo,\n    isOpen,\n    handleClose,\n    handleApprove,\n    handleSuccess\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    poolUnderlyingToken\n  } = poolInfo;\n  const {\n    decimals\n  } = poolUnderlyingToken;\n  const {\n    supplyStep,\n    errorMessage,\n    supplyAmount\n  } = useAppSelector(selectLendState);\n  const {\n    state,\n    failReason,\n    reset,\n    txReceipt\n  } = useContractFunction(state => state);\n  const balanceWithoutDecimals = downScale(underlyingTokenBalance, decimals);\n  useMount(() => {\n    if (lenderApproved) {\n      dispatch(setSupplyNextStep());\n    }\n  });\n  useEffect(() => {\n    if (isTxFailed(state) && failReason) {\n      dispatch(setSupplyError(failReason));\n    }\n  }, [dispatch, failReason, state]);\n  useEffect(() => {\n    if (supplyStep === LEND_SUPPLY_STEP.Done && txReceipt) {\n      handleSuccess(txReceipt.blockNumber);\n    }\n  }, [handleSuccess, poolInfo.pool, supplyAmount, supplyStep, txReceipt]);\n  const handleCloseModal = useCallback(() => {\n    reset();\n    dispatch(resetAfterSuccess());\n    handleClose();\n  }, [dispatch, handleClose, reset]);\n\n  // when close modal, return null to make sure all the states are reset\n  if (!isOpen) {\n    return null;\n  }\n  return _jsxs(HumaModal, {\n    isOpen: isOpen,\n    overflowY: \"auto\",\n    onClose: handleCloseModal,\n    width: \"480px\",\n    padding: \"30px 40px\",\n    disableBackdropClick: true,\n    children: [_jsx(HumaModalHeader, {\n      onClose: handleCloseModal,\n      height: 0\n    }), supplyStep === LEND_SUPPLY_STEP.ApproveLender && _jsx(CheckingEA, {\n      poolInfo: poolInfo,\n      handleApprove: handleApprove\n    }), supplyStep === LEND_SUPPLY_STEP.ChooseAmount && _jsx(ChooseAmount, {\n      allowance: allowance,\n      withdrawlLockoutSeconds: withdrawlLockoutSeconds,\n      underlyingTokenBalance: balanceWithoutDecimals,\n      poolInfo: poolInfo\n    }), supplyStep === LEND_SUPPLY_STEP.ApproveAllowance && _jsx(ApproveAllowance, {\n      poolInfo: poolInfo\n    }), supplyStep === LEND_SUPPLY_STEP.TransferMoney && _jsx(Transfer, {\n      poolInfo: poolInfo\n    }), supplyStep === LEND_SUPPLY_STEP.Done && _jsx(Success, {\n      poolInfo: poolInfo,\n      handleAction: handleCloseModal\n    }), supplyStep === LEND_SUPPLY_STEP.Error && _jsx(ErrorModal, {\n      title: \"Supply\",\n      errorReason: \"Sorry there was an error\",\n      errorMessage: errorMessage,\n      handleOk: handleCloseModal\n    })]\n  });\n}\n_s(Supply, \"fR0dIuip3lTY8PEstI4kyKG8TIM=\", false, function () {\n  return [useAppDispatch, useAppSelector, useContractFunction, useMount];\n});\n_c = Supply;\nvar _c;\n$RefreshReg$(_c, \"Supply\");","map":{"version":3,"names":["React","useCallback","useEffect","HumaModal","HumaModalHeader","useContractFunction","useMount","useAppDispatch","useAppSelector","downScale","isTxFailed","ErrorModal","resetAfterSuccess","setSupplyError","setSupplyNextStep","selectLendState","LEND_SUPPLY_STEP","ApproveAllowance","CheckingEA","ChooseAmount","Success","Transfer","Supply","underlyingTokenBalance","withdrawlLockoutSeconds","allowance","lenderApproved","poolInfo","isOpen","handleClose","handleApprove","handleSuccess","dispatch","poolUnderlyingToken","decimals","supplyStep","errorMessage","supplyAmount","state","failReason","reset","txReceipt","balanceWithoutDecimals","Done","blockNumber","pool","handleCloseModal","ApproveLender","TransferMoney","Error"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/vouch-finance/vouch-finance-frontend/src/features/sdk/Lend/components/supply/Supply.tsx"],"sourcesContent":["import { BigNumber } from 'ethers'\nimport React, { useCallback, useEffect } from 'react'\n\nimport { HumaModal, HumaModalHeader } from '../../../../../components/humaModal'\nimport { useContractFunction } from '../../../../../hooks/useContractFunction'\nimport useMount from '../../../../../hooks/useMount'\nimport { useAppDispatch, useAppSelector } from '../../../../../hooks/useRedux'\nimport { downScale } from '../../../../../utils/number'\nimport { PoolInfoType } from '../../../../../utils/pool'\nimport { isTxFailed } from '../../../../../utils/transaction'\nimport { ErrorModal } from '../../../components'\nimport {\n  resetAfterSuccess,\n  setSupplyError,\n  setSupplyNextStep,\n} from '../../store/lend.reducers'\nimport { selectLendState } from '../../store/lend.selectors'\nimport { LEND_SUPPLY_STEP } from '../../store/lend.store'\nimport { ApproveAllowance } from './ApproveAllowance'\nimport { CheckingEA } from './CheckingEA'\nimport { ChooseAmount } from './ChooseAmount'\nimport { Success } from './Success'\nimport { Transfer } from './Transfer'\n\ntype Props = {\n  underlyingTokenBalance: BigNumber\n  withdrawlLockoutSeconds: number | undefined\n  allowance: BigNumber\n  lenderApproved: boolean\n  poolInfo: PoolInfoType\n  isOpen: boolean\n  handleClose: () => void\n  handleApprove: () => void\n  handleSuccess: (blockNumber: number) => void\n}\n\nexport function Supply({\n  underlyingTokenBalance,\n  withdrawlLockoutSeconds,\n  allowance,\n  lenderApproved,\n  poolInfo,\n  isOpen,\n  handleClose,\n  handleApprove,\n  handleSuccess,\n}: Props): React.ReactElement | null {\n  const dispatch = useAppDispatch()\n  const { poolUnderlyingToken } = poolInfo\n  const { decimals } = poolUnderlyingToken\n  const { supplyStep, errorMessage, supplyAmount } =\n    useAppSelector(selectLendState)\n  const { state, failReason, reset, txReceipt } = useContractFunction(\n    (state) => state,\n  )\n  const balanceWithoutDecimals = downScale(underlyingTokenBalance, decimals)\n\n  useMount(() => {\n    if (lenderApproved) {\n      dispatch(setSupplyNextStep())\n    }\n  })\n\n  useEffect(() => {\n    if (isTxFailed(state) && failReason) {\n      dispatch(setSupplyError(failReason))\n    }\n  }, [dispatch, failReason, state])\n\n  useEffect(() => {\n    if (supplyStep === LEND_SUPPLY_STEP.Done && txReceipt) {\n      handleSuccess(txReceipt.blockNumber)\n    }\n  }, [handleSuccess, poolInfo.pool, supplyAmount, supplyStep, txReceipt])\n\n  const handleCloseModal = useCallback(() => {\n    reset()\n    dispatch(resetAfterSuccess())\n    handleClose()\n  }, [dispatch, handleClose, reset])\n\n  // when close modal, return null to make sure all the states are reset\n  if (!isOpen) {\n    return null\n  }\n\n  return (\n    <HumaModal\n      isOpen={isOpen}\n      overflowY='auto'\n      onClose={handleCloseModal}\n      width='480px'\n      padding='30px 40px'\n      disableBackdropClick\n    >\n      <HumaModalHeader onClose={handleCloseModal} height={0} />\n      {supplyStep === LEND_SUPPLY_STEP.ApproveLender && (\n        <CheckingEA poolInfo={poolInfo} handleApprove={handleApprove} />\n      )}\n      {supplyStep === LEND_SUPPLY_STEP.ChooseAmount && (\n        <ChooseAmount\n          allowance={allowance}\n          withdrawlLockoutSeconds={withdrawlLockoutSeconds}\n          underlyingTokenBalance={balanceWithoutDecimals}\n          poolInfo={poolInfo}\n        />\n      )}\n      {supplyStep === LEND_SUPPLY_STEP.ApproveAllowance && (\n        <ApproveAllowance poolInfo={poolInfo} />\n      )}\n      {supplyStep === LEND_SUPPLY_STEP.TransferMoney && (\n        <Transfer poolInfo={poolInfo} />\n      )}\n      {supplyStep === LEND_SUPPLY_STEP.Done && (\n        <Success poolInfo={poolInfo} handleAction={handleCloseModal} />\n      )}\n      {supplyStep === LEND_SUPPLY_STEP.Error && (\n        <ErrorModal\n          title='Supply'\n          errorReason='Sorry there was an error'\n          errorMessage={errorMessage}\n          handleOk={handleCloseModal}\n        />\n      )}\n    </HumaModal>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}