{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/CreditLine/components/payment/Success.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport transferAbi from '../../../../../abis/Transfer.json';\nimport { useContractFunction } from '../../../../../hooks/useContractFunction';\nimport { downScale, formatMoney } from '../../../../../utils/number';\nimport { decodeLogs } from '../../../../../utils/transaction';\nimport { TxDoneModal } from '../../../components/TxDoneModal';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function Success(_ref) {\n  _s();\n  let {\n    poolInfo,\n    handleAction\n  } = _ref;\n  const {\n    symbol,\n    decimals\n  } = poolInfo.poolUnderlyingToken;\n  const txReceipt = useContractFunction(state => state.txReceipt);\n  const [payedAmount, setPayedAmount] = useState();\n  useEffect(() => {\n    if (txReceipt) {\n      const [event] = decodeLogs(txReceipt.logs, transferAbi);\n      if (event) {\n        const payedAmount = downScale(event.args.value.toString(), decimals);\n        setPayedAmount(payedAmount);\n      }\n    }\n  }, [decimals, txReceipt]);\n  const content = [`You successfully paid ${formatMoney(payedAmount)} ${symbol}.`];\n  return _jsx(TxDoneModal, {\n    handleAction: handleAction,\n    content: content\n  });\n}\n_s(Success, \"ckC9d3dp/llH4raKgxLlTDC750o=\", false, function () {\n  return [useContractFunction];\n});\n_c = Success;\nvar _c;\n$RefreshReg$(_c, \"Success\");","map":{"version":3,"names":["React","useEffect","useState","transferAbi","useContractFunction","downScale","formatMoney","decodeLogs","TxDoneModal","Success","poolInfo","handleAction","symbol","decimals","poolUnderlyingToken","txReceipt","state","payedAmount","setPayedAmount","event","logs","args","value","toString","content"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/CreditLine/components/payment/Success.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport transferAbi from '../../../../../abis/Transfer.json'\nimport { useContractFunction } from '../../../../../hooks/useContractFunction'\nimport { downScale, formatMoney } from '../../../../../utils/number'\nimport { PoolInfoType } from '../../../../../utils/pool'\nimport { decodeLogs } from '../../../../../utils/transaction'\nimport { TxDoneModal } from '../../../components/TxDoneModal'\n\ntype Props = {\n  poolInfo: PoolInfoType\n  handleAction: () => void\n}\n\nexport function Success({ poolInfo, handleAction }: Props): React.ReactElement {\n  const { symbol, decimals } = poolInfo.poolUnderlyingToken\n  const txReceipt = useContractFunction((state) => state.txReceipt)\n  const [payedAmount, setPayedAmount] = useState<string | undefined>()\n\n  useEffect(() => {\n    if (txReceipt) {\n      const [event] = decodeLogs(txReceipt.logs, transferAbi)\n      if (event) {\n        const payedAmount = downScale(event.args.value.toString(), decimals)\n        setPayedAmount(payedAmount)\n      }\n    }\n  }, [decimals, txReceipt])\n\n  const content = [\n    `You successfully paid ${formatMoney(payedAmount)} ${symbol}.`,\n  ]\n\n  return <TxDoneModal handleAction={handleAction} content={content} />\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,SAASC,mBAAmB,QAAQ,0CAA0C;AAC9E,SAASC,SAAS,EAAEC,WAAW,QAAQ,6BAA6B;AAEpE,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,WAAW,QAAQ,iCAAiC;AAAA;AAO7D,OAAO,SAASC,OAAO,OAAwD;EAAA;EAAA,IAAvD;IAAEC,QAAQ;IAAEC;EAAoB,CAAC;EACvD,MAAM;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAGH,QAAQ,CAACI,mBAAmB;EACzD,MAAMC,SAAS,GAAGX,mBAAmB,CAAEY,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC;EACjE,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,EAAsB;EAEpED,SAAS,CAAC,MAAM;IACd,IAAIc,SAAS,EAAE;MACb,MAAM,CAACI,KAAK,CAAC,GAAGZ,UAAU,CAACQ,SAAS,CAACK,IAAI,EAAEjB,WAAW,CAAC;MACvD,IAAIgB,KAAK,EAAE;QACT,MAAMF,WAAW,GAAGZ,SAAS,CAACc,KAAK,CAACE,IAAI,CAACC,KAAK,CAACC,QAAQ,EAAE,EAAEV,QAAQ,CAAC;QACpEK,cAAc,CAACD,WAAW,CAAC;MAC7B;IACF;EACF,CAAC,EAAE,CAACJ,QAAQ,EAAEE,SAAS,CAAC,CAAC;EAEzB,MAAMS,OAAO,GAAG,CACb,yBAAwBlB,WAAW,CAACW,WAAW,CAAE,IAAGL,MAAO,GAAE,CAC/D;EAED,OAAO,KAAC,WAAW;IAAC,YAAY,EAAED,YAAa;IAAC,OAAO,EAAEa;EAAQ,EAAG;AACtE;AAAC,GApBef,OAAO;EAAA,QAEHL,mBAAmB;AAAA;AAAA,KAFvBK,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}