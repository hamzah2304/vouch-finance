{"ast":null,"code":"import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport { useDebugValue } from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\nconst {\n  useSyncExternalStoreWithSelector\n} = useSyncExternalStoreExports;\nfunction useStore(api) {\n  let selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : api.getState;\n  let equalityFn = arguments.length > 2 ? arguments[2] : undefined;\n  const slice = useSyncExternalStoreWithSelector(api.subscribe, api.getState, api.getServerState || api.getState, selector, equalityFn);\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = createState => {\n  if (process.env.NODE_ENV !== \"production\" && typeof createState !== \"function\") {\n    console.warn('[DEPRECATED] Passing a vanilla store will be unsupported in the future version. Please use `import { useStore } from \"zustand\"` to use the vanilla store in React.');\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = createState => createState ? createImpl(createState) : createImpl;\nvar react = createState => {\n  if (process.env.NODE_ENV !== \"production\") {\n    console.warn(\"[DEPRECATED] default export is deprecated, instead import { create } from'zustand'\");\n  }\n  return create(createState);\n};\nexport { create, react as default, useStore };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}