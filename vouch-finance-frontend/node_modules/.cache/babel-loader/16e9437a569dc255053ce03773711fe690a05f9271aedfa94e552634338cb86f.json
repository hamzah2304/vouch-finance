{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'tunnit',\n  minutes: 'minuutit',\n  seconds: 'sekuntit'\n};\nconst viewTranslation = {\n  calendar: 'kalenteri',\n  clock: 'kello'\n};\nconst fiFIPickers = {\n  // Calendar navigation\n  previousMonth: 'Edellinen kuukausi',\n  nextMonth: 'Seuraava kuukausi',\n  // View navigation\n  openPreviousView: 'avaa edellinen kuukausi',\n  openNextView: 'avaa seuraava kuukausi',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'vuosinäkymä on auki, vaihda kalenterinäkymään' : 'kalenterinäkymä on auki, vaihda vuosinäkymään',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `tekstikenttä on auki, mene ${viewTranslation[viewType]}näkymään` : `${viewTranslation[viewType]}näkymä on auki, mene tekstikenttään`,\n  // DateRange placeholders\n  start: 'Alku',\n  end: 'Loppu',\n  // Action bar\n  cancelButtonLabel: 'Peruuta',\n  clearButtonLabel: 'Tyhjennä',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Tänään',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Valitse päivä',\n  dateTimePickerDefaultToolbarTitle: 'Valitse päivä ja aika',\n  timePickerDefaultToolbarTitle: 'Valitse aika',\n  dateRangePickerDefaultToolbarTitle: 'Valitse aikaväli',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Valitse ${views[view]}. ${time === null ? 'Ei aikaa valittuna' : `Valittu aika on ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} tuntia`,\n  minutesClockNumberText: minutes => `${minutes} minuuttia`,\n  secondsClockNumberText: seconds => `${seconds} sekunttia`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Valitse päivä, valittu päivä on ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Valitse päivä',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Valitse aika, valittu aika on ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Valitse aika',\n  // Table labels\n  timeTableLabel: 'valitse aika',\n  dateTableLabel: 'valitse päivä'\n};\nexport const fiFI = getPickersLocalization(fiFIPickers);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}