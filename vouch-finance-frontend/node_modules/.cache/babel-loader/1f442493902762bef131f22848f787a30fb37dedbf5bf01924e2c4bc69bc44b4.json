{"ast":null,"code":"import { useCore } from \"@spectral-finance/react-core\";\nimport React, { useEffect } from \"react\";\nimport { DialogSteps, useDialogStepsContext } from \"../../contexts/DialogStepsContext\";\nimport { useSpectral } from \"../../contexts/SpectralContext\";\nimport { Dialog } from \"../Dialog\";\nimport { Bundle } from \"./steps/Bundle\";\nimport { Faq } from \"./steps/Faq\";\nimport { Onboarding } from \"./steps/Onboarding\";\nimport { Success } from \"./steps/Success\";\nimport { WalletConnection } from \"./steps/WalletConnection\";\nexport const SpectralDialog = _ref => {\n  let {\n    partnerLogo,\n    onScoreComputed\n  } = _ref;\n  const {\n    close\n  } = useSpectral();\n  const {\n    currentStep\n  } = useDialogStepsContext();\n  const {\n    score,\n    account\n  } = useCore();\n  useEffect(() => {\n    console.log({\n      currentStep\n    });\n  }, [currentStep]);\n  useEffect(() => {\n    if (!score.toString()) return;\n    onScoreComputed(score.score);\n  }, [score]);\n  return React.createElement(Dialog, {\n    open: true,\n    onClose: close\n  }, (() => {\n    switch (currentStep) {\n      case DialogSteps.ONBOARDING:\n        return React.createElement(Onboarding, {\n          partnerLogo: partnerLogo\n        });\n      case DialogSteps.FAQ:\n        return React.createElement(Faq, null);\n      case DialogSteps.WALLET_CONNECTION:\n        {\n          if (account.minted) {\n            return React.createElement(Bundle, null);\n          }\n          return React.createElement(WalletConnection, null);\n        }\n      case DialogSteps.BUNDLE:\n        return React.createElement(Bundle, null);\n      case DialogSteps.SUCCESS:\n        return React.createElement(Success, null);\n    }\n  })());\n};\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}