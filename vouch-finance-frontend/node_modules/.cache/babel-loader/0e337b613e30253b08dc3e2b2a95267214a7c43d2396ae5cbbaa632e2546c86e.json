{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport appReducers from './app/store/app.reducers';\nimport walletReducers from './features/wallet/store/wallet.reducers';\nimport borrowReducers from './features/borrow/store/borrow.reducers';\nimport creditLineReducers from './features/sdk/CreditLine/store/creditLine.reducers';\nimport lendReducers from './features/sdk/Lend/store/lend.reducers';\nexport const store = configureStore({\n  reducer: {\n    app: appReducers,\n    wallet: walletReducers,\n    borrow: borrowReducers,\n    creditLine: creditLineReducers,\n    lend: lendReducers\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['wallet/setConnector'],\n      ignoredPaths: ['wallet.connectors.MetaMask']\n    }\n  })\n});","map":{"version":3,"names":["configureStore","appReducers","walletReducers","borrowReducers","creditLineReducers","lendReducers","store","reducer","app","wallet","borrow","creditLine","lend","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/store.ts"],"sourcesContent":["import {\n  Action,\n  ActionCreator,\n  AnyAction,\n  configureStore,\n  ThunkAction,\n} from '@reduxjs/toolkit'\n\nimport appReducers from './app/store/app.reducers'\nimport walletReducers from './features/wallet/store/wallet.reducers'\nimport borrowReducers from './features/borrow/store/borrow.reducers'\nimport creditLineReducers from './features/sdk/CreditLine/store/creditLine.reducers'\nimport lendReducers from './features/sdk/Lend/store/lend.reducers'\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducers,\n    wallet: walletReducers,\n    borrow: borrowReducers,\n    creditLine: creditLineReducers,\n    lend: lendReducers,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['wallet/setConnector'],\n        ignoredPaths: ['wallet.connectors.MetaMask'],\n      },\n    }),\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type AppActionThunk<ReturnType = void> = ActionCreator<\n  ThunkAction<ReturnType, RootState, unknown, AnyAction>\n>\n"],"mappings":"AAAA,SAIEA,cAAc,QAET,kBAAkB;AAEzB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,cAAc,MAAM,yCAAyC;AACpE,OAAOC,cAAc,MAAM,yCAAyC;AACpE,OAAOC,kBAAkB,MAAM,qDAAqD;AACpF,OAAOC,YAAY,MAAM,yCAAyC;AAElE,OAAO,MAAMC,KAAK,GAAGN,cAAc,CAAC;EAClCO,OAAO,EAAE;IACPC,GAAG,EAAEP,WAAW;IAChBQ,MAAM,EAAEP,cAAc;IACtBQ,MAAM,EAAEP,cAAc;IACtBQ,UAAU,EAAEP,kBAAkB;IAC9BQ,IAAI,EAAEP;EACR,CAAC;EACDQ,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,qBAAqB,CAAC;MACvCC,YAAY,EAAE,CAAC,4BAA4B;IAC7C;EACF,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}