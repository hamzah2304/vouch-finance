{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KeyValueStorage = void 0;\nconst tslib_1 = require(\"tslib\");\nconst safe_json_utils_1 = require(\"safe-json-utils\");\nconst localStorage_1 = tslib_1.__importDefault(require(\"./lib/localStorage\"));\nconst shared_1 = require(\"../shared\");\nclass KeyValueStorage {\n  constructor() {\n    this.localStorage = localStorage_1.default;\n  }\n  getKeys() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      return Object.keys(this.localStorage);\n    });\n  }\n  getEntries() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      return Object.entries(this.localStorage).map(shared_1.parseEntry);\n    });\n  }\n  getItem(key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      const item = this.localStorage.getItem(key);\n      if (item === null) {\n        return undefined;\n      }\n      return safe_json_utils_1.safeJsonParse(item);\n    });\n  }\n  setItem(key, value) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      this.localStorage.setItem(key, safe_json_utils_1.safeJsonStringify(value));\n    });\n  }\n  removeItem(key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      this.localStorage.removeItem(key);\n    });\n  }\n}\nexports.KeyValueStorage = KeyValueStorage;\nexports.default = KeyValueStorage;\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}