{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport var defaultThrottleConfig = {\n  leading: true,\n  trailing: false\n};\nexport function throttle(durationSelector, config) {\n  if (config === void 0) {\n    config = defaultThrottleConfig;\n  }\n  return function (source) {\n    return source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n  };\n}\nvar ThrottleOperator = /*@__PURE__*/function () {\n  function ThrottleOperator(durationSelector, leading, trailing) {\n    this.durationSelector = durationSelector;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n  ThrottleOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n  };\n  return ThrottleOperator;\n}();\nvar ThrottleSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ThrottleSubscriber, _super);\n  function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n    var _this = _super.call(this, destination) || this;\n    _this.destination = destination;\n    _this.durationSelector = durationSelector;\n    _this._leading = _leading;\n    _this._trailing = _trailing;\n    _this._hasValue = false;\n    return _this;\n  }\n  ThrottleSubscriber.prototype._next = function (value) {\n    this._hasValue = true;\n    this._sendValue = value;\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  };\n  ThrottleSubscriber.prototype.send = function () {\n    var _a = this,\n      _hasValue = _a._hasValue,\n      _sendValue = _a._sendValue;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue);\n    }\n    this._hasValue = false;\n    this._sendValue = undefined;\n  };\n  ThrottleSubscriber.prototype.throttle = function (value) {\n    var duration = this.tryDurationSelector(value);\n    if (!!duration) {\n      this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n    }\n  };\n  ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  };\n  ThrottleSubscriber.prototype.throttlingDone = function () {\n    var _a = this,\n      _throttled = _a._throttled,\n      _trailing = _a._trailing;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = undefined;\n    if (_trailing) {\n      this.send();\n    }\n  };\n  ThrottleSubscriber.prototype.notifyNext = function () {\n    this.throttlingDone();\n  };\n  ThrottleSubscriber.prototype.notifyComplete = function () {\n    this.throttlingDone();\n  };\n  return ThrottleSubscriber;\n}(SimpleOuterSubscriber);\n//# sourceMappingURL=throttle.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}