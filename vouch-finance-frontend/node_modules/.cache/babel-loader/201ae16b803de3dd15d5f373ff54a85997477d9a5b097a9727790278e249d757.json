{"ast":null,"code":"'use strict';\n\nconst processFn = (fn, options, proxy, unwrapped) => function () {\n  for (var _len = arguments.length, arguments_ = new Array(_len), _key = 0; _key < _len; _key++) {\n    arguments_[_key] = arguments[_key];\n  }\n  const P = options.promiseModule;\n  return new P((resolve, reject) => {\n    if (options.multiArgs) {\n      arguments_.push(function () {\n        for (var _len2 = arguments.length, result = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          result[_key2] = arguments[_key2];\n        }\n        if (options.errorFirst) {\n          if (result[0]) {\n            reject(result);\n          } else {\n            result.shift();\n            resolve(result);\n          }\n        } else {\n          resolve(result);\n        }\n      });\n    } else if (options.errorFirst) {\n      arguments_.push((error, result) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n    } else {\n      arguments_.push(resolve);\n    }\n    const self = this === proxy ? unwrapped : this;\n    Reflect.apply(fn, self, arguments_);\n  });\n};\nconst filterCache = new WeakMap();\nmodule.exports = (input, options) => {\n  options = {\n    exclude: [/.+(?:Sync|Stream)$/],\n    errorFirst: true,\n    promiseModule: Promise,\n    ...options\n  };\n  const objectType = typeof input;\n  if (!(input !== null && (objectType === 'object' || objectType === 'function'))) {\n    throw new TypeError(`Expected \\`input\\` to be a \\`Function\\` or \\`Object\\`, got \\`${input === null ? 'null' : objectType}\\``);\n  }\n  const filter = (target, key) => {\n    let cached = filterCache.get(target);\n    if (!cached) {\n      cached = {};\n      filterCache.set(target, cached);\n    }\n    if (key in cached) {\n      return cached[key];\n    }\n    const match = pattern => typeof pattern === 'string' || typeof key === 'symbol' ? key === pattern : pattern.test(key);\n    const desc = Reflect.getOwnPropertyDescriptor(target, key);\n    const writableOrConfigurableOwn = desc === undefined || desc.writable || desc.configurable;\n    const included = options.include ? options.include.some(match) : !options.exclude.some(match);\n    const shouldFilter = included && writableOrConfigurableOwn;\n    cached[key] = shouldFilter;\n    return shouldFilter;\n  };\n  const cache = new WeakMap();\n  const proxy = new Proxy(input, {\n    apply(target, thisArg, args) {\n      const cached = cache.get(target);\n      if (cached) {\n        return Reflect.apply(cached, thisArg, args);\n      }\n      const pified = options.excludeMain ? target : processFn(target, options, proxy, target);\n      cache.set(target, pified);\n      return Reflect.apply(pified, thisArg, args);\n    },\n    get(target, key) {\n      const property = target[key];\n\n      // eslint-disable-next-line no-use-extend-native/no-use-extend-native\n      if (!filter(target, key) || property === Function.prototype[key]) {\n        return property;\n      }\n      const cached = cache.get(property);\n      if (cached) {\n        return cached;\n      }\n      if (typeof property === 'function') {\n        const pified = processFn(property, options, proxy, target);\n        cache.set(property, pified);\n        return pified;\n      }\n      return property;\n    }\n  });\n  return proxy;\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}