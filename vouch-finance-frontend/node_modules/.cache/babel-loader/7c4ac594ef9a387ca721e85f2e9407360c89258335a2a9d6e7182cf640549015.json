{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function audit(durationSelector) {\n  return function auditOperatorFunction(source) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\nvar AuditOperator = /*@__PURE__*/function () {\n  function AuditOperator(durationSelector) {\n    this.durationSelector = durationSelector;\n  }\n  AuditOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n  };\n  return AuditOperator;\n}();\nvar AuditSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AuditSubscriber, _super);\n  function AuditSubscriber(destination, durationSelector) {\n    var _this = _super.call(this, destination) || this;\n    _this.durationSelector = durationSelector;\n    _this.hasValue = false;\n    return _this;\n  }\n  AuditSubscriber.prototype._next = function (value) {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      var duration = void 0;\n      try {\n        var durationSelector = this.durationSelector;\n        duration = durationSelector(value);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n      var innerSubscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n      if (!innerSubscription || innerSubscription.closed) {\n        this.clearThrottle();\n      } else {\n        this.add(this.throttled = innerSubscription);\n      }\n    }\n  };\n  AuditSubscriber.prototype.clearThrottle = function () {\n    var _a = this,\n      value = _a.value,\n      hasValue = _a.hasValue,\n      throttled = _a.throttled;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = undefined;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = undefined;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  };\n  AuditSubscriber.prototype.notifyNext = function () {\n    this.clearThrottle();\n  };\n  AuditSubscriber.prototype.notifyComplete = function () {\n    this.clearThrottle();\n  };\n  return AuditSubscriber;\n}(SimpleOuterSubscriber);\n//# sourceMappingURL=audit.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}