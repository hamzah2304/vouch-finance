{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/Lend/components/withdraw/ChooseAmount.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useAppDispatch } from '../../../../../hooks/useRedux';\nimport { downScale } from '../../../../../utils/number';\nimport { ChooseAmountModal } from '../../../components';\nimport { setWithdrawAmount, setWithdrawStep } from '../../store/lend.reducers';\nimport { LEND_WITHDRAW_STEP } from '../../store/lend.store';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function ChooseAmount(_ref) {\n  _s();\n  let {\n    lenderPosition,\n    poolInfo\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    poolUnderlyingToken\n  } = poolInfo;\n  const {\n    symbol,\n    decimals\n  } = poolUnderlyingToken;\n  const [currentAmount, setCurrentAmount] = useState(0);\n  const withdrawableAmount = downScale(lenderPosition, decimals);\n  const handleChangeAmount = useCallback(newAmount => {\n    setCurrentAmount(newAmount);\n    dispatch(setWithdrawAmount(newAmount));\n  }, [dispatch]);\n  const handleAction = useCallback(() => {\n    dispatch(setWithdrawStep(LEND_WITHDRAW_STEP.TransferMoney));\n  }, [dispatch]);\n  return _jsx(ChooseAmountModal, {\n    title: `Withdraw ${symbol}`,\n    description1: \"Choose Amount\",\n    sliderMax: Number(withdrawableAmount),\n    currentAmount: currentAmount,\n    tokenSymbol: symbol,\n    handleChangeAmount: handleChangeAmount,\n    handleAction: handleAction,\n    actionText: \"withdraw\",\n    hideTerms: true\n  });\n}\n_s(ChooseAmount, \"ZcPe4prSricFJucYhLaNarVR+Fs=\", false, function () {\n  return [useAppDispatch];\n});\n_c = ChooseAmount;\nvar _c;\n$RefreshReg$(_c, \"ChooseAmount\");","map":{"version":3,"names":["React","useCallback","useState","useAppDispatch","downScale","ChooseAmountModal","setWithdrawAmount","setWithdrawStep","LEND_WITHDRAW_STEP","ChooseAmount","lenderPosition","poolInfo","dispatch","poolUnderlyingToken","symbol","decimals","currentAmount","setCurrentAmount","withdrawableAmount","handleChangeAmount","newAmount","handleAction","TransferMoney","Number"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/Lend/components/withdraw/ChooseAmount.tsx"],"sourcesContent":["import { BigNumber } from 'ethers'\nimport React, { useCallback, useState } from 'react'\n\nimport { useAppDispatch } from '../../../../../hooks/useRedux'\nimport { downScale } from '../../../../../utils/number'\nimport { PoolInfoType } from '../../../../../utils/pool'\nimport { ChooseAmountModal } from '../../../components'\nimport { setWithdrawAmount, setWithdrawStep } from '../../store/lend.reducers'\nimport { LEND_WITHDRAW_STEP } from '../../store/lend.store'\n\ntype Props = {\n  lenderPosition: BigNumber\n  poolInfo: PoolInfoType\n}\n\nexport function ChooseAmount({\n  lenderPosition,\n  poolInfo,\n}: Props): React.ReactElement | null {\n  const dispatch = useAppDispatch()\n  const { poolUnderlyingToken } = poolInfo\n  const { symbol, decimals } = poolUnderlyingToken\n  const [currentAmount, setCurrentAmount] = useState(0)\n  const withdrawableAmount = downScale<number>(lenderPosition, decimals)\n\n  const handleChangeAmount = useCallback(\n    (newAmount: number) => {\n      setCurrentAmount(newAmount)\n      dispatch(setWithdrawAmount(newAmount))\n    },\n    [dispatch],\n  )\n\n  const handleAction = useCallback(() => {\n    dispatch(setWithdrawStep(LEND_WITHDRAW_STEP.TransferMoney))\n  }, [dispatch])\n\n  return (\n    <ChooseAmountModal\n      title={`Withdraw ${symbol}`}\n      description1='Choose Amount'\n      sliderMax={Number(withdrawableAmount)}\n      currentAmount={currentAmount}\n      tokenSymbol={symbol}\n      handleChangeAmount={handleChangeAmount}\n      handleAction={handleAction}\n      actionText='withdraw'\n      hideTerms\n    />\n  )\n}\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAEpD,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,iBAAiB,EAAEC,eAAe,QAAQ,2BAA2B;AAC9E,SAASC,kBAAkB,QAAQ,wBAAwB;AAAA;AAO3D,OAAO,SAASC,YAAY,OAGS;EAAA;EAAA,IAHR;IAC3BC,cAAc;IACdC;EACK,CAAC;EACN,MAAMC,QAAQ,GAAGT,cAAc,EAAE;EACjC,MAAM;IAAEU;EAAoB,CAAC,GAAGF,QAAQ;EACxC,MAAM;IAAEG,MAAM;IAAEC;EAAS,CAAC,GAAGF,mBAAmB;EAChD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAMgB,kBAAkB,GAAGd,SAAS,CAASM,cAAc,EAAEK,QAAQ,CAAC;EAEtE,MAAMI,kBAAkB,GAAGlB,WAAW,CACnCmB,SAAiB,IAAK;IACrBH,gBAAgB,CAACG,SAAS,CAAC;IAC3BR,QAAQ,CAACN,iBAAiB,CAACc,SAAS,CAAC,CAAC;EACxC,CAAC,EACD,CAACR,QAAQ,CAAC,CACX;EAED,MAAMS,YAAY,GAAGpB,WAAW,CAAC,MAAM;IACrCW,QAAQ,CAACL,eAAe,CAACC,kBAAkB,CAACc,aAAa,CAAC,CAAC;EAC7D,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,OACE,KAAC,iBAAiB;IAChB,KAAK,EAAG,YAAWE,MAAO,EAAE;IAC5B,YAAY,EAAC,eAAe;IAC5B,SAAS,EAAES,MAAM,CAACL,kBAAkB,CAAE;IACtC,aAAa,EAAEF,aAAc;IAC7B,WAAW,EAAEF,MAAO;IACpB,kBAAkB,EAAEK,kBAAmB;IACvC,YAAY,EAAEE,YAAa;IAC3B,UAAU,EAAC,UAAU;IACrB,SAAS;EAAA,EACT;AAEN;AAAC,GAnCeZ,YAAY;EAAA,QAITN,cAAc;AAAA;AAAA,KAJjBM,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}