{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectDialog = void 0;\nconst clsx_1 = __importDefault(require(\"clsx\"));\nconst preact_1 = require(\"preact\");\nconst hooks_1 = require(\"preact/hooks\");\nconst ConnectContent_1 = require(\"../ConnectContent/ConnectContent\");\nconst TryExtensionContent_1 = require(\"../TryExtensionContent/TryExtensionContent\");\nconst ConnectDialog_css_1 = __importDefault(require(\"./ConnectDialog-css\"));\nconst ConnectDialog = props => {\n  const {\n    isOpen,\n    darkMode\n  } = props;\n  const [containerHidden, setContainerHidden] = (0, hooks_1.useState)(!isOpen);\n  const [dialogHidden, setDialogHidden] = (0, hooks_1.useState)(!isOpen);\n  (0, hooks_1.useEffect)(() => {\n    const timers = [window.setTimeout(() => {\n      setDialogHidden(!isOpen);\n    }, 10)];\n    if (isOpen) {\n      setContainerHidden(false);\n    } else {\n      timers.push(window.setTimeout(() => {\n        setContainerHidden(true);\n      }, 360));\n    }\n    return () => {\n      timers.forEach(window.clearTimeout);\n    };\n  }, [props.isOpen]);\n  const theme = darkMode ? \"dark\" : \"light\";\n  return (0, preact_1.h)(\"div\", {\n    class: (0, clsx_1.default)(\"-cbwsdk-connect-dialog-container\", containerHidden && \"-cbwsdk-connect-dialog-container-hidden\")\n  }, (0, preact_1.h)(\"style\", null, ConnectDialog_css_1.default), (0, preact_1.h)(\"div\", {\n    class: (0, clsx_1.default)(\"-cbwsdk-connect-dialog-backdrop\", theme, dialogHidden && \"-cbwsdk-connect-dialog-backdrop-hidden\")\n  }), (0, preact_1.h)(\"div\", {\n    class: \"-cbwsdk-connect-dialog\"\n  }, (0, preact_1.h)(\"div\", {\n    class: (0, clsx_1.default)(\"-cbwsdk-connect-dialog-box\", dialogHidden && \"-cbwsdk-connect-dialog-box-hidden\")\n  }, !props.connectDisabled ? (0, preact_1.h)(ConnectContent_1.ConnectContent, {\n    theme: theme,\n    version: props.version,\n    sessionId: props.sessionId,\n    sessionSecret: props.sessionSecret,\n    linkAPIUrl: props.linkAPIUrl,\n    isConnected: props.isConnected,\n    isParentConnection: props.isParentConnection,\n    chainId: props.chainId,\n    onCancel: props.onCancel\n  }) : null, (0, preact_1.h)(TryExtensionContent_1.TryExtensionContent, {\n    theme: theme\n  }))));\n};\nexports.ConnectDialog = ConnectDialog;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}