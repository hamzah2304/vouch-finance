{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/lend/components/LendPools/LendCreditLinePool.tsx\",\n  _s = $RefreshSig$();\nimport { Button } from '@mui/material';\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { PoolInfo } from '../../../../components/layout/PoolInfo';\nimport { useCLLenderApproved, useCLLenderPosition, useCLPoolBalance, useCLPoolUnderlyingToken } from '../../../../hooks/useCLPoolContract';\nimport { useMQ } from '../../../../hooks/useMQ';\nimport { usePoolInfo } from '../../../../hooks/usePool';\nimport { useRefresh } from '../../../../hooks/useRefresh';\nimport { isEmpty } from '../../../../utils/common';\nimport { downScale, formatMoney } from '../../../../utils/number';\nimport { POOL_TYPE, PoolMap } from '../../../../utils/pool';\nimport { LendSDK } from '../../../sdk/Lend/components/LendSDK';\nimport { ConnectWalletButton } from '../../../wallet/components';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nexport function LendCreditLinePool(_ref) {\n  _s();\n  let {\n    poolName\n  } = _ref;\n  const {\n    isActive,\n    account\n  } = useWeb3React();\n  const {\n    isLgSize,\n    isSmSize\n  } = useMQ();\n  const poolInfo = usePoolInfo(poolName, POOL_TYPE.CreditLine);\n  const {\n    decimals\n  } = useCLPoolUnderlyingToken(poolName);\n  const [creditLinePoolBalance, refreshPoolBalance] = useCLPoolBalance(poolName);\n  const [lenderPosition, refreshLenderPosition] = useCLLenderPosition(poolName, account);\n  const [lenderApproved, refreshLenderApproved] = useCLLenderApproved(poolName, account);\n  const [actionType, setActionType] = useState();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [subscribe, loading] = useRefresh();\n  const buttonWith = useMemo(() => {\n    if (!isActive) {\n      return 205;\n    }\n    return isLgSize ? 180 : 132;\n  }, [isActive, isLgSize]);\n  const items = useMemo(() => {\n    const poolBalanceItem = {\n      id: 'credit-line-pool-balance',\n      title: 'Total pool balance',\n      value: isActive && !isEmpty(creditLinePoolBalance) ? formatMoney(downScale(creditLinePoolBalance, decimals)) : '--',\n      isLoading: isActive && isEmpty(creditLinePoolBalance) || loading\n    };\n    const estApyItem = {\n      id: 'credit-line-pool-apy',\n      title: 'Est APY',\n      value: '10-20%',\n      isLoading: false\n    };\n    const positionItem = {\n      id: 'credit-line-pool-position',\n      title: 'Your Position',\n      value: isActive && !isEmpty(lenderPosition) ? formatMoney(downScale(lenderPosition, decimals)) : '--',\n      isLoading: isActive && isEmpty(lenderPosition) || loading\n    };\n    return [poolBalanceItem, estApyItem, positionItem];\n  }, [creditLinePoolBalance, decimals, isActive, lenderPosition, loading]);\n  const handleSupply = () => {\n    setModalIsOpen(true);\n    setActionType('supply');\n  };\n  const handleWithDraw = () => {\n    setModalIsOpen(true);\n    setActionType('withdraw');\n  };\n  const buttons = useMemo(() => {\n    if (!isActive) {\n      return [_jsx(ConnectWalletButton, {\n        text: \"CONNECT YOUR WALLET\",\n        variant: \"contained\"\n      })];\n    }\n    return [_jsx(Button, {\n      variant: \"outlined\",\n      onClick: handleWithDraw,\n      disabled: lenderPosition === null || lenderPosition === void 0 ? void 0 : lenderPosition.lte(0),\n      children: \"WITHDRAW\"\n    }), _jsxs(Button, {\n      variant: \"contained\",\n      onClick: handleSupply,\n      children: [\"SUPPLY \", poolInfo === null || poolInfo === void 0 ? void 0 : poolInfo.poolUnderlyingToken.symbol]\n    })];\n  }, [isActive, lenderPosition, poolInfo === null || poolInfo === void 0 ? void 0 : poolInfo.poolUnderlyingToken.symbol]);\n  const handleClose = () => {\n    setModalIsOpen(false);\n    setActionType(undefined);\n  };\n  const handleApproveSuccess = useCallback(() => {\n    refreshLenderApproved();\n  }, [refreshLenderApproved]);\n  const handleSuccess = useCallback(blockNumber => {\n    const callbackFn = () => {\n      refreshPoolBalance();\n      refreshLenderPosition();\n    };\n    subscribe(blockNumber, callbackFn);\n  }, [refreshLenderPosition, refreshPoolBalance, subscribe]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(PoolInfo, {\n      id: \"credit-line-pool-lend\",\n      title: \"Credit Lines\",\n      description: PoolMap.CreditLine[poolName].lendDesc,\n      items: items,\n      buttons: buttons,\n      buttonWidth: buttonWith,\n      infoOneRow: !isSmSize\n    }), poolInfo && actionType && !isEmpty(lenderApproved) && _jsx(LendSDK, {\n      lenderPosition: lenderPosition,\n      lenderApproved: lenderApproved,\n      poolInfo: poolInfo,\n      isOpen: modalIsOpen,\n      handleClose: handleClose,\n      handleApprove: handleApproveSuccess,\n      handleSuccess: handleSuccess,\n      actionType: actionType\n    })]\n  });\n}\n_s(LendCreditLinePool, \"z864cd8Cou49cvOxRkeRLDMKZ7s=\", false, function () {\n  return [useWeb3React, useMQ, usePoolInfo, useCLPoolUnderlyingToken, useCLPoolBalance, useCLLenderPosition, useCLLenderApproved, useRefresh];\n});\n_c = LendCreditLinePool;\nvar _c;\n$RefreshReg$(_c, \"LendCreditLinePool\");","map":{"version":3,"names":["Button","useWeb3React","React","useCallback","useMemo","useState","PoolInfo","useCLLenderApproved","useCLLenderPosition","useCLPoolBalance","useCLPoolUnderlyingToken","useMQ","usePoolInfo","useRefresh","isEmpty","downScale","formatMoney","POOL_TYPE","PoolMap","LendSDK","ConnectWalletButton","LendCreditLinePool","poolName","isActive","account","isLgSize","isSmSize","poolInfo","CreditLine","decimals","creditLinePoolBalance","refreshPoolBalance","lenderPosition","refreshLenderPosition","lenderApproved","refreshLenderApproved","actionType","setActionType","modalIsOpen","setModalIsOpen","subscribe","loading","buttonWith","items","poolBalanceItem","id","title","value","isLoading","estApyItem","positionItem","handleSupply","handleWithDraw","buttons","lte","poolUnderlyingToken","symbol","handleClose","undefined","handleApproveSuccess","handleSuccess","blockNumber","callbackFn","lendDesc"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/lend/components/LendPools/LendCreditLinePool.tsx"],"sourcesContent":["import { Button } from '@mui/material'\nimport { useWeb3React } from '@web3-react/core'\nimport React, { useCallback, useMemo, useState } from 'react'\n\nimport { PoolInfo } from '../../../../components/layout/PoolInfo'\nimport {\n  useCLLenderApproved,\n  useCLLenderPosition,\n  useCLPoolBalance,\n  useCLPoolUnderlyingToken,\n} from '../../../../hooks/useCLPoolContract'\nimport { useMQ } from '../../../../hooks/useMQ'\nimport { usePoolInfo } from '../../../../hooks/usePool'\nimport { useRefresh } from '../../../../hooks/useRefresh'\nimport { isEmpty } from '../../../../utils/common'\nimport { downScale, formatMoney } from '../../../../utils/number'\nimport { POOL_NAME, POOL_TYPE, PoolMap } from '../../../../utils/pool'\nimport { LendSDK } from '../../../sdk/Lend/components/LendSDK'\nimport { ConnectWalletButton } from '../../../wallet/components'\n\ntype Props = {\n  poolName: POOL_NAME\n}\n\nexport function LendCreditLinePool({ poolName }: Props): React.ReactElement {\n  const { isActive, account } = useWeb3React()\n  const { isLgSize, isSmSize } = useMQ()\n  const poolInfo = usePoolInfo(poolName, POOL_TYPE.CreditLine)\n  const { decimals } = useCLPoolUnderlyingToken(poolName)\n  const [creditLinePoolBalance, refreshPoolBalance] = useCLPoolBalance(poolName)\n  const [lenderPosition, refreshLenderPosition] = useCLLenderPosition(\n    poolName,\n    account,\n  )\n  const [lenderApproved, refreshLenderApproved] = useCLLenderApproved(\n    poolName,\n    account,\n  )\n  const [actionType, setActionType] = useState<'supply' | 'withdraw'>()\n  const [modalIsOpen, setModalIsOpen] = useState(false)\n  const [subscribe, loading] = useRefresh()\n\n  const buttonWith = useMemo(() => {\n    if (!isActive) {\n      return 205\n    }\n    return isLgSize ? 180 : 132\n  }, [isActive, isLgSize])\n\n  const items = useMemo(() => {\n    const poolBalanceItem = {\n      id: 'credit-line-pool-balance',\n      title: 'Total pool balance',\n      value:\n        isActive && !isEmpty(creditLinePoolBalance)\n          ? formatMoney(downScale(creditLinePoolBalance!, decimals))\n          : '--',\n      isLoading: (isActive && isEmpty(creditLinePoolBalance)) || loading,\n    }\n    const estApyItem = {\n      id: 'credit-line-pool-apy',\n      title: 'Est APY',\n      value: '10-20%',\n      isLoading: false,\n    }\n    const positionItem = {\n      id: 'credit-line-pool-position',\n      title: 'Your Position',\n      value:\n        isActive && !isEmpty(lenderPosition)\n          ? formatMoney(downScale(lenderPosition!, decimals))\n          : '--',\n      isLoading: (isActive && isEmpty(lenderPosition)) || loading,\n    }\n    return [poolBalanceItem, estApyItem, positionItem]\n  }, [creditLinePoolBalance, decimals, isActive, lenderPosition, loading])\n\n  const handleSupply = () => {\n    setModalIsOpen(true)\n    setActionType('supply')\n  }\n\n  const handleWithDraw = () => {\n    setModalIsOpen(true)\n    setActionType('withdraw')\n  }\n\n  const buttons = useMemo(() => {\n    if (!isActive) {\n      return [\n        <ConnectWalletButton text='CONNECT YOUR WALLET' variant='contained' />,\n      ]\n    }\n    return [\n      <Button\n        variant='outlined'\n        onClick={handleWithDraw}\n        disabled={lenderPosition?.lte(0)}\n      >\n        WITHDRAW\n      </Button>,\n      <Button variant='contained' onClick={handleSupply}>\n        SUPPLY {poolInfo?.poolUnderlyingToken.symbol}\n      </Button>,\n    ]\n  }, [isActive, lenderPosition, poolInfo?.poolUnderlyingToken.symbol])\n\n  const handleClose = () => {\n    setModalIsOpen(false)\n    setActionType(undefined)\n  }\n\n  const handleApproveSuccess = useCallback(() => {\n    refreshLenderApproved()\n  }, [refreshLenderApproved])\n\n  const handleSuccess = useCallback(\n    (blockNumber: number) => {\n      const callbackFn = () => {\n        refreshPoolBalance()\n        refreshLenderPosition()\n      }\n      subscribe(blockNumber, callbackFn)\n    },\n    [refreshLenderPosition, refreshPoolBalance, subscribe],\n  )\n\n  return (\n    <>\n      <PoolInfo\n        id='credit-line-pool-lend'\n        title='Credit Lines'\n        description={PoolMap.CreditLine[poolName].lendDesc}\n        items={items}\n        buttons={buttons}\n        buttonWidth={buttonWith}\n        infoOneRow={!isSmSize}\n      />\n      {poolInfo && actionType && !isEmpty(lenderApproved) && (\n        <LendSDK\n          lenderPosition={lenderPosition}\n          lenderApproved={lenderApproved!}\n          poolInfo={poolInfo}\n          isOpen={modalIsOpen}\n          handleClose={handleClose}\n          handleApprove={handleApproveSuccess}\n          handleSuccess={handleSuccess}\n          actionType={actionType}\n        />\n      )}\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}