{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/Lend/components/withdraw/CheckingWithdrawble.tsx\",\n  _s = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useEffect, useState } from 'react';\nimport { useLastDepositTime } from '../../../../../hooks/usePoolContract';\nimport { useAppDispatch } from '../../../../../hooks/useRedux';\nimport { isEmpty } from '../../../../../utils/common';\nimport timeUtil from '../../../../../utils/time';\nimport { ErrorModal, LoadingModal } from '../../../components';\nimport { setWithdrawNextStep } from '../../store/lend.reducers';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function CheckingWithdrawable(_ref) {\n  _s();\n  let {\n    withdrawlLockoutSeconds,\n    poolInfo,\n    handleCloseModal\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const lastDepositTime = useLastDepositTime(poolInfo.poolName, poolInfo.poolType, account);\n  const {\n    symbol\n  } = poolInfo.poolUnderlyingToken;\n  const [status, setStatus] = useState('checking');\n  useEffect(() => {\n    if (!isEmpty(withdrawlLockoutSeconds) && !isEmpty(lastDepositTime)) {\n      const currentTimestamp = timeUtil.getUnixTimestamp();\n      if (lastDepositTime + withdrawlLockoutSeconds > currentTimestamp) {\n        setStatus('error');\n      } else {\n        dispatch(setWithdrawNextStep());\n      }\n    }\n  }, [dispatch, lastDepositTime, withdrawlLockoutSeconds]);\n  if (status === 'error') {\n    const errorMessage = `Your last deposit was on ${timeUtil.timestampToLL(lastDepositTime)}. Depositors need to wait for ${timeUtil.secondsToDays(withdrawlLockoutSeconds).toFixed(0)} days before withdrawal.`;\n    return _jsx(ErrorModal, {\n      title: `Withdraw ${symbol}`,\n      errorReason: \"Withdraw too soon\",\n      errorMessage: errorMessage,\n      handleOk: handleCloseModal\n    });\n  }\n  return _jsx(LoadingModal, {\n    title: `Withdraw ${symbol}`,\n    description: \"Checking withdrawable amount...\"\n  });\n}\n_s(CheckingWithdrawable, \"bFNjthdift0ZxQfuJCHugVFlwZg=\", false, function () {\n  return [useAppDispatch, useWeb3React, useLastDepositTime];\n});\n_c = CheckingWithdrawable;\nvar _c;\n$RefreshReg$(_c, \"CheckingWithdrawable\");","map":{"version":3,"names":["useWeb3React","React","useEffect","useState","useLastDepositTime","useAppDispatch","isEmpty","timeUtil","ErrorModal","LoadingModal","setWithdrawNextStep","CheckingWithdrawable","withdrawlLockoutSeconds","poolInfo","handleCloseModal","dispatch","account","lastDepositTime","poolName","poolType","symbol","poolUnderlyingToken","status","setStatus","currentTimestamp","getUnixTimestamp","errorMessage","timestampToLL","secondsToDays","toFixed"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/Lend/components/withdraw/CheckingWithdrawble.tsx"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport React, { useEffect, useState } from 'react'\n\nimport { useLastDepositTime } from '../../../../../hooks/usePoolContract'\nimport { useAppDispatch } from '../../../../../hooks/useRedux'\nimport { isEmpty } from '../../../../../utils/common'\nimport { PoolInfoType } from '../../../../../utils/pool'\nimport timeUtil from '../../../../../utils/time'\nimport { ErrorModal, LoadingModal } from '../../../components'\nimport { setWithdrawNextStep } from '../../store/lend.reducers'\n\ntype Props = {\n  withdrawlLockoutSeconds: number | undefined\n  poolInfo: PoolInfoType\n  handleCloseModal: () => void\n}\n\nexport function CheckingWithdrawable({\n  withdrawlLockoutSeconds,\n  poolInfo,\n  handleCloseModal,\n}: Props): React.ReactElement | null {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lastDepositTime = useLastDepositTime(\n    poolInfo.poolName,\n    poolInfo.poolType,\n    account,\n  )\n\n  const { symbol } = poolInfo.poolUnderlyingToken\n  const [status, setStatus] = useState<'checking' | 'error'>('checking')\n\n  useEffect(() => {\n    if (!isEmpty(withdrawlLockoutSeconds) && !isEmpty(lastDepositTime)) {\n      const currentTimestamp = timeUtil.getUnixTimestamp()\n      if (lastDepositTime! + withdrawlLockoutSeconds! > currentTimestamp) {\n        setStatus('error')\n      } else {\n        dispatch(setWithdrawNextStep())\n      }\n    }\n  }, [dispatch, lastDepositTime, withdrawlLockoutSeconds])\n\n  if (status === 'error') {\n    const errorMessage = `Your last deposit was on ${timeUtil.timestampToLL(\n      lastDepositTime,\n    )}. Depositors need to wait for ${timeUtil\n      .secondsToDays(withdrawlLockoutSeconds)\n      .toFixed(0)} days before withdrawal.`\n    return (\n      <ErrorModal\n        title={`Withdraw ${symbol}`}\n        errorReason='Withdraw too soon'\n        errorMessage={errorMessage}\n        handleOk={handleCloseModal}\n      />\n    )\n  }\n\n  return (\n    <LoadingModal\n      title={`Withdraw ${symbol}`}\n      description='Checking withdrawable amount...'\n    />\n  )\n}\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,kBAAkB,QAAQ,sCAAsC;AACzE,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,OAAO,QAAQ,6BAA6B;AAErD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAASC,UAAU,EAAEC,YAAY,QAAQ,qBAAqB;AAC9D,SAASC,mBAAmB,QAAQ,2BAA2B;AAAA;AAQ/D,OAAO,SAASC,oBAAoB,OAIC;EAAA;EAAA,IAJA;IACnCC,uBAAuB;IACvBC,QAAQ;IACRC;EACK,CAAC;EACN,MAAMC,QAAQ,GAAGV,cAAc,EAAE;EACjC,MAAM;IAAEW;EAAQ,CAAC,GAAGhB,YAAY,EAAE;EAClC,MAAMiB,eAAe,GAAGb,kBAAkB,CACxCS,QAAQ,CAACK,QAAQ,EACjBL,QAAQ,CAACM,QAAQ,EACjBH,OAAO,CACR;EAED,MAAM;IAAEI;EAAO,CAAC,GAAGP,QAAQ,CAACQ,mBAAmB;EAC/C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAuB,UAAU,CAAC;EAEtED,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,OAAO,CAACM,uBAAuB,CAAC,IAAI,CAACN,OAAO,CAACW,eAAe,CAAC,EAAE;MAClE,MAAMO,gBAAgB,GAAGjB,QAAQ,CAACkB,gBAAgB,EAAE;MACpD,IAAIR,eAAe,GAAIL,uBAAwB,GAAGY,gBAAgB,EAAE;QAClED,SAAS,CAAC,OAAO,CAAC;MACpB,CAAC,MAAM;QACLR,QAAQ,CAACL,mBAAmB,EAAE,CAAC;MACjC;IACF;EACF,CAAC,EAAE,CAACK,QAAQ,EAAEE,eAAe,EAAEL,uBAAuB,CAAC,CAAC;EAExD,IAAIU,MAAM,KAAK,OAAO,EAAE;IACtB,MAAMI,YAAY,GAAI,4BAA2BnB,QAAQ,CAACoB,aAAa,CACrEV,eAAe,CACf,iCAAgCV,QAAQ,CACvCqB,aAAa,CAAChB,uBAAuB,CAAC,CACtCiB,OAAO,CAAC,CAAC,CAAE,0BAAyB;IACvC,OACE,KAAC,UAAU;MACT,KAAK,EAAG,YAAWT,MAAO,EAAE;MAC5B,WAAW,EAAC,mBAAmB;MAC/B,YAAY,EAAEM,YAAa;MAC3B,QAAQ,EAAEZ;IAAiB,EAC3B;EAEN;EAEA,OACE,KAAC,YAAY;IACX,KAAK,EAAG,YAAWM,MAAO,EAAE;IAC5B,WAAW,EAAC;EAAiC,EAC7C;AAEN;AAAC,GAjDeT,oBAAoB;EAAA,QAKjBN,cAAc,EACXL,YAAY,EACRI,kBAAkB;AAAA;AAAA,KAP5BO,oBAAoB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}