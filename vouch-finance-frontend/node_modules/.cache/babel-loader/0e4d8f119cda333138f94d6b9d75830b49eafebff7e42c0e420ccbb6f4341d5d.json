{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/vouch-finance/vouch-finance-frontend/src/features/sdk/components/ApproveAllowanceModal.tsx\",\n  _s = $RefreshSig$();\nimport { MaxUint256 } from '@ethersproject/constants';\nimport { Box, css, useTheme } from '@mui/material';\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useCallback, useEffect } from 'react';\nimport { AutoPaybackIcon } from '../../../components/icons';\nimport { useContractFunction } from '../../../hooks/useContractFunction';\nimport useMount from '../../../hooks/useMount';\nimport { usePoolUnderlyingTokenContract } from '../../../hooks/usePoolContract';\nimport { TxStateType } from '../../../utils/transaction';\nimport { BottomButton } from './BottomButton';\nimport { LoadingModal } from './LoadingModal';\nimport { WrapperModal } from './WrapperModal';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport function ApproveAllowanceModal(_ref) {\n  _s();\n  let {\n    poolInfo,\n    handleSuccess,\n    showAutoPayback = false\n  } = _ref;\n  const theme = useTheme();\n  const {\n    provider\n  } = useWeb3React();\n  const {\n    poolUnderlyingToken\n  } = poolInfo;\n  const {\n    symbol\n  } = poolUnderlyingToken;\n  const poolUnderlyingTokenContract = usePoolUnderlyingTokenContract(poolInfo.poolName, poolInfo.poolType);\n  const {\n    state,\n    send,\n    reset\n  } = useContractFunction(state => state);\n  const waitingForAccept = state === TxStateType.New;\n  useEffect(() => {\n    if (state === TxStateType.Success) {\n      reset();\n      handleSuccess();\n    }\n  }, [handleSuccess, reset, state, symbol]);\n  const styles = {\n    iconWrapper: css`\n      ${theme.cssMixins.rowCentered};\n      margin-top: 30px;\n    `,\n    description: css`\n      margin-top: 14px;\n      font-family: 'Uni-Neue-Regular';\n      font-size: 16px;\n      color: #a8a1b2;\n      padding: 0 12px;\n    `\n  };\n  const sendApprove = useCallback(() => {\n    send(poolUnderlyingTokenContract, 'approve', [poolInfo.pool, MaxUint256], provider);\n  }, [poolInfo.pool, poolUnderlyingTokenContract, provider, send]);\n  useMount(() => {\n    if (!showAutoPayback) {\n      sendApprove();\n    }\n  });\n  if (showAutoPayback && waitingForAccept) {\n    return _jsxs(WrapperModal, {\n      title: \"Auto Payback\",\n      subTitle: \"Enable auto payback and never miss payments. You only need to do it once.\",\n      children: [_jsx(Box, {\n        css: styles.iconWrapper,\n        children: _jsx(AutoPaybackIcon, {})\n      }), _jsxs(Box, {\n        css: styles.description,\n        children: [\"This allowance transaction removes the need to confirm follow up\", ' ', symbol, \" transactions. Gas is on us.\"]\n      }), _jsxs(BottomButton, {\n        variant: \"contained\",\n        onClick: sendApprove,\n        children: [\"APPROVE \", symbol, \" PAYMENTS\"]\n      })]\n    });\n  }\n  return _jsx(LoadingModal, {\n    title: `Approve ${symbol}`,\n    description: \"Waiting for approval confirmation...\"\n  });\n}\n_s(ApproveAllowanceModal, \"Gza2wwuejx4QaARUEEsXrIsNF3U=\", false, function () {\n  return [useTheme, useWeb3React, usePoolUnderlyingTokenContract, useContractFunction, useMount];\n});\n_c = ApproveAllowanceModal;\nvar _c;\n$RefreshReg$(_c, \"ApproveAllowanceModal\");","map":{"version":3,"names":["MaxUint256","Box","css","useTheme","useWeb3React","React","useCallback","useEffect","AutoPaybackIcon","useContractFunction","useMount","usePoolUnderlyingTokenContract","TxStateType","BottomButton","LoadingModal","WrapperModal","ApproveAllowanceModal","poolInfo","handleSuccess","showAutoPayback","theme","provider","poolUnderlyingToken","symbol","poolUnderlyingTokenContract","poolName","poolType","state","send","reset","waitingForAccept","New","Success","styles","iconWrapper","cssMixins","rowCentered","description","sendApprove","pool"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/vouch-finance/vouch-finance-frontend/src/features/sdk/components/ApproveAllowanceModal.tsx"],"sourcesContent":["import { MaxUint256 } from '@ethersproject/constants'\nimport { Box, css, useTheme } from '@mui/material'\nimport { useWeb3React } from '@web3-react/core'\nimport React, { useCallback, useEffect } from 'react'\nimport { AutoPaybackIcon } from '../../../components/icons'\n\nimport { useContractFunction } from '../../../hooks/useContractFunction'\nimport useMount from '../../../hooks/useMount'\nimport { usePoolUnderlyingTokenContract } from '../../../hooks/usePoolContract'\nimport { PoolInfoType } from '../../../utils/pool'\nimport { TxStateType } from '../../../utils/transaction'\nimport { BottomButton } from './BottomButton'\nimport { LoadingModal } from './LoadingModal'\nimport { WrapperModal } from './WrapperModal'\n\ntype Props = {\n  poolInfo: PoolInfoType\n  handleSuccess: () => void\n  showAutoPayback?: boolean\n}\n\nexport function ApproveAllowanceModal({\n  poolInfo,\n  handleSuccess,\n  showAutoPayback = false,\n}: Props): React.ReactElement | null {\n  const theme = useTheme()\n  const { provider } = useWeb3React()\n  const { poolUnderlyingToken } = poolInfo\n  const { symbol } = poolUnderlyingToken\n  const poolUnderlyingTokenContract = usePoolUnderlyingTokenContract(\n    poolInfo.poolName,\n    poolInfo.poolType,\n  )\n  const { state, send, reset } = useContractFunction((state) => state)\n  const waitingForAccept = state === TxStateType.New\n\n  useEffect(() => {\n    if (state === TxStateType.Success) {\n      reset()\n      handleSuccess()\n    }\n  }, [handleSuccess, reset, state, symbol])\n\n  const styles = {\n    iconWrapper: css`\n      ${theme.cssMixins.rowCentered};\n      margin-top: 30px;\n    `,\n    description: css`\n      margin-top: 14px;\n      font-family: 'Uni-Neue-Regular';\n      font-size: 16px;\n      color: #a8a1b2;\n      padding: 0 12px;\n    `,\n  }\n\n  const sendApprove = useCallback(() => {\n    send(\n      poolUnderlyingTokenContract!,\n      'approve',\n      [poolInfo.pool, MaxUint256],\n      provider,\n    )\n  }, [poolInfo.pool, poolUnderlyingTokenContract, provider, send])\n\n  useMount(() => {\n    if (!showAutoPayback) {\n      sendApprove()\n    }\n  })\n\n  if (showAutoPayback && waitingForAccept) {\n    return (\n      <WrapperModal\n        title='Auto Payback'\n        subTitle='Enable auto payback and never miss payments. You only need to do it once.'\n      >\n        <Box css={styles.iconWrapper}>\n          <AutoPaybackIcon />\n        </Box>\n        <Box css={styles.description}>\n          This allowance transaction removes the need to confirm follow up{' '}\n          {symbol} transactions. Gas is on us.\n        </Box>\n        <BottomButton variant='contained' onClick={sendApprove}>\n          APPROVE {symbol} PAYMENTS\n        </BottomButton>\n      </WrapperModal>\n    )\n  }\n\n  return (\n    <LoadingModal\n      title={`Approve ${symbol}`}\n      description='Waiting for approval confirmation...'\n    />\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}