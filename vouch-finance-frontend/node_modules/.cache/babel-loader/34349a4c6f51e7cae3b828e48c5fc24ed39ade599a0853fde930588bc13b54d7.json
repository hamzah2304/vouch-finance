{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/CreditLine/components/payment/Transfer.tsx\",\n  _s = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport React, { useCallback } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../../../../hooks/useRedux';\nimport { toBigNumber, upScale } from '../../../../../utils/number';\nimport { TransferModal } from '../../../components/TransferModal';\nimport { setCLPaymentNextStep } from '../../store/creditLine.reducers';\nimport { selectCLState } from '../../store/creditLine.selectors';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function Transfer(_ref) {\n  _s();\n  let {\n    poolInfo\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    paymentAmount\n  } = useAppSelector(selectCLState);\n  const {\n    decimals\n  } = poolInfo.poolUnderlyingToken;\n  const paymentBigNumber = toBigNumber(upScale(paymentAmount, decimals));\n  const handleSuccess = useCallback(() => {\n    dispatch(setCLPaymentNextStep());\n  }, [dispatch]);\n  return _jsx(TransferModal, {\n    poolInfo: poolInfo,\n    method: \"makePayment\",\n    params: [account, paymentBigNumber],\n    handleSuccess: handleSuccess\n  });\n}\n_s(Transfer, \"8G74y70maIDCR0LhhHlNVHv1DtU=\", false, function () {\n  return [useAppDispatch, useWeb3React, useAppSelector];\n});\n_c = Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["useWeb3React","React","useCallback","useAppDispatch","useAppSelector","toBigNumber","upScale","TransferModal","setCLPaymentNextStep","selectCLState","Transfer","poolInfo","dispatch","account","paymentAmount","decimals","poolUnderlyingToken","paymentBigNumber","handleSuccess"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/sdk/CreditLine/components/payment/Transfer.tsx"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport React, { useCallback } from 'react'\n\nimport { useAppDispatch, useAppSelector } from '../../../../../hooks/useRedux'\nimport { toBigNumber, upScale } from '../../../../../utils/number'\nimport { PoolInfoType } from '../../../../../utils/pool'\nimport { TransferModal } from '../../../components/TransferModal'\nimport { setCLPaymentNextStep } from '../../store/creditLine.reducers'\nimport { selectCLState } from '../../store/creditLine.selectors'\n\ntype Props = {\n  poolInfo: PoolInfoType\n}\n\nexport function Transfer({ poolInfo }: Props): React.ReactElement {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const { paymentAmount } = useAppSelector(selectCLState)\n  const { decimals } = poolInfo.poolUnderlyingToken\n  const paymentBigNumber = toBigNumber(upScale(paymentAmount!, decimals))\n\n  const handleSuccess = useCallback(() => {\n    dispatch(setCLPaymentNextStep())\n  }, [dispatch])\n\n  return (\n    <TransferModal\n      poolInfo={poolInfo}\n      method='makePayment'\n      params={[account, paymentBigNumber]}\n      handleSuccess={handleSuccess}\n    />\n  )\n}\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAE1C,SAASC,cAAc,EAAEC,cAAc,QAAQ,+BAA+B;AAC9E,SAASC,WAAW,EAAEC,OAAO,QAAQ,6BAA6B;AAElE,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,oBAAoB,QAAQ,iCAAiC;AACtE,SAASC,aAAa,QAAQ,kCAAkC;AAAA;AAMhE,OAAO,SAASC,QAAQ,OAA0C;EAAA;EAAA,IAAzC;IAAEC;EAAgB,CAAC;EAC1C,MAAMC,QAAQ,GAAGT,cAAc,EAAE;EACjC,MAAM;IAAEU;EAAQ,CAAC,GAAGb,YAAY,EAAE;EAClC,MAAM;IAAEc;EAAc,CAAC,GAAGV,cAAc,CAACK,aAAa,CAAC;EACvD,MAAM;IAAEM;EAAS,CAAC,GAAGJ,QAAQ,CAACK,mBAAmB;EACjD,MAAMC,gBAAgB,GAAGZ,WAAW,CAACC,OAAO,CAACQ,aAAa,EAAGC,QAAQ,CAAC,CAAC;EAEvE,MAAMG,aAAa,GAAGhB,WAAW,CAAC,MAAM;IACtCU,QAAQ,CAACJ,oBAAoB,EAAE,CAAC;EAClC,CAAC,EAAE,CAACI,QAAQ,CAAC,CAAC;EAEd,OACE,KAAC,aAAa;IACZ,QAAQ,EAAED,QAAS;IACnB,MAAM,EAAC,aAAa;IACpB,MAAM,EAAE,CAACE,OAAO,EAAEI,gBAAgB,CAAE;IACpC,aAAa,EAAEC;EAAc,EAC7B;AAEN;AAAC,GAnBeR,QAAQ;EAAA,QACLP,cAAc,EACXH,YAAY,EACNI,cAAc;AAAA;AAAA,KAH1BM,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}