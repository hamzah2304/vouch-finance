{"ast":null,"code":"function walletLink(options) {\n  const {\n    darkMode = false\n  } = options || {};\n  return () => {\n    return {\n      label: 'Coinbase',\n      getIcon: async () => (await import('./icon.js')).default,\n      getInterface: async _ref => {\n        let {\n          chains,\n          appMetadata\n        } = _ref;\n        const [chain] = chains;\n        const {\n          name,\n          icon\n        } = appMetadata || {};\n        const {\n          WalletLink\n        } = await import('walletlink');\n        const base64 = window.btoa(icon || '');\n        const appLogoUrl = `data:image/svg+xml;base64,${base64}`;\n        const instance = new WalletLink({\n          appName: name || '',\n          appLogoUrl,\n          darkMode\n        });\n        const walletLinkProvider = instance.makeWeb3Provider(chain.rpcUrl, parseInt(chain.id));\n        // patch the chainChanged event\n        const on = walletLinkProvider.on.bind(walletLinkProvider);\n        walletLinkProvider.on = (event, listener) => {\n          on(event, val => {\n            if (event === 'chainChanged') {\n              listener(`0x${val.toString(16)}`);\n              return;\n            }\n            listener(val);\n          });\n          return walletLinkProvider;\n        };\n        return {\n          provider: walletLinkProvider,\n          instance\n        };\n      }\n    };\n  };\n}\n/**\n * @deprecated Use @web3-onboard/coinbase\n */\nexport default walletLink;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}