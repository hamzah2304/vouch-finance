{"ast":null,"code":"import styled, { keyframes } from \"styled-components\";\nimport transition from \"../../styles/transition\";\nimport SpectralNestedBox from \"../SpectralNestedBox\";\nexport const Container = styled.div`\n  position: relative;\n`;\nexport const Grade = styled.div`\n  ${transition.normal}\n\n  position: absolute;\n  top: -50%;\n  width: 100%;\n  margin-top: 4px;\n  transform: translateY(-50%);\n  text-align: center;\n  font-size: var(--fs12);\n  font-weight: 500;\n  color: #647693;\n  opacity: 0;\n\n  strong {\n    color: #221d3c;\n    display: block;\n    font-weight: 600;\n    font-size: var(--fs32);\n    line-height: 1.2em;\n  }\n`;\nconst valueSize = 88;\nexport const ValueWrapper = styled(SpectralNestedBox)`\n  ${transition.normal}\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n  width: ${valueSize}px;\n  height: ${valueSize}px;\n  border-radius: 50%;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: var(--fs30);\n  font-weight: 600;\n  color: #27292c;\n  position: relative;\n  overflow: hidden;\n  border: 1px solid #e6ecf3;\n  box-shadow: inset 0 0 0 0 ${_ref => {\n  let {\n    color\n  } = _ref;\n  return color;\n}},\n    0px 2px 16px rgba(0, 0, 0, 0.04);\n\n  span {\n    ${transition.normal}\n\n    position: relative;\n    transform: translateY(0);\n    opacity: 1;\n  }\n\n  ${Grade} strong {\n    color: ${_ref2 => {\n  let {\n    color\n  } = _ref2;\n  return color;\n}};\n  }\n\n  ${_ref3 => {\n  let {\n    noHover,\n    color\n  } = _ref3;\n  return !noHover && `\n    &:hover {\n      box-shadow: inset 0 0 0 3px ${color},\n        0px 2px 16px rgba(0, 0, 0, 0.04);\n\n      span {\n        transform: translateY(calc(${valueSize / 2}px + 100%));\n        opacity: 0;\n      }\n      ${Grade} {\n        top: 50%;\n        opacity: 1;\n      }\n    }\n  `;\n}}\n`;\nconst selectorPadding = 10;\nexport const ValueSelector = styled.div`\n  position: absolute;\n  left: 50%;\n  ${_ref4 => {\n  let {\n    strokeWidth,\n    canvas,\n    size\n  } = _ref4;\n  const ratio = size / canvas;\n  const selectorSize = Math.round((strokeWidth + selectorPadding) * ratio);\n  return `\n      top: ${size - selectorSize + selectorPadding / 2}px;\n      // margin-top: -${selectorSize - (selectorSize - strokeWidth) / 2}px;\n      margin-left: -${selectorSize / 2}px;\n      width: ${selectorSize}px;\n      height: ${selectorSize}px;\n      border-radius: 50%;\n      transform-origin: 50% -${size / 2 - selectorSize + selectorPadding / 2}px;\n    `;\n}}\n  ${_ref5 => {\n  let {\n    progress\n  } = _ref5;\n  return `transform: rotate(${progress * 360 / 100 + 4}deg);`;\n}}\n\n  box-shadow:\n    inset 0 0 0 4px #F9F9FF,\n    0 0 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid #dfe7f0;\n`;\nconst gaugeAura = keyframes`\n  from {\n    transform: translateX(-50%) translateY(-50%) rotate(180deg);\n    filter: blur(0);\n  }\n  to {\n    transform: translateX(-50%) translateY(-35%) rotate(180deg);\n    filter: blur(4px);\n  }\n`;\nexport const GradientContainer = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform-origin: center;\n  transform: translateX(-50%) translateY(-50%) rotate(180deg);\n  animation: ${gaugeAura} 3s cubic-bezier(0.8, 0, 0.9, 0.8) alternate infinite;\n`;\nexport const ScoreCalculated = styled.span`\n  font-size: var(--fs30);\n`;\n//# sourceMappingURL=Gauge.styles.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}