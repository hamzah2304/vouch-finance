{"ast":null,"code":"export class ProviderRpcError extends Error {\n  constructor(error) {\n    super(error.message);\n    this.message = error.message;\n    this.code = error.code;\n    this.data = error.data;\n  }\n}\nexport const defaultWalletUnavailableMsg = _ref => {\n  let {\n    label\n  } = _ref;\n  return `Please install or enable ${label} to continue`;\n};\nexport const isWalletAvailable = (provider, checkProviderIdentity, device) => {\n  var _a;\n  // No injected providers exist.\n  if (!provider) {\n    return false;\n  }\n  // Many injected providers add their own object into window.\n  if (checkProviderIdentity({\n    provider,\n    device\n  })) {\n    return true;\n  }\n  // For multiple injected providers, check providers array\n  // example coinbase inj wallet pushes over-ridden wallets\n  // into a providers array at window.ethereum\n  return !!((_a = provider.providers) === null || _a === void 0 ? void 0 : _a.some(provider => checkProviderIdentity({\n    provider,\n    device\n  })));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}