{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkDialog = void 0;\nconst clsx_1 = __importDefault(require(\"clsx\"));\nconst preact_1 = require(\"preact\");\nconst hooks_1 = require(\"preact/hooks\");\nconst LinkDialog_css_1 = __importDefault(require(\"./LinkDialog-css\"));\nconst QRCode_1 = require(\"./QRCode\");\nconst Spinner_1 = require(\"./Spinner\");\nconst version_1 = require(\"../version\");\nconst LinkDialog = props => {\n  const [isContainerHidden, setContainerHidden] = (0, hooks_1.useState)(!props.isOpen);\n  const [isDialogHidden, setDialogHidden] = (0, hooks_1.useState)(!props.isOpen);\n  (0, hooks_1.useEffect)(() => {\n    const {\n      isOpen\n    } = props;\n    const timers = [window.setTimeout(() => {\n      setDialogHidden(!isOpen);\n    }, 10)];\n    if (isOpen) {\n      setContainerHidden(false);\n    } else {\n      timers.push(window.setTimeout(() => {\n        setContainerHidden(true);\n      }, 360));\n    }\n    return () => {\n      timers.forEach(window.clearTimeout);\n    };\n  }, [props.isOpen]);\n  return (0, preact_1.h)(\"div\", {\n    class: (0, clsx_1.default)(\"-walletlink-link-dialog-container\", props.darkMode && \"-walletlink-link-dialog-container-dark\", isContainerHidden && \"-walletlink-link-dialog-container-hidden\")\n  }, (0, preact_1.h)(\"style\", null, LinkDialog_css_1.default), (0, preact_1.h)(\"div\", {\n    class: (0, clsx_1.default)(\"-walletlink-link-dialog-backdrop\", isDialogHidden && \"-walletlink-link-dialog-backdrop-hidden\")\n  }), (0, preact_1.h)(\"div\", {\n    class: \"-walletlink-link-dialog\"\n  }, (0, preact_1.h)(\"div\", {\n    class: (0, clsx_1.default)(\"-walletlink-link-dialog-box\", isDialogHidden && \"-walletlink-link-dialog-box-hidden\")\n  }, (0, preact_1.h)(ScanQRCode, {\n    darkMode: props.darkMode,\n    version: props.version,\n    sessionId: props.sessionId,\n    sessionSecret: props.sessionSecret,\n    walletLinkUrl: props.walletLinkUrl,\n    isConnected: props.isConnected,\n    isParentConnection: props.isParentConnection\n  }), props.onCancel && (0, preact_1.h)(CancelButton, {\n    onClick: props.onCancel\n  }))));\n};\nexports.LinkDialog = LinkDialog;\nconst ScanQRCode = props => {\n  const serverUrl = window.encodeURIComponent(props.walletLinkUrl);\n  const sessionIdKey = props.isParentConnection ? \"parent-id\" : \"id\";\n  const qrUrl = `${props.walletLinkUrl}/#/link?${sessionIdKey}=${props.sessionId}&secret=${props.sessionSecret}&server=${serverUrl}&v=1`;\n  return (0, preact_1.h)(\"div\", {\n    class: \"-walletlink-link-dialog-box-content\"\n  }, (0, preact_1.h)(\"h3\", null, \"Scan to\", (0, preact_1.h)(\"br\", null), \" Connect\"), (0, preact_1.h)(\"div\", {\n    class: \"-walletlink-link-dialog-box-content-qrcode\"\n  }, (0, preact_1.h)(\"div\", {\n    class: \"-walletlink-link-dialog-box-content-qrcode-wrapper\"\n  }, (0, preact_1.h)(QRCode_1.QRCode, {\n    content: qrUrl,\n    width: 224,\n    height: 224,\n    fgColor: \"#000\",\n    bgColor: \"transparent\"\n  })), (0, preact_1.h)(\"input\", {\n    type: \"hidden\",\n    name: \"walletlink-version\",\n    value: version_1.LIB_VERSION\n  }), (0, preact_1.h)(\"input\", {\n    type: \"hidden\",\n    value: qrUrl\n  }), !props.isConnected && (0, preact_1.h)(\"div\", {\n    class: \"-walletlink-link-dialog-box-content-qrcode-connecting\"\n  }, (0, preact_1.h)(Spinner_1.Spinner, {\n    size: 128,\n    color: props.darkMode ? \"#fff\" : \"#000\"\n  }), (0, preact_1.h)(\"p\", null, \"Connecting...\")), (0, preact_1.h)(\"p\", {\n    title: `WalletLink v${props.version}`\n  }, \"Powered by WalletLink\")), (0, preact_1.h)(\"a\", {\n    href: `${props.walletLinkUrl}/#/wallets`,\n    target: \"_blank\",\n    rel: \"noopener\"\n  }, \"Don\\u2019t have a wallet app?\"));\n};\nconst CancelButton = props => (0, preact_1.h)(\"button\", {\n  class: \"-walletlink-link-dialog-box-cancel\",\n  onClick: props.onClick\n}, (0, preact_1.h)(\"div\", {\n  class: \"-walletlink-link-dialog-box-cancel-x\"\n}));","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}