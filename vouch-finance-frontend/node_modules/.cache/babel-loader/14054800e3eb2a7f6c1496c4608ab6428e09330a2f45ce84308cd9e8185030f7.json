{"ast":null,"code":"import { S as SvelteComponent, i as init, s as safe_not_equal, a as append_styles, e as empty, b as insert, n as noop, d as detach, c as component_subscribe, w as wallets$, f as setChain, g as binding_callbacks, h as connectedToValidAppChain, j as element, k as attr, l as null_to_empty, m as append, o as select_option, p as listen, u as update_keyed_each, q as destroy_block, t as text, r as chainIdToLabel, v as set_data, x as transition_in, y as group_outros, z as check_outros, A as transition_out, B as destroy_each, C as en, D as shortenDomain, E as shortenAddress, W as WalletAppBadge, F as create_component, G as space, H as toggle_class, I as mount_component, J as stop_propagation, K as destroy_component, L as run_all, M as selectAccounts, N as connectWallet$, O as setPrimaryWallet, P as disconnect, Q as copyWalletAddress, R as SuccessStatusIcon, T as set_style, U as add_render_callback, V as create_in_transition, X as fade, Y as Modal, Z as is_function, _ as unrecognizedChainStyle, $ as questionIcon, a0 as poweredByBlocknative, a1 as outro_and_destroy_block, a2 as quartOut, a3 as fly, a4 as state, a5 as getDefaultChainStyles, a6 as bind, a7 as add_flush_callback, a8 as configuration, a9 as bubble, aa as connect, ab as updateAccountCenter, ac as create_out_transition, ad as onDestroy } from './index-9295a9b5.js';\nimport { skip, debounceTime, distinctUntilChanged, startWith, shareReplay } from 'rxjs/operators';\nimport { _ } from 'svelte-i18n';\nimport { ProviderRpcErrorCode } from '@web3-onboard/common';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport 'bowser';\nimport 'lodash.partition';\nimport 'ethers';\nimport 'nanoid';\nimport 'bignumber.js';\nimport 'svelte/store';\nimport 'joi';\nimport 'lodash.merge';\nimport 'eventemitter3';\nvar caretIcon = `<svg width=\"100%\" height=\"24\" viewBox=\"0 5 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7 10L12 15L17 10H7Z\" fill=\"currentColor\"/></svg>`;\nvar warningIcon = `\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1 21H23L12 2L1 21ZM13 18H11V16H13V18ZM13 14H11V10H13V14Z\" fill=\"currentColor\"/>\n  </svg>\n`;\n\n/* src/views/shared/NetworkSelector.svelte generated by Svelte v3.55.1 */\n\nfunction add_css$5(target) {\n  append_styles(target, \"svelte-1uqued6\", \"select.svelte-1uqued6{border:none;background-image:none;background-color:transparent;-webkit-appearance:none;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;appearance:none;font-size:var(--onboard-font-size-7, var(--font-size-7));line-height:var(--onboard-font-line-height-3, var(--font-line-height-3));transition:width 250ms ease-in-out;background-repeat:no-repeat, repeat;background-position:right 0px top 0px, 0 0;scrollbar-width:none;-ms-overflow-style:none;padding:0 14px 0 0;white-space:nowrap;text-overflow:ellipsis}select.minimized_ac.svelte-1uqued6{min-width:80px;max-width:80px}select.maximized_ac.svelte-1uqued6{width:auto !important}select.svelte-1uqued6:focus{outline:none}span.switching-placeholder.svelte-1uqued6{font-size:var(--onboard-font-size-7, var(--font-size-7));line-height:var(--onboard-font-line-height-3, var(--font-line-height-3));min-width:80px;max-width:80px;padding:0 8px 0 4px}\");\n}\nfunction get_each_context$2(ctx, list, i) {\n  const child_ctx = ctx.slice();\n  child_ctx[15] = list[i];\n  return child_ctx;\n}\n\n// (92:0) {#if wallet}\nfunction create_if_block$4(ctx) {\n  let if_block_anchor;\n  function select_block_type(ctx, dirty) {\n    if ( /*$switching$*/ctx[7]) return create_if_block_1$3;\n    return create_else_block$1;\n  }\n  let current_block_type = select_block_type(ctx);\n  let if_block = current_block_type(ctx);\n  return {\n    c() {\n      if_block.c();\n      if_block_anchor = empty();\n    },\n    m(target, anchor) {\n      if_block.m(target, anchor);\n      insert(target, if_block_anchor, anchor);\n    },\n    p(ctx, dirty) {\n      if (current_block_type === (current_block_type = select_block_type(ctx)) && if_block) {\n        if_block.p(ctx, dirty);\n      } else {\n        if_block.d(1);\n        if_block = current_block_type(ctx);\n        if (if_block) {\n          if_block.c();\n          if_block.m(if_block_anchor.parentNode, if_block_anchor);\n        }\n      }\n    },\n    d(detaching) {\n      if_block.d(detaching);\n      if (detaching) detach(if_block_anchor);\n    }\n  };\n}\n\n// (101:2) {:else}\nfunction create_else_block$1(ctx) {\n  let select;\n  let show_if = !connectedToValidAppChain( /*wallet*/ctx[6].chains[0], /*chains*/ctx[2]);\n  let if_block_anchor;\n  let each_blocks = [];\n  let each_1_lookup = new Map();\n  let select_class_value;\n  let select_value_value;\n  let select_style_value;\n  let mounted;\n  let dispose;\n  let if_block = show_if && create_if_block_2$3(ctx);\n  let each_value = /*chains*/ctx[2];\n  const get_key = ctx => /*chain*/ctx[15].id;\n  for (let i = 0; i < each_value.length; i += 1) {\n    let child_ctx = get_each_context$2(ctx, each_value, i);\n    let key = get_key(child_ctx);\n    each_1_lookup.set(key, each_blocks[i] = create_each_block$2(key, child_ctx));\n  }\n  return {\n    c() {\n      select = element(\"select\");\n      if (if_block) if_block.c();\n      if_block_anchor = empty();\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].c();\n      }\n      attr(select, \"class\", select_class_value = \"\" + (null_to_empty(`flex justify-center items-center pointer ${/*parentCSSId*/ctx[4]}`) + \" svelte-1uqued6\"));\n      attr(select, \"style\", select_style_value = `\n        color: var(${/*colorVar*/ctx[1]},\n        var(--account-center-network-selector-color, var(--gray-500)));\n        background-image: url('data:image/svg+xml;utf8,${/*selectIcon*/ctx[0]}'); ${/*bold*/ctx[3] ? 'font-weight: 700;' : ''}`);\n    },\n    m(target, anchor) {\n      insert(target, select, anchor);\n      if (if_block) if_block.m(select, null);\n      append(select, if_block_anchor);\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].m(select, null);\n      }\n      select_option(select, /*wallet*/ctx[6].chains[0].id);\n      /*select_binding*/\n      ctx[13](select);\n      if (!mounted) {\n        dispose = listen(select, \"change\", /*handleSelect*/ctx[10]);\n        mounted = true;\n      }\n    },\n    p(ctx, dirty) {\n      if (dirty & /*wallet, chains*/68) show_if = !connectedToValidAppChain( /*wallet*/ctx[6].chains[0], /*chains*/ctx[2]);\n      if (show_if) {\n        if (if_block) {\n          if_block.p(ctx, dirty);\n        } else {\n          if_block = create_if_block_2$3(ctx);\n          if_block.c();\n          if_block.m(select, if_block_anchor);\n        }\n      } else if (if_block) {\n        if_block.d(1);\n        if_block = null;\n      }\n      if (dirty & /*chains*/4) {\n        each_value = /*chains*/ctx[2];\n        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, select, destroy_block, create_each_block$2, null, get_each_context$2);\n      }\n      if (dirty & /*parentCSSId*/16 && select_class_value !== (select_class_value = \"\" + (null_to_empty(`flex justify-center items-center pointer ${/*parentCSSId*/ctx[4]}`) + \" svelte-1uqued6\"))) {\n        attr(select, \"class\", select_class_value);\n      }\n      if (dirty & /*wallet*/64 && select_value_value !== (select_value_value = /*wallet*/ctx[6].chains[0].id)) {\n        select_option(select, /*wallet*/ctx[6].chains[0].id);\n      }\n      if (dirty & /*colorVar, selectIcon, bold*/11 && select_style_value !== (select_style_value = `\n        color: var(${/*colorVar*/ctx[1]},\n        var(--account-center-network-selector-color, var(--gray-500)));\n        background-image: url('data:image/svg+xml;utf8,${/*selectIcon*/ctx[0]}'); ${/*bold*/ctx[3] ? 'font-weight: 700;' : ''}`)) {\n        attr(select, \"style\", select_style_value);\n      }\n    },\n    d(detaching) {\n      if (detaching) detach(select);\n      if (if_block) if_block.d();\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].d();\n      }\n\n      /*select_binding*/\n      ctx[13](null);\n      mounted = false;\n      dispose();\n    }\n  };\n}\n\n// (93:2) {#if $switching$}\nfunction create_if_block_1$3(ctx) {\n  let span;\n  let t;\n  let span_class_value;\n  let span_style_value;\n  return {\n    c() {\n      span = element(\"span\");\n      t = text(\"switching...\");\n      attr(span, \"class\", span_class_value = \"\" + (null_to_empty(`switching-placeholder ${/*parentCSSId*/ctx[4]}`) + \" svelte-1uqued6\"));\n      attr(span, \"style\", span_style_value = `\n        color: var(${/*colorVar*/ctx[1]},\n        var(--account-center-network-selector-color, var(--gray-500)));\n      `);\n    },\n    m(target, anchor) {\n      insert(target, span, anchor);\n      append(span, t);\n    },\n    p(ctx, dirty) {\n      if (dirty & /*parentCSSId*/16 && span_class_value !== (span_class_value = \"\" + (null_to_empty(`switching-placeholder ${/*parentCSSId*/ctx[4]}`) + \" svelte-1uqued6\"))) {\n        attr(span, \"class\", span_class_value);\n      }\n      if (dirty & /*colorVar*/2 && span_style_value !== (span_style_value = `\n        color: var(${/*colorVar*/ctx[1]},\n        var(--account-center-network-selector-color, var(--gray-500)));\n      `)) {\n        attr(span, \"style\", span_style_value);\n      }\n    },\n    d(detaching) {\n      if (detaching) detach(span);\n    }\n  };\n}\n\n// (114:6) {#if !connectedToValidAppChain(wallet.chains[0], chains)}\nfunction create_if_block_2$3(ctx) {\n  let option;\n  let t_value = (chainIdToLabel[/*wallet*/ctx[6].chains[0].id] || 'unrecognized') + \"\";\n  let t;\n  let option_value_value;\n  return {\n    c() {\n      option = element(\"option\");\n      t = text(t_value);\n      option.__value = option_value_value = /*wallet*/ctx[6].chains[0].id;\n      option.value = option.__value;\n    },\n    m(target, anchor) {\n      insert(target, option, anchor);\n      append(option, t);\n    },\n    p(ctx, dirty) {\n      if (dirty & /*wallet*/64 && t_value !== (t_value = (chainIdToLabel[/*wallet*/ctx[6].chains[0].id] || 'unrecognized') + \"\")) set_data(t, t_value);\n      if (dirty & /*wallet*/64 && option_value_value !== (option_value_value = /*wallet*/ctx[6].chains[0].id)) {\n        option.__value = option_value_value;\n        option.value = option.__value;\n      }\n    },\n    d(detaching) {\n      if (detaching) detach(option);\n    }\n  };\n}\n\n// (119:6) {#each chains as chain (chain.id)}\nfunction create_each_block$2(key_1, ctx) {\n  let option;\n  let t_value = /*chain*/ctx[15].label + \"\";\n  let t;\n  let option_value_value;\n  return {\n    key: key_1,\n    first: null,\n    c() {\n      option = element(\"option\");\n      t = text(t_value);\n      option.__value = option_value_value = /*chain*/ctx[15].id;\n      option.value = option.__value;\n      this.first = option;\n    },\n    m(target, anchor) {\n      insert(target, option, anchor);\n      append(option, t);\n    },\n    p(new_ctx, dirty) {\n      ctx = new_ctx;\n      if (dirty & /*chains*/4 && t_value !== (t_value = /*chain*/ctx[15].label + \"\")) set_data(t, t_value);\n      if (dirty & /*chains*/4 && option_value_value !== (option_value_value = /*chain*/ctx[15].id)) {\n        option.__value = option_value_value;\n        option.value = option.__value;\n      }\n    },\n    d(detaching) {\n      if (detaching) detach(option);\n    }\n  };\n}\nfunction create_fragment$6(ctx) {\n  let if_block_anchor;\n  let if_block = /*wallet*/ctx[6] && create_if_block$4(ctx);\n  return {\n    c() {\n      if (if_block) if_block.c();\n      if_block_anchor = empty();\n    },\n    m(target, anchor) {\n      if (if_block) if_block.m(target, anchor);\n      insert(target, if_block_anchor, anchor);\n    },\n    p(ctx, _ref) {\n      let [dirty] = _ref;\n      if ( /*wallet*/ctx[6]) {\n        if (if_block) {\n          if_block.p(ctx, dirty);\n        } else {\n          if_block = create_if_block$4(ctx);\n          if_block.c();\n          if_block.m(if_block_anchor.parentNode, if_block_anchor);\n        }\n      } else if (if_block) {\n        if_block.d(1);\n        if_block = null;\n      }\n    },\n    i: noop,\n    o: noop,\n    d(detaching) {\n      if (if_block) if_block.d(detaching);\n      if (detaching) detach(if_block_anchor);\n    }\n  };\n}\nfunction instance$6($$self, $$props, $$invalidate) {\n  let wallet;\n  let $resize$;\n  let $wallets$;\n  let $switching$;\n  component_subscribe($$self, wallets$, $$value => $$invalidate(12, $wallets$ = $$value));\n  let {\n    selectIcon = caretIcon\n  } = $$props;\n  let {\n    colorVar\n  } = $$props;\n  let {\n    chains\n  } = $$props;\n  let {\n    bold = false\n  } = $$props;\n  let {\n    parentCSSId = ''\n  } = $$props;\n  const switching$ = new BehaviorSubject(false);\n  component_subscribe($$self, switching$, value => $$invalidate(7, $switching$ = value));\n  let selectElement;\n  const resize$ = merge(wallets$, switching$.pipe(skip(1))).pipe(debounceTime(50), distinctUntilChanged((prev, next) => typeof prev === 'boolean' || typeof next === 'boolean' ? false : prev[0] && next[0] && prev[0].chains[0].id === next[0].chains[0].id));\n  component_subscribe($$self, resize$, value => $$invalidate(11, $resize$ = value));\n  async function handleSelect() {\n    const selectedChain = selectElement.selectedOptions[0].value;\n    if (selectedChain !== wallet.chains[0].id) {\n      switching$.next(true);\n      await setChain({\n        chainId: selectedChain,\n        chainNamespace: 'evm',\n        wallet: wallet.label\n      });\n      switching$.next(false);\n    }\n  }\n  function resizeSelect() {\n    if (!selectElement) return;\n    let tempOption = document.createElement('option');\n    tempOption.textContent = selectElement.selectedOptions[0].textContent;\n    let tempSelect = document.createElement('select');\n    tempSelect.style.visibility = 'hidden';\n    tempSelect.style.position = 'fixed';\n    tempSelect.appendChild(tempOption);\n    selectElement.after(tempSelect);\n    $$invalidate(5, selectElement.style.width = `${tempSelect.clientWidth - 22}px`, selectElement);\n    tempSelect.remove();\n  }\n  function select_binding($$value) {\n    binding_callbacks[$$value ? 'unshift' : 'push'](() => {\n      selectElement = $$value;\n      $$invalidate(5, selectElement);\n      $$invalidate(2, chains);\n      $$invalidate(6, wallet), $$invalidate(12, $wallets$);\n    });\n  }\n  $$self.$$set = $$props => {\n    if ('selectIcon' in $$props) $$invalidate(0, selectIcon = $$props.selectIcon);\n    if ('colorVar' in $$props) $$invalidate(1, colorVar = $$props.colorVar);\n    if ('chains' in $$props) $$invalidate(2, chains = $$props.chains);\n    if ('bold' in $$props) $$invalidate(3, bold = $$props.bold);\n    if ('parentCSSId' in $$props) $$invalidate(4, parentCSSId = $$props.parentCSSId);\n  };\n  $$self.$$.update = () => {\n    if ($$self.$$.dirty & /*$wallets$*/4096) {\n      $$invalidate(6, [wallet] = $wallets$, wallet);\n    }\n    if ($$self.$$.dirty & /*$resize$*/2048) {\n      if ($resize$) {\n        resizeSelect();\n      }\n    }\n  };\n  return [selectIcon, colorVar, chains, bold, parentCSSId, selectElement, wallet, $switching$, switching$, resize$, handleSelect, $resize$, $wallets$, select_binding];\n}\nclass NetworkSelector extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance$6, create_fragment$6, safe_not_equal, {\n      selectIcon: 0,\n      colorVar: 1,\n      chains: 2,\n      bold: 3,\n      parentCSSId: 4\n    }, add_css$5);\n  }\n}\nvar elipsisIcon = `\n  <svg width=\"100%\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M12 8C13.1 8 14 7.1 14 6C14 4.9 13.1 4 12 4C10.9 4 10 4.9 10 6C10 7.1 10.9 8 12 8ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10ZM12 16C10.9 16 10 16.9 10 18C10 19.1 10.9 20 12 20C13.1 20 14 19.1 14 18C14 16.9 13.1 16 12 16Z\" fill=\"currentColor\"/>\n  </svg>\n`;\n\n/* src/views/account-center/WalletRow.svelte generated by Svelte v3.55.1 */\n\nfunction add_css$4(target) {\n  append_styles(target, \"svelte-1frdf8r\", \".container.svelte-1frdf8r.svelte-1frdf8r{position:relative;z-index:0;width:100%;padding:0.25rem;margin-bottom:0.25rem;border-radius:12px;transition:background-color 150ms ease-in-out}.container.svelte-1frdf8r.svelte-1frdf8r::before{content:'';display:block;position:absolute;top:0;bottom:0;left:0;right:0;height:100%;width:100%;background:var(--action-color);border-radius:12px;z-index:0;opacity:0}.container.svelte-1frdf8r.svelte-1frdf8r:hover::before{opacity:0.2}.container.svelte-1frdf8r:hover .balance.svelte-1frdf8r,.container.svelte-1frdf8r:hover .elipsis-container.svelte-1frdf8r{opacity:1}.container.svelte-1frdf8r:hover .balance.svelte-1frdf8r{color:var(--account-center-maximized-balance-color, inherit)}.container.primary.svelte-1frdf8r.svelte-1frdf8r:hover{background-color:var(--account-center-maximized-account-section-background-hover)}.address-domain.svelte-1frdf8r.svelte-1frdf8r{margin-left:0.5rem;font-weight:700;color:var(--account-center-maximized-address-color, inherit)}.balance.svelte-1frdf8r.svelte-1frdf8r{margin-left:0.5rem;transition:color 150ms ease-in-out, background-color 150ms ease-in-out;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:7.25rem;text-align:end;opacity:0.4}.elipsis-container.svelte-1frdf8r.svelte-1frdf8r{padding:0.25rem;margin-left:0.25rem;border-radius:24px;transition:color 150ms ease-in-out, background-color 150ms ease-in-out;background-color:transparent;opacity:0.4}.elipsis.svelte-1frdf8r.svelte-1frdf8r{width:24px}.elipsis-container.svelte-1frdf8r.svelte-1frdf8r:hover{color:var(--text-color)\\n  }.elipsis-container.active.svelte-1frdf8r.svelte-1frdf8r{color:var(--text-color)\\n  }.menu.svelte-1frdf8r.svelte-1frdf8r{background:var(--onboard-white, var(--white));border:1px solid var(--onboard-gray-100, var(--gray-100));border-radius:8px;list-style-type:none;right:0.25rem;top:2.25rem;margin:0;padding:0;border:none;overflow:hidden;z-index:1}.menu.svelte-1frdf8r li.svelte-1frdf8r{color:var(--onboard-primary-500, var(--primary-500));font-size:var(--onboard-font-size-5, var(--font-size-5));line-height:var(--onboard-font-line-height-3, var(--font-line-height-3));padding:12px 16px;background:var(--onboard-white, var(--white));transition:background-color 150ms ease-in-out;cursor:pointer}.menu.svelte-1frdf8r li.svelte-1frdf8r:hover{background:var(--onboard-primary-200, var(--primary-200))}\");\n}\nfunction get_each_context$1(ctx, list, i) {\n  const child_ctx = ctx.slice();\n  child_ctx[14] = list[i].address;\n  child_ctx[15] = list[i].ens;\n  child_ctx[16] = list[i].uns;\n  child_ctx[17] = list[i].balance;\n  child_ctx[19] = i;\n  return child_ctx;\n}\n\n// (179:10) {#if primary && i === 0}\nfunction create_if_block_3$2(ctx) {\n  let div;\n  let successstatusicon;\n  let current;\n  successstatusicon = new SuccessStatusIcon({\n    props: {\n      size: 14\n    }\n  });\n  return {\n    c() {\n      div = element(\"div\");\n      create_component(successstatusicon.$$.fragment);\n      set_style(div, \"right\", \"-5px\");\n      set_style(div, \"bottom\", \"-5px\");\n      attr(div, \"class\", \"drop-shadow absolute\");\n    },\n    m(target, anchor) {\n      insert(target, div, anchor);\n      mount_component(successstatusicon, div, null);\n      current = true;\n    },\n    i(local) {\n      if (current) return;\n      transition_in(successstatusicon.$$.fragment, local);\n      current = true;\n    },\n    o(local) {\n      transition_out(successstatusicon.$$.fragment, local);\n      current = false;\n    },\n    d(detaching) {\n      if (detaching) detach(div);\n      destroy_component(successstatusicon);\n    }\n  };\n}\n\n// (201:8) {#if balance}\nfunction create_if_block_2$2(ctx) {\n  let span;\n  let t_value = formatBalance( /*balance*/ctx[17]) + \"\";\n  let t;\n  let span_intro;\n  return {\n    c() {\n      span = element(\"span\");\n      t = text(t_value);\n      attr(span, \"class\", \"balance svelte-1frdf8r\");\n    },\n    m(target, anchor) {\n      insert(target, span, anchor);\n      append(span, t);\n    },\n    p(ctx, dirty) {\n      if (dirty & /*wallet*/1 && t_value !== (t_value = formatBalance( /*balance*/ctx[17]) + \"\")) set_data(t, t_value);\n    },\n    i(local) {\n      if (!span_intro) {\n        add_render_callback(() => {\n          span_intro = create_in_transition(span, fade, {});\n          span_intro.start();\n        });\n      }\n    },\n    o: noop,\n    d(detaching) {\n      if (detaching) detach(span);\n    }\n  };\n}\n\n// (218:4) {#if showMenu === address}\nfunction create_if_block$3(ctx) {\n  let ul;\n  let li0;\n  let t0_value = /*$_*/ctx[4]('accountCenter.addAccount', {\n    default: /*en*/ctx[2].accountCenter.addAccount\n  }) + \"\";\n  let t0;\n  let t1;\n  let t2;\n  let li1;\n  let t3_value = /*$_*/ctx[4]('accountCenter.disconnectWallet', {\n    default: /*en*/ctx[2].accountCenter.disconnectWallet\n  }) + \"\";\n  let t3;\n  let t4;\n  let li2;\n  let t5_value = /*en*/ctx[2].accountCenter.copyAddress + \"\";\n  let t5;\n  let ul_intro;\n  let mounted;\n  let dispose;\n  let if_block = !( /*primary*/ctx[1] && /*i*/ctx[19] === 0) && create_if_block_1$2(ctx);\n  function click_handler_5() {\n    return (/*click_handler_5*/ctx[13]( /*ens*/ctx[15], /*uns*/ctx[16], /*address*/ctx[14])\n    );\n  }\n  return {\n    c() {\n      ul = element(\"ul\");\n      li0 = element(\"li\");\n      t0 = text(t0_value);\n      t1 = space();\n      if (if_block) if_block.c();\n      t2 = space();\n      li1 = element(\"li\");\n      t3 = text(t3_value);\n      t4 = space();\n      li2 = element(\"li\");\n      t5 = text(t5_value);\n      attr(li0, \"class\", \"svelte-1frdf8r\");\n      attr(li1, \"class\", \"svelte-1frdf8r\");\n      attr(li2, \"class\", \"svelte-1frdf8r\");\n      attr(ul, \"class\", \"menu absolute svelte-1frdf8r\");\n    },\n    m(target, anchor) {\n      insert(target, ul, anchor);\n      append(ul, li0);\n      append(li0, t0);\n      append(ul, t1);\n      if (if_block) if_block.m(ul, null);\n      append(ul, t2);\n      append(ul, li1);\n      append(li1, t3);\n      append(ul, t4);\n      append(ul, li2);\n      append(li2, t5);\n      if (!mounted) {\n        dispose = [listen(li0, \"click\", stop_propagation( /*click_handler_2*/ctx[10])), listen(li1, \"click\", stop_propagation( /*click_handler_4*/ctx[12])), listen(li2, \"click\", stop_propagation(click_handler_5))];\n        mounted = true;\n      }\n    },\n    p(new_ctx, dirty) {\n      ctx = new_ctx;\n      if (dirty & /*$_, en*/20 && t0_value !== (t0_value = /*$_*/ctx[4]('accountCenter.addAccount', {\n        default: /*en*/ctx[2].accountCenter.addAccount\n      }) + \"\")) set_data(t0, t0_value);\n      if (!( /*primary*/ctx[1] && /*i*/ctx[19] === 0)) {\n        if (if_block) {\n          if_block.p(ctx, dirty);\n        } else {\n          if_block = create_if_block_1$2(ctx);\n          if_block.c();\n          if_block.m(ul, t2);\n        }\n      } else if (if_block) {\n        if_block.d(1);\n        if_block = null;\n      }\n      if (dirty & /*$_, en*/20 && t3_value !== (t3_value = /*$_*/ctx[4]('accountCenter.disconnectWallet', {\n        default: /*en*/ctx[2].accountCenter.disconnectWallet\n      }) + \"\")) set_data(t3, t3_value);\n      if (dirty & /*en*/4 && t5_value !== (t5_value = /*en*/ctx[2].accountCenter.copyAddress + \"\")) set_data(t5, t5_value);\n    },\n    i(local) {\n      if (!ul_intro) {\n        add_render_callback(() => {\n          ul_intro = create_in_transition(ul, fade, {});\n          ul_intro.start();\n        });\n      }\n    },\n    o: noop,\n    d(detaching) {\n      if (detaching) detach(ul);\n      if (if_block) if_block.d();\n      mounted = false;\n      run_all(dispose);\n    }\n  };\n}\n\n// (230:8) {#if !(primary && i === 0)}\nfunction create_if_block_1$2(ctx) {\n  let li;\n  let t_value = /*$_*/ctx[4]('accountCenter.setPrimaryAccount', {\n    default: /*en*/ctx[2].accountCenter.setPrimaryAccount\n  }) + \"\";\n  let t;\n  let mounted;\n  let dispose;\n  function click_handler_3() {\n    return (/*click_handler_3*/ctx[11]( /*address*/ctx[14])\n    );\n  }\n  return {\n    c() {\n      li = element(\"li\");\n      t = text(t_value);\n      attr(li, \"class\", \"svelte-1frdf8r\");\n    },\n    m(target, anchor) {\n      insert(target, li, anchor);\n      append(li, t);\n      if (!mounted) {\n        dispose = listen(li, \"click\", stop_propagation(click_handler_3));\n        mounted = true;\n      }\n    },\n    p(new_ctx, dirty) {\n      ctx = new_ctx;\n      if (dirty & /*$_, en*/20 && t_value !== (t_value = /*$_*/ctx[4]('accountCenter.setPrimaryAccount', {\n        default: /*en*/ctx[2].accountCenter.setPrimaryAccount\n      }) + \"\")) set_data(t, t_value);\n    },\n    d(detaching) {\n      if (detaching) detach(li);\n      mounted = false;\n      dispose();\n    }\n  };\n}\n\n// (157:0) {#each wallet.accounts as { address, ens, uns, balance }\nfunction create_each_block$1(ctx) {\n  let div6;\n  let div5;\n  let div1;\n  let div0;\n  let walletappbadge;\n  let t0;\n  let t1;\n  let span;\n  let t2_value = ( /*ens*/ctx[15] ? shortenDomain( /*ens*/ctx[15].name) : /*uns*/ctx[16] ? shortenDomain( /*uns*/ctx[16].name) : shortenAddress( /*address*/ctx[14])) + \"\";\n  let t2;\n  let t3;\n  let div4;\n  let t4;\n  let div3;\n  let div2;\n  let t5;\n  let t6;\n  let current;\n  let mounted;\n  let dispose;\n  walletappbadge = new WalletAppBadge({\n    props: {\n      size: 32,\n      padding: 4,\n      background: \"custom\",\n      color: \"#EFF1FC\",\n      customBackgroundColor: /*primary*/ctx[1] && /*i*/ctx[19] === 0 ? 'rgba(24, 206, 102, 0.2)' : 'rgba(235, 235, 237, 0.1)',\n      border: /*primary*/ctx[1] && /*i*/ctx[19] === 0 ? 'green' : 'gray',\n      radius: 8,\n      icon: /*wallet*/ctx[0].icon\n    }\n  });\n  let if_block0 = /*primary*/ctx[1] && /*i*/ctx[19] === 0 && create_if_block_3$2();\n  let if_block1 = /*balance*/ctx[17] && create_if_block_2$2(ctx);\n  function click_handler() {\n    return (/*click_handler*/ctx[8]( /*address*/ctx[14])\n    );\n  }\n  function click_handler_1() {\n    return (/*click_handler_1*/ctx[9]( /*address*/ctx[14])\n    );\n  }\n  let if_block2 = /*showMenu*/ctx[3] === /*address*/ctx[14] && create_if_block$3(ctx);\n  return {\n    c() {\n      div6 = element(\"div\");\n      div5 = element(\"div\");\n      div1 = element(\"div\");\n      div0 = element(\"div\");\n      create_component(walletappbadge.$$.fragment);\n      t0 = space();\n      if (if_block0) if_block0.c();\n      t1 = space();\n      span = element(\"span\");\n      t2 = text(t2_value);\n      t3 = space();\n      div4 = element(\"div\");\n      if (if_block1) if_block1.c();\n      t4 = space();\n      div3 = element(\"div\");\n      div2 = element(\"div\");\n      t5 = space();\n      if (if_block2) if_block2.c();\n      t6 = space();\n      attr(div0, \"class\", \"flex items-center relative\");\n      attr(span, \"class\", \"address-domain svelte-1frdf8r\");\n      attr(div1, \"class\", \"flex items-center\");\n      attr(div2, \"class\", \"elipsis pointer flex items-center justify-center relative svelte-1frdf8r\");\n      attr(div3, \"class\", \"elipsis-container svelte-1frdf8r\");\n      toggle_class(div3, \"active\", /*showMenu*/ctx[3] === /*address*/ctx[14]);\n      attr(div4, \"class\", \"flex items-center\");\n      attr(div5, \"class\", \"container flex items-center justify-between pointer svelte-1frdf8r\");\n      toggle_class(div5, \"primary\", /*primary*/ctx[1] && /*i*/ctx[19] === 0);\n      attr(div6, \"class\", \"relative\");\n    },\n    m(target, anchor) {\n      insert(target, div6, anchor);\n      append(div6, div5);\n      append(div5, div1);\n      append(div1, div0);\n      mount_component(walletappbadge, div0, null);\n      append(div0, t0);\n      if (if_block0) if_block0.m(div0, null);\n      append(div1, t1);\n      append(div1, span);\n      append(span, t2);\n      append(div5, t3);\n      append(div5, div4);\n      if (if_block1) if_block1.m(div4, null);\n      append(div4, t4);\n      append(div4, div3);\n      append(div3, div2);\n      div2.innerHTML = elipsisIcon;\n      append(div6, t5);\n      if (if_block2) if_block2.m(div6, null);\n      append(div6, t6);\n      current = true;\n      if (!mounted) {\n        dispose = [listen(div2, \"click\", stop_propagation(click_handler)), listen(div5, \"click\", click_handler_1)];\n        mounted = true;\n      }\n    },\n    p(new_ctx, dirty) {\n      ctx = new_ctx;\n      const walletappbadge_changes = {};\n      if (dirty & /*primary*/2) walletappbadge_changes.customBackgroundColor = /*primary*/ctx[1] && /*i*/ctx[19] === 0 ? 'rgba(24, 206, 102, 0.2)' : 'rgba(235, 235, 237, 0.1)';\n      if (dirty & /*primary*/2) walletappbadge_changes.border = /*primary*/ctx[1] && /*i*/ctx[19] === 0 ? 'green' : 'gray';\n      if (dirty & /*wallet*/1) walletappbadge_changes.icon = /*wallet*/ctx[0].icon;\n      walletappbadge.$set(walletappbadge_changes);\n      if ( /*primary*/ctx[1] && /*i*/ctx[19] === 0) {\n        if (if_block0) {\n          if (dirty & /*primary*/2) {\n            transition_in(if_block0, 1);\n          }\n        } else {\n          if_block0 = create_if_block_3$2();\n          if_block0.c();\n          transition_in(if_block0, 1);\n          if_block0.m(div0, null);\n        }\n      } else if (if_block0) {\n        group_outros();\n        transition_out(if_block0, 1, 1, () => {\n          if_block0 = null;\n        });\n        check_outros();\n      }\n      if ((!current || dirty & /*wallet*/1) && t2_value !== (t2_value = ( /*ens*/ctx[15] ? shortenDomain( /*ens*/ctx[15].name) : /*uns*/ctx[16] ? shortenDomain( /*uns*/ctx[16].name) : shortenAddress( /*address*/ctx[14])) + \"\")) set_data(t2, t2_value);\n      if ( /*balance*/ctx[17]) {\n        if (if_block1) {\n          if_block1.p(ctx, dirty);\n          if (dirty & /*wallet*/1) {\n            transition_in(if_block1, 1);\n          }\n        } else {\n          if_block1 = create_if_block_2$2(ctx);\n          if_block1.c();\n          transition_in(if_block1, 1);\n          if_block1.m(div4, t4);\n        }\n      } else if (if_block1) {\n        if_block1.d(1);\n        if_block1 = null;\n      }\n      if (!current || dirty & /*showMenu, wallet*/9) {\n        toggle_class(div3, \"active\", /*showMenu*/ctx[3] === /*address*/ctx[14]);\n      }\n      if (!current || dirty & /*primary*/2) {\n        toggle_class(div5, \"primary\", /*primary*/ctx[1] && /*i*/ctx[19] === 0);\n      }\n      if ( /*showMenu*/ctx[3] === /*address*/ctx[14]) {\n        if (if_block2) {\n          if_block2.p(ctx, dirty);\n          if (dirty & /*showMenu, wallet*/9) {\n            transition_in(if_block2, 1);\n          }\n        } else {\n          if_block2 = create_if_block$3(ctx);\n          if_block2.c();\n          transition_in(if_block2, 1);\n          if_block2.m(div6, t6);\n        }\n      } else if (if_block2) {\n        if_block2.d(1);\n        if_block2 = null;\n      }\n    },\n    i(local) {\n      if (current) return;\n      transition_in(walletappbadge.$$.fragment, local);\n      transition_in(if_block0);\n      transition_in(if_block1);\n      transition_in(if_block2);\n      current = true;\n    },\n    o(local) {\n      transition_out(walletappbadge.$$.fragment, local);\n      transition_out(if_block0);\n      current = false;\n    },\n    d(detaching) {\n      if (detaching) detach(div6);\n      destroy_component(walletappbadge);\n      if (if_block0) if_block0.d();\n      if (if_block1) if_block1.d();\n      if (if_block2) if_block2.d();\n      mounted = false;\n      run_all(dispose);\n    }\n  };\n}\nfunction create_fragment$5(ctx) {\n  let each_1_anchor;\n  let current;\n  let each_value = /*wallet*/ctx[0].accounts;\n  let each_blocks = [];\n  for (let i = 0; i < each_value.length; i += 1) {\n    each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));\n  }\n  const out = i => transition_out(each_blocks[i], 1, 1, () => {\n    each_blocks[i] = null;\n  });\n  return {\n    c() {\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].c();\n      }\n      each_1_anchor = empty();\n    },\n    m(target, anchor) {\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].m(target, anchor);\n      }\n      insert(target, each_1_anchor, anchor);\n      current = true;\n    },\n    p(ctx, _ref2) {\n      let [dirty] = _ref2;\n      if (dirty & /*copyWalletAddress, wallet, changeText, en, showMenu, disconnect, $_, setPrimaryWallet, primary, selectAnotherAccount, elipsisIcon, formatBalance, shortenDomain, shortenAddress*/127) {\n        each_value = /*wallet*/ctx[0].accounts;\n        let i;\n        for (i = 0; i < each_value.length; i += 1) {\n          const child_ctx = get_each_context$1(ctx, each_value, i);\n          if (each_blocks[i]) {\n            each_blocks[i].p(child_ctx, dirty);\n            transition_in(each_blocks[i], 1);\n          } else {\n            each_blocks[i] = create_each_block$1(child_ctx);\n            each_blocks[i].c();\n            transition_in(each_blocks[i], 1);\n            each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n          }\n        }\n        group_outros();\n        for (i = each_value.length; i < each_blocks.length; i += 1) {\n          out(i);\n        }\n        check_outros();\n      }\n    },\n    i(local) {\n      if (current) return;\n      for (let i = 0; i < each_value.length; i += 1) {\n        transition_in(each_blocks[i]);\n      }\n      current = true;\n    },\n    o(local) {\n      each_blocks = each_blocks.filter(Boolean);\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        transition_out(each_blocks[i]);\n      }\n      current = false;\n    },\n    d(detaching) {\n      destroy_each(each_blocks, detaching);\n      if (detaching) detach(each_1_anchor);\n    }\n  };\n}\nfunction formatBalance(balance) {\n  const [asset] = Object.keys(balance);\n  return `${balance[asset].length > 8 ? balance[asset].slice(0, 8) : balance[asset]} ${asset}`;\n}\nfunction instance$5($$self, $$props, $$invalidate) {\n  let $_;\n  component_subscribe($$self, _, $$value => $$invalidate(4, $_ = $$value));\n  let {\n    wallet\n  } = $$props;\n  let {\n    primary\n  } = $$props;\n  function hideMenu() {\n    $$invalidate(3, showMenu = '');\n  }\n  let showMenu = '';\n  async function selectAnotherAccount(wallet) {\n    try {\n      await selectAccounts(wallet.provider);\n    } catch (error) {\n      const {\n        code\n      } = error;\n      if (code === ProviderRpcErrorCode.UNSUPPORTED_METHOD || code === ProviderRpcErrorCode.DOES_NOT_EXIST) {\n        connectWallet$.next({\n          inProgress: false,\n          actionRequired: wallet.label\n        });\n      }\n    }\n  }\n  function changeText() {\n    $$invalidate(2, en.accountCenter.copyAddress = 'Copied Successfully', en);\n    setTimeout(hideMenu, 500);\n    setTimeout(() => {\n      $$invalidate(2, en.accountCenter.copyAddress = 'Copy Wallet address', en);\n    }, 700);\n  }\n  const click_handler = address => $$invalidate(3, showMenu = showMenu === address ? '' : address);\n  const click_handler_1 = address => setPrimaryWallet(wallet, address);\n  const click_handler_2 = () => {\n    $$invalidate(3, showMenu = '');\n    selectAnotherAccount(wallet);\n  };\n  const click_handler_3 = address => {\n    $$invalidate(3, showMenu = '');\n    setPrimaryWallet(wallet, address);\n  };\n  const click_handler_4 = () => {\n    $$invalidate(3, showMenu = '');\n    disconnect({\n      label: wallet.label\n    });\n  };\n  const click_handler_5 = (ens, uns, address) => {\n    copyWalletAddress(ens ? ens.name : uns ? uns.name : address).then(() => {\n      changeText();\n    });\n  };\n  $$self.$$set = $$props => {\n    if ('wallet' in $$props) $$invalidate(0, wallet = $$props.wallet);\n    if ('primary' in $$props) $$invalidate(1, primary = $$props.primary);\n  };\n  return [wallet, primary, en, showMenu, $_, selectAnotherAccount, changeText, hideMenu, click_handler, click_handler_1, click_handler_2, click_handler_3, click_handler_4, click_handler_5];\n}\nclass WalletRow extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance$5, create_fragment$5, safe_not_equal, {\n      wallet: 0,\n      primary: 1,\n      hideMenu: 7\n    }, add_css$4);\n  }\n  get hideMenu() {\n    return this.$$.ctx[7];\n  }\n}\nvar plusCircleIcon = `\n  <svg width=\"100%\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M13 7H11V11H7V13H11V17H13V13H17V11H13V7ZM12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20Z\" fill=\"currentColor\"/>\n  </svg>\n`;\nvar arrowForwardIcon = `\n  <svg width=\"100%\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M10.09 15.59L11.5 17L16.5 12L11.5 7L10.09 8.41L12.67 11H3V13H12.67L10.09 15.59ZM19 3H5C3.89 3 3 3.9 3 5V9H5V5H19V19H5V15H3V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3Z\" fill=\"currentColor\"/>\n  </svg>\n`;\nvar caretLightIcon = `<svg width=\"100%\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16.59 8.59L12 13.17L7.41 8.59L6 10L12 16L18 10L16.59 8.59Z\" fill=\"currentColor\"/></svg>`;\n\n/* src/views/account-center/DisconnectAllConfirm.svelte generated by Svelte v3.55.1 */\n\nfunction add_css$3(target) {\n  append_styles(target, \"svelte-10lq1b5\", \".content.svelte-10lq1b5{padding:1rem;width:300px;font-family:var(--onboard-font-family-normal, var(--font-family-normal));font-size:var(--onboard-font-size-5, var(--font-size-5));line-height:24px}.icon-container.svelte-10lq1b5{width:3rem;height:3rem;background:var(--onboard-warning-100, var(--warning-100));border-radius:24px;padding:12px;color:var(--onboard-warning-500, var(--warning-500))}h4.svelte-10lq1b5{margin:1.5rem 0 0.5rem 0;font-weight:700}p.svelte-10lq1b5{margin:0;font-weight:400}button.svelte-10lq1b5{margin-top:1.5rem;width:50%;font-weight:700}.right.svelte-10lq1b5{margin-left:0.5rem;width:60%}\");\n}\n\n// (49:0) <Modal close={onClose}>\nfunction create_default_slot(ctx) {\n  let div2;\n  let div0;\n  let t0;\n  let h4;\n  let t1_value = /*$_*/ctx[2]('modals.confirmDisconnectAll.heading', {\n    default: en.modals.confirmDisconnectAll.heading\n  }) + \"\";\n  let t1;\n  let t2;\n  let p;\n  let t3_value = /*$_*/ctx[2]('modals.confirmDisconnectAll.description') + \"\";\n  let t3;\n  let t4;\n  let div1;\n  let button0;\n  let t5_value = /*$_*/ctx[2]('modals.confirmDisconnectAll.cancel', {\n    default: en.modals.confirmDisconnectAll.cancel\n  }) + \"\";\n  let t5;\n  let t6;\n  let button1;\n  let t7_value = /*$_*/ctx[2]('modals.confirmDisconnectAll.confirm', {\n    default: en.modals.confirmDisconnectAll.confirm\n  }) + \"\";\n  let t7;\n  let mounted;\n  let dispose;\n  return {\n    c() {\n      div2 = element(\"div\");\n      div0 = element(\"div\");\n      t0 = space();\n      h4 = element(\"h4\");\n      t1 = text(t1_value);\n      t2 = space();\n      p = element(\"p\");\n      t3 = text(t3_value);\n      t4 = space();\n      div1 = element(\"div\");\n      button0 = element(\"button\");\n      t5 = text(t5_value);\n      t6 = space();\n      button1 = element(\"button\");\n      t7 = text(t7_value);\n      attr(div0, \"class\", \"icon-container flex justify-center items-center svelte-10lq1b5\");\n      attr(h4, \"class\", \"svelte-10lq1b5\");\n      attr(p, \"class\", \"svelte-10lq1b5\");\n      attr(button0, \"class\", \"button-neutral-solid-b rounded svelte-10lq1b5\");\n      attr(button1, \"class\", \"right button-neutral-solid rounded svelte-10lq1b5\");\n      attr(div1, \"class\", \"flex justify-between items-center w-100\");\n      attr(div2, \"class\", \"content svelte-10lq1b5\");\n    },\n    m(target, anchor) {\n      insert(target, div2, anchor);\n      append(div2, div0);\n      div0.innerHTML = warningIcon;\n      append(div2, t0);\n      append(div2, h4);\n      append(h4, t1);\n      append(div2, t2);\n      append(div2, p);\n      append(p, t3);\n      append(div2, t4);\n      append(div2, div1);\n      append(div1, button0);\n      append(button0, t5);\n      append(div1, t6);\n      append(div1, button1);\n      append(button1, t7);\n      if (!mounted) {\n        dispose = [listen(button0, \"click\", function () {\n          if (is_function( /*onClose*/ctx[1])) /*onClose*/ctx[1].apply(this, arguments);\n        }), listen(button1, \"click\", function () {\n          if (is_function( /*onConfirm*/ctx[0])) /*onConfirm*/ctx[0].apply(this, arguments);\n        })];\n        mounted = true;\n      }\n    },\n    p(new_ctx, dirty) {\n      ctx = new_ctx;\n      if (dirty & /*$_*/4 && t1_value !== (t1_value = /*$_*/ctx[2]('modals.confirmDisconnectAll.heading', {\n        default: en.modals.confirmDisconnectAll.heading\n      }) + \"\")) set_data(t1, t1_value);\n      if (dirty & /*$_*/4 && t3_value !== (t3_value = /*$_*/ctx[2]('modals.confirmDisconnectAll.description') + \"\")) set_data(t3, t3_value);\n      if (dirty & /*$_*/4 && t5_value !== (t5_value = /*$_*/ctx[2]('modals.confirmDisconnectAll.cancel', {\n        default: en.modals.confirmDisconnectAll.cancel\n      }) + \"\")) set_data(t5, t5_value);\n      if (dirty & /*$_*/4 && t7_value !== (t7_value = /*$_*/ctx[2]('modals.confirmDisconnectAll.confirm', {\n        default: en.modals.confirmDisconnectAll.confirm\n      }) + \"\")) set_data(t7, t7_value);\n    },\n    d(detaching) {\n      if (detaching) detach(div2);\n      mounted = false;\n      run_all(dispose);\n    }\n  };\n}\nfunction create_fragment$4(ctx) {\n  let modal;\n  let current;\n  modal = new Modal({\n    props: {\n      close: /*onClose*/ctx[1],\n      $$slots: {\n        default: [create_default_slot]\n      },\n      $$scope: {\n        ctx\n      }\n    }\n  });\n  return {\n    c() {\n      create_component(modal.$$.fragment);\n    },\n    m(target, anchor) {\n      mount_component(modal, target, anchor);\n      current = true;\n    },\n    p(ctx, _ref3) {\n      let [dirty] = _ref3;\n      const modal_changes = {};\n      if (dirty & /*onClose*/2) modal_changes.close = /*onClose*/ctx[1];\n      if (dirty & /*$$scope, onConfirm, $_, onClose*/15) {\n        modal_changes.$$scope = {\n          dirty,\n          ctx\n        };\n      }\n      modal.$set(modal_changes);\n    },\n    i(local) {\n      if (current) return;\n      transition_in(modal.$$.fragment, local);\n      current = true;\n    },\n    o(local) {\n      transition_out(modal.$$.fragment, local);\n      current = false;\n    },\n    d(detaching) {\n      destroy_component(modal, detaching);\n    }\n  };\n}\nfunction instance$4($$self, $$props, $$invalidate) {\n  let $_;\n  component_subscribe($$self, _, $$value => $$invalidate(2, $_ = $$value));\n  let {\n    onConfirm\n  } = $$props;\n  let {\n    onClose\n  } = $$props;\n  $$self.$$set = $$props => {\n    if ('onConfirm' in $$props) $$invalidate(0, onConfirm = $$props.onConfirm);\n    if ('onClose' in $$props) $$invalidate(1, onClose = $$props.onClose);\n  };\n  return [onConfirm, onClose, $_];\n}\nclass DisconnectAllConfirm extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance$4, create_fragment$4, safe_not_equal, {\n      onConfirm: 0,\n      onClose: 1\n    }, add_css$3);\n  }\n}\n\n/* src/views/account-center/Maximized.svelte generated by Svelte v3.55.1 */\n\nfunction add_css$2(target) {\n  append_styles(target, \"svelte-k4nru0\", \".outer-container.svelte-k4nru0{--background-color:var(--w3o-background-color);--text-color:var(--w3o-text-color);--border-color:var(--w3o-border-color, var(--gray-500));--action-color:var(--w3o-action-color, var(--primary-500));--border-radius:var(--w3o-border-radius, 1rem);--account-center-network-selector-color:var(--text-color, white);width:100%;overflow:hidden;pointer-events:auto;border:1px solid transparent;background:var(--account-center-maximized-upper-background, var(--background-color));border-color:var(--border-color);border-radius:var(--account-center-border-radius, var(--border-radius))}.wallets-section.svelte-k4nru0{width:100%;color:var(--text-color, var(--gray-100));background:var(--background-color, var(--gray-700))}.p5.svelte-k4nru0{padding:var(--onboard-spacing-5, var(--spacing-5))}.wallets.svelte-k4nru0{width:100%;margin-bottom:0.5rem}.actions.svelte-k4nru0{color:var(--account-center-maximized-upper-action-color, var(--action-color));padding-left:2px}.action-container.svelte-k4nru0{padding:4px 12px 4px 8px;border-radius:8px;transition:background-color 150ms ease-in-out}.action-container.svelte-k4nru0:hover{background-color:var(\\n      --account-center-maximized-upper-action-background-hover,\\n      rgba(146, 155, 237, 0.2)\\n    )}.plus-icon.svelte-k4nru0{width:20px}.arrow-forward.svelte-k4nru0{width:20px}.mt.svelte-k4nru0{margin-top:0.25rem}.action-text.svelte-k4nru0{font-size:var(--onboard-font-size-6, var(--font-size-6));line-height:var(--onboard-font-line-height-3, var(--font-line-height-3));margin-left:0.5rem}.background-blue.svelte-k4nru0{background:var(\\n      --account-center-maximized-network-section-background,\\n      var(--onboard-primary-100, var(--primary-100))\\n    )}.background-gray.svelte-k4nru0{background:var(--onboard-gray-100, var(--gray-100))}.background-yellow.svelte-k4nru0{background:var(--onboard-warning-100, var(--warning-100))}.network-container.svelte-k4nru0{background:var(--backround-color);border-top:1px solid var(--border-color);border-radius:var(\\n      --account-center-border-radius,\\n      var(--onboard-border-radius-3, var(--border-radius-3))\\n    );color:var(\\n      --account-center-maximized-network-text-color,\\n      var(--account-center-maximized-network-section, inherit)\\n    )}.p5-5.svelte-k4nru0{padding:12px}.network-selector-container.svelte-k4nru0{margin-left:1rem;width:100%}.network-selector-label.svelte-k4nru0{font-size:var(--onboard-font-size-7, var(--font-size-7));line-height:var(--onboard-font-line-height-3, var(--font-line-height-3))}.app-info-container.svelte-k4nru0{color:var(--text-color, var(--gray-700));background:var(--account-center-maximized-info-section-background-color,\\n      var(--account-center-maximized-info-section, var(--background-color, #FFF))\\n    );border-top:1px solid var(--border-color);border-radius:var(--account-center-border-radius, inherit);padding:12px}.app-name.svelte-k4nru0{font-size:1rem;font-weight:700;line-height:1rem;margin-bottom:0.25rem;color:var(--account-center-maximized-app-name-color, inherit)}.app-description.svelte-k4nru0{margin:0;font-size:var(--onboard-font-size-7, var(--font-size-7));line-height:var(--onboard-font-line-height-3, var(--font-line-height-3));color:var(--account-center-maximized-app-info-color, inherit)}.app-info.svelte-k4nru0{font-size:var(--onboard-font-size-7, var(--font-size-7));line-height:var(--onboard-font-line-height-3, var(--font-line-height-3));color:var(--account-center-maximized-app-info-color, inherit)}.app-info-heading.svelte-k4nru0{font-weight:700;margin-top:var(--onboard-spacing-5, var(--spacing-5));margin-bottom:var(--onboard-spacing-7, var(--spacing-7));color:var(--account-center-maximized-app-info-color, inherit)}a.svelte-k4nru0{font-weight:700}.mt7.svelte-k4nru0{margin-top:var(--onboard-spacing-7, var(--spacing-7))}.ml4.svelte-k4nru0{margin-left:var(--onboard-spacing-4, var(--spacing-4))}.app-button.svelte-k4nru0{font-family:var(--account-center-app-btn-font-family, inherit);margin-top:var(--onboard-spacing-5, var(--spacing-5));color:var(--account-center-app-btn-text-color, var(--background-color, #FFF));background:var(--account-center-app-btn-background, var(--action-color))}.powered-by-container.svelte-k4nru0{margin-top:12px;color:var(--text-color)}\");\n}\nfunction get_each_context(ctx, list, i) {\n  const child_ctx = ctx.slice();\n  child_ctx[19] = list[i];\n  child_ctx[21] = i;\n  return child_ctx;\n}\n\n// (214:0) {#if disconnectConfirmModal}\nfunction create_if_block_5(ctx) {\n  let disconnectallconfirm;\n  let current;\n  disconnectallconfirm = new DisconnectAllConfirm({\n    props: {\n      onClose: /*func*/ctx[14],\n      onConfirm: /*disconnectAllWallets*/ctx[6]\n    }\n  });\n  return {\n    c() {\n      create_component(disconnectallconfirm.$$.fragment);\n    },\n    m(target, anchor) {\n      mount_component(disconnectallconfirm, target, anchor);\n      current = true;\n    },\n    p(ctx, dirty) {\n      const disconnectallconfirm_changes = {};\n      if (dirty & /*disconnectConfirmModal*/2) disconnectallconfirm_changes.onClose = /*func*/ctx[14];\n      disconnectallconfirm.$set(disconnectallconfirm_changes);\n    },\n    i(local) {\n      if (current) return;\n      transition_in(disconnectallconfirm.$$.fragment, local);\n      current = true;\n    },\n    o(local) {\n      transition_out(disconnectallconfirm.$$.fragment, local);\n      current = false;\n    },\n    d(detaching) {\n      destroy_component(disconnectallconfirm, detaching);\n    }\n  };\n}\n\n// (237:8) {#each $wallets$ as wallet, i (wallet.label)}\nfunction create_each_block(key_1, ctx) {\n  let first;\n  let walletrow;\n  let updating_hideMenu;\n  let current;\n  function walletrow_hideMenu_binding(value) {\n    /*walletrow_hideMenu_binding*/ctx[15](value);\n  }\n  let walletrow_props = {\n    wallet: /*wallet*/ctx[19],\n    primary: /*i*/ctx[21] === 0\n  };\n  if ( /*hideWalletRowMenu*/ctx[2] !== void 0) {\n    walletrow_props.hideMenu = /*hideWalletRowMenu*/ctx[2];\n  }\n  walletrow = new WalletRow({\n    props: walletrow_props\n  });\n  binding_callbacks.push(() => bind(walletrow, 'hideMenu', walletrow_hideMenu_binding));\n  return {\n    key: key_1,\n    first: null,\n    c() {\n      first = empty();\n      create_component(walletrow.$$.fragment);\n      this.first = first;\n    },\n    m(target, anchor) {\n      insert(target, first, anchor);\n      mount_component(walletrow, target, anchor);\n      current = true;\n    },\n    p(new_ctx, dirty) {\n      ctx = new_ctx;\n      const walletrow_changes = {};\n      if (dirty & /*$wallets$*/1) walletrow_changes.wallet = /*wallet*/ctx[19];\n      if (dirty & /*$wallets$*/1) walletrow_changes.primary = /*i*/ctx[21] === 0;\n      if (!updating_hideMenu && dirty & /*hideWalletRowMenu*/4) {\n        updating_hideMenu = true;\n        walletrow_changes.hideMenu = /*hideWalletRowMenu*/ctx[2];\n        add_flush_callback(() => updating_hideMenu = false);\n      }\n      walletrow.$set(walletrow_changes);\n    },\n    i(local) {\n      if (current) return;\n      transition_in(walletrow.$$.fragment, local);\n      current = true;\n    },\n    o(local) {\n      transition_out(walletrow.$$.fragment, local);\n      current = false;\n    },\n    d(detaching) {\n      if (detaching) detach(first);\n      destroy_component(walletrow, detaching);\n    }\n  };\n}\n\n// (248:8) {#if device.type === 'desktop'}\nfunction create_if_block_4(ctx) {\n  let div1;\n  let div0;\n  let t0;\n  let span0;\n  let t1_value = /*$_*/ctx[5]('accountCenter.connectAnotherWallet', {\n    default: en.accountCenter.connectAnotherWallet\n  }) + \"\";\n  let t1;\n  let t2;\n  let div3;\n  let div2;\n  let t3;\n  let span1;\n  let t4_value = /*$_*/ctx[5]('accountCenter.disconnectAllWallets', {\n    default: en.accountCenter.disconnectAllWallets\n  }) + \"\";\n  let t4;\n  let mounted;\n  let dispose;\n  return {\n    c() {\n      div1 = element(\"div\");\n      div0 = element(\"div\");\n      t0 = space();\n      span0 = element(\"span\");\n      t1 = text(t1_value);\n      t2 = space();\n      div3 = element(\"div\");\n      div2 = element(\"div\");\n      t3 = space();\n      span1 = element(\"span\");\n      t4 = text(t4_value);\n      attr(div0, \"class\", \"plus-icon flex items-center justify-center svelte-k4nru0\");\n      attr(span0, \"class\", \"action-text svelte-k4nru0\");\n      attr(div1, \"class\", \"action-container flex items-center pointer svelte-k4nru0\");\n      attr(div2, \"class\", \"arrow-forward flex items-center justify-center svelte-k4nru0\");\n      attr(span1, \"class\", \"action-text svelte-k4nru0\");\n      attr(div3, \"class\", \"action-container flex items-center mt pointer svelte-k4nru0\");\n    },\n    m(target, anchor) {\n      insert(target, div1, anchor);\n      append(div1, div0);\n      div0.innerHTML = plusCircleIcon;\n      append(div1, t0);\n      append(div1, span0);\n      append(span0, t1);\n      insert(target, t2, anchor);\n      insert(target, div3, anchor);\n      append(div3, div2);\n      div2.innerHTML = arrowForwardIcon;\n      append(div3, t3);\n      append(div3, span1);\n      append(span1, t4);\n      if (!mounted) {\n        dispose = [listen(div1, \"click\", /*click_handler_1*/ctx[16]), listen(div3, \"click\", /*click_handler_2*/ctx[17])];\n        mounted = true;\n      }\n    },\n    p(ctx, dirty) {\n      if (dirty & /*$_*/32 && t1_value !== (t1_value = /*$_*/ctx[5]('accountCenter.connectAnotherWallet', {\n        default: en.accountCenter.connectAnotherWallet\n      }) + \"\")) set_data(t1, t1_value);\n      if (dirty & /*$_*/32 && t4_value !== (t4_value = /*$_*/ctx[5]('accountCenter.disconnectAllWallets', {\n        default: en.accountCenter.disconnectAllWallets\n      }) + \"\")) set_data(t4, t4_value);\n    },\n    d(detaching) {\n      if (detaching) detach(div1);\n      if (detaching) detach(t2);\n      if (detaching) detach(div3);\n      mounted = false;\n      run_all(dispose);\n    }\n  };\n}\n\n// (316:10) {#if validAppChain}\nfunction create_if_block_3$1(ctx) {\n  let div;\n  let successstatusicon;\n  let current;\n  successstatusicon = new SuccessStatusIcon({\n    props: {\n      size: 14\n    }\n  });\n  return {\n    c() {\n      div = element(\"div\");\n      create_component(successstatusicon.$$.fragment);\n      set_style(div, \"right\", \"-5px\");\n      set_style(div, \"bottom\", \"-5px\");\n      attr(div, \"class\", \"drop-shadow absolute\");\n    },\n    m(target, anchor) {\n      insert(target, div, anchor);\n      mount_component(successstatusicon, div, null);\n      current = true;\n    },\n    i(local) {\n      if (current) return;\n      transition_in(successstatusicon.$$.fragment, local);\n      current = true;\n    },\n    o(local) {\n      transition_out(successstatusicon.$$.fragment, local);\n      current = false;\n    },\n    d(detaching) {\n      if (detaching) detach(div);\n      destroy_component(successstatusicon);\n    }\n  };\n}\n\n// (372:8) {#if appMetadata && (appMetadata.gettingStartedGuide || appMetadata.explore)}\nfunction create_if_block$2(ctx) {\n  let div;\n  let h4;\n  let t0_value = /*$_*/ctx[5]('accountCenter.appInfo', {\n    default: en.accountCenter.appInfo\n  }) + \"\";\n  let t0;\n  let t1;\n  let t2;\n  let if_block0 = /*appMetadata*/ctx[8].gettingStartedGuide && create_if_block_2$1(ctx);\n  let if_block1 = /*appMetadata*/ctx[8].explore && create_if_block_1$1(ctx);\n  return {\n    c() {\n      div = element(\"div\");\n      h4 = element(\"h4\");\n      t0 = text(t0_value);\n      t1 = space();\n      if (if_block0) if_block0.c();\n      t2 = space();\n      if (if_block1) if_block1.c();\n      attr(h4, \"class\", \"app-info-heading svelte-k4nru0\");\n      attr(div, \"class\", \"app-info svelte-k4nru0\");\n    },\n    m(target, anchor) {\n      insert(target, div, anchor);\n      append(div, h4);\n      append(h4, t0);\n      append(div, t1);\n      if (if_block0) if_block0.m(div, null);\n      append(div, t2);\n      if (if_block1) if_block1.m(div, null);\n    },\n    p(ctx, dirty) {\n      if (dirty & /*$_*/32 && t0_value !== (t0_value = /*$_*/ctx[5]('accountCenter.appInfo', {\n        default: en.accountCenter.appInfo\n      }) + \"\")) set_data(t0, t0_value);\n      if ( /*appMetadata*/ctx[8].gettingStartedGuide) if_block0.p(ctx, dirty);\n      if ( /*appMetadata*/ctx[8].explore) if_block1.p(ctx, dirty);\n    },\n    d(detaching) {\n      if (detaching) detach(div);\n      if (if_block0) if_block0.d();\n      if (if_block1) if_block1.d();\n    }\n  };\n}\n\n// (380:12) {#if appMetadata.gettingStartedGuide}\nfunction create_if_block_2$1(ctx) {\n  let div1;\n  let div0;\n  let t0_value = /*$_*/ctx[5]('accountCenter.learnMore', {\n    default: en.accountCenter.learnMore\n  }) + \"\";\n  let t0;\n  let t1;\n  let a;\n  let t2_value = /*$_*/ctx[5]('accountCenter.gettingStartedGuide', {\n    default: en.accountCenter.gettingStartedGuide\n  }) + \"\";\n  let t2;\n  return {\n    c() {\n      div1 = element(\"div\");\n      div0 = element(\"div\");\n      t0 = text(t0_value);\n      t1 = space();\n      a = element(\"a\");\n      t2 = text(t2_value);\n      attr(a, \"href\", /*appMetadata*/ctx[8].gettingStartedGuide);\n      attr(a, \"target\", \"_blank\");\n      attr(a, \"rel\", \"noreferrer noopener\");\n      attr(a, \"class\", \"svelte-k4nru0\");\n      attr(div1, \"class\", \"flex justify-between items-center mt7 svelte-k4nru0\");\n    },\n    m(target, anchor) {\n      insert(target, div1, anchor);\n      append(div1, div0);\n      append(div0, t0);\n      append(div1, t1);\n      append(div1, a);\n      append(a, t2);\n    },\n    p(ctx, dirty) {\n      if (dirty & /*$_*/32 && t0_value !== (t0_value = /*$_*/ctx[5]('accountCenter.learnMore', {\n        default: en.accountCenter.learnMore\n      }) + \"\")) set_data(t0, t0_value);\n      if (dirty & /*$_*/32 && t2_value !== (t2_value = /*$_*/ctx[5]('accountCenter.gettingStartedGuide', {\n        default: en.accountCenter.gettingStartedGuide\n      }) + \"\")) set_data(t2, t2_value);\n    },\n    d(detaching) {\n      if (detaching) detach(div1);\n    }\n  };\n}\n\n// (399:12) {#if appMetadata.explore}\nfunction create_if_block_1$1(ctx) {\n  let div1;\n  let div0;\n  let t0_value = /*$_*/ctx[5]('accountCenter.smartContracts', {\n    default: en.accountCenter.smartContracts\n  }) + \"\";\n  let t0;\n  let t1;\n  let a;\n  let t2_value = /*$_*/ctx[5]('accountCenter.explore', {\n    default: en.accountCenter.explore\n  }) + \"\";\n  let t2;\n  return {\n    c() {\n      div1 = element(\"div\");\n      div0 = element(\"div\");\n      t0 = text(t0_value);\n      t1 = space();\n      a = element(\"a\");\n      t2 = text(t2_value);\n      attr(a, \"href\", /*appMetadata*/ctx[8].explore);\n      attr(a, \"target\", \"_blank\");\n      attr(a, \"rel\", \"noreferrer noopener\");\n      attr(a, \"class\", \"svelte-k4nru0\");\n      attr(div1, \"class\", \"flex justify-between items-center mt7 svelte-k4nru0\");\n    },\n    m(target, anchor) {\n      insert(target, div1, anchor);\n      append(div1, div0);\n      append(div0, t0);\n      append(div1, t1);\n      append(div1, a);\n      append(a, t2);\n    },\n    p(ctx, dirty) {\n      if (dirty & /*$_*/32 && t0_value !== (t0_value = /*$_*/ctx[5]('accountCenter.smartContracts', {\n        default: en.accountCenter.smartContracts\n      }) + \"\")) set_data(t0, t0_value);\n      if (dirty & /*$_*/32 && t2_value !== (t2_value = /*$_*/ctx[5]('accountCenter.explore', {\n        default: en.accountCenter.explore\n      }) + \"\")) set_data(t2, t2_value);\n    },\n    d(detaching) {\n      if (detaching) detach(div1);\n    }\n  };\n}\nfunction create_fragment$3(ctx) {\n  let t0;\n  let div16;\n  let div15;\n  let div2;\n  let div0;\n  let each_blocks = [];\n  let each_1_lookup = new Map();\n  let t1;\n  let div1;\n  let t2;\n  let div14;\n  let div7;\n  let div3;\n  let walletappbadge0;\n  let t3;\n  let t4;\n  let div6;\n  let div4;\n  let t5_value = /*$_*/ctx[5]('accountCenter.currentNetwork', {\n    default: en.accountCenter.currentNetwork\n  }) + \"\";\n  let t5;\n  let t6;\n  let div5;\n  let networkselector;\n  let t7;\n  let div13;\n  let div12;\n  let div8;\n  let walletappbadge1;\n  let t8;\n  let div11;\n  let div9;\n  let t10;\n  let div10;\n  let t12;\n  let t13;\n  let button;\n  let t14_value = /*$_*/ctx[5]('accountCenter.backToApp', {\n    default: en.accountCenter.backToApp\n  }) + \"\";\n  let t14;\n  let t15;\n  let a;\n  let div16_intro;\n  let current;\n  let mounted;\n  let dispose;\n  let if_block0 = /*disconnectConfirmModal*/ctx[1] && create_if_block_5(ctx);\n  let each_value = /*$wallets$*/ctx[0];\n  const get_key = ctx => /*wallet*/ctx[19].label;\n  for (let i = 0; i < each_value.length; i += 1) {\n    let child_ctx = get_each_context(ctx, each_value, i);\n    let key = get_key(child_ctx);\n    each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));\n  }\n  let if_block1 = /*device*/ctx[10].type === 'desktop' && create_if_block_4(ctx);\n  walletappbadge0 = new WalletAppBadge({\n    props: {\n      size: 32,\n      padding: 4,\n      background: \"custom\",\n      color: ! /*validAppChain*/ctx[4] ? '#FFAF00' : ! /*validAppChain*/ctx[4].icon ? '#EFF1FC' : undefined,\n      customBackgroundColor: /*validAppChain*/ctx[4] ? /*validAppChain*/ctx[4].color || /*defaultChainStyles*/ctx[3] && /*defaultChainStyles*/ctx[3].color || unrecognizedChainStyle.color : '#FFE7B3',\n      border: \"transparent\",\n      radius: 8,\n      icon: /*validAppChain*/ctx[4] ? /*validAppChain*/ctx[4].icon || /*defaultChainStyles*/ctx[3] && /*defaultChainStyles*/ctx[3].icon || unrecognizedChainStyle.icon : warningIcon\n    }\n  });\n  let if_block2 = /*validAppChain*/ctx[4] && create_if_block_3$1();\n  networkselector = new NetworkSelector({\n    props: {\n      chains: /*appChains*/ctx[7],\n      colorVar: \"--account-center-maximized-network-selector-color\",\n      bold: true,\n      selectIcon: caretLightIcon,\n      parentCSSId: \"maximized_ac\"\n    }\n  });\n  walletappbadge1 = new WalletAppBadge({\n    props: {\n      size: 32,\n      padding: 4,\n      background: \"white\",\n      border: \"black\",\n      radius: 8,\n      icon: /*appMetadata*/ctx[8] && /*appMetadata*/ctx[8].icon || questionIcon\n    }\n  });\n  let if_block3 = /*appMetadata*/ctx[8] && ( /*appMetadata*/ctx[8].gettingStartedGuide || /*appMetadata*/ctx[8].explore) && create_if_block$2(ctx);\n  return {\n    c() {\n      if (if_block0) if_block0.c();\n      t0 = space();\n      div16 = element(\"div\");\n      div15 = element(\"div\");\n      div2 = element(\"div\");\n      div0 = element(\"div\");\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].c();\n      }\n      t1 = space();\n      div1 = element(\"div\");\n      if (if_block1) if_block1.c();\n      t2 = space();\n      div14 = element(\"div\");\n      div7 = element(\"div\");\n      div3 = element(\"div\");\n      create_component(walletappbadge0.$$.fragment);\n      t3 = space();\n      if (if_block2) if_block2.c();\n      t4 = space();\n      div6 = element(\"div\");\n      div4 = element(\"div\");\n      t5 = text(t5_value);\n      t6 = space();\n      div5 = element(\"div\");\n      create_component(networkselector.$$.fragment);\n      t7 = space();\n      div13 = element(\"div\");\n      div12 = element(\"div\");\n      div8 = element(\"div\");\n      create_component(walletappbadge1.$$.fragment);\n      t8 = space();\n      div11 = element(\"div\");\n      div9 = element(\"div\");\n      div9.textContent = `${/*appMetadata*/ctx[8] && /*appMetadata*/ctx[8].name || 'App Name'}`;\n      t10 = space();\n      div10 = element(\"div\");\n      div10.textContent = `${/*appMetadata*/ctx[8] && /*appMetadata*/ctx[8].description || 'This app has not added a description.'}`;\n      t12 = space();\n      if (if_block3) if_block3.c();\n      t13 = space();\n      button = element(\"button\");\n      t14 = text(t14_value);\n      t15 = space();\n      a = element(\"a\");\n      attr(div0, \"class\", \"wallets svelte-k4nru0\");\n      attr(div1, \"class\", \"actions flex flex-column items-start svelte-k4nru0\");\n      attr(div2, \"class\", \"p5 svelte-k4nru0\");\n      attr(div3, \"class\", \"relative flex\");\n      attr(div4, \"class\", \"network-selector-label svelte-k4nru0\");\n      attr(div5, \"class\", \"flex items-center\");\n      set_style(div5, \"width\", \"100%\");\n      attr(div6, \"class\", \"network-selector-container svelte-k4nru0\");\n      attr(div7, \"class\", \"flex items-center p5-5 svelte-k4nru0\");\n      attr(div8, \"class\", \"relative flex\");\n      attr(div9, \"class\", \"app-name svelte-k4nru0\");\n      attr(div10, \"class\", \"app-description svelte-k4nru0\");\n      attr(div11, \"class\", \"ml4 svelte-k4nru0\");\n      attr(div12, \"class\", \"flex items-start\");\n      attr(button, \"class\", \"app-button button-neutral-solid svelte-k4nru0\");\n      attr(a, \"href\", \"https://blocknative.com\");\n      attr(a, \"target\", \"_blank\");\n      attr(a, \"rel\", \"noopener noreferrer\");\n      attr(a, \"class\", \"flex justify-center items-center powered-by-container svelte-k4nru0\");\n      attr(div13, \"class\", \"app-info-container svelte-k4nru0\");\n      attr(div14, \"class\", \"network-container shadow-1 svelte-k4nru0\");\n      toggle_class(div14, \"background-blue\", /*validAppChain*/ctx[4] && /*validAppChain*/ctx[4].icon || /*defaultChainStyles*/ctx[3]);\n      toggle_class(div14, \"background-yellow\", ! /*validAppChain*/ctx[4]);\n      toggle_class(div14, \"background-gray\", /*validAppChain*/ctx[4] && ! /*defaultChainStyles*/ctx[3]);\n      attr(div15, \"class\", \"wallets-section svelte-k4nru0\");\n      attr(div16, \"class\", \"outer-container svelte-k4nru0\");\n    },\n    m(target, anchor) {\n      if (if_block0) if_block0.m(target, anchor);\n      insert(target, t0, anchor);\n      insert(target, div16, anchor);\n      append(div16, div15);\n      append(div15, div2);\n      append(div2, div0);\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].m(div0, null);\n      }\n      append(div2, t1);\n      append(div2, div1);\n      if (if_block1) if_block1.m(div1, null);\n      append(div15, t2);\n      append(div15, div14);\n      append(div14, div7);\n      append(div7, div3);\n      mount_component(walletappbadge0, div3, null);\n      append(div3, t3);\n      if (if_block2) if_block2.m(div3, null);\n      append(div7, t4);\n      append(div7, div6);\n      append(div6, div4);\n      append(div4, t5);\n      append(div6, t6);\n      append(div6, div5);\n      mount_component(networkselector, div5, null);\n      append(div14, t7);\n      append(div14, div13);\n      append(div13, div12);\n      append(div12, div8);\n      mount_component(walletappbadge1, div8, null);\n      append(div12, t8);\n      append(div12, div11);\n      append(div11, div9);\n      append(div11, t10);\n      append(div11, div10);\n      append(div13, t12);\n      if (if_block3) if_block3.m(div13, null);\n      append(div13, t13);\n      append(div13, button);\n      append(button, t14);\n      append(div13, t15);\n      append(div13, a);\n      a.innerHTML = poweredByBlocknative;\n      current = true;\n      if (!mounted) {\n        dispose = [listen(div5, \"click\", /*click_handler*/ctx[13]), listen(button, \"click\", /*click_handler_3*/ctx[18]), listen(div16, \"click\", stop_propagation(function () {\n          if (is_function( /*hideWalletRowMenu*/ctx[2])) /*hideWalletRowMenu*/ctx[2].apply(this, arguments);\n        }))];\n        mounted = true;\n      }\n    },\n    p(new_ctx, _ref4) {\n      let [dirty] = _ref4;\n      ctx = new_ctx;\n      if ( /*disconnectConfirmModal*/ctx[1]) {\n        if (if_block0) {\n          if_block0.p(ctx, dirty);\n          if (dirty & /*disconnectConfirmModal*/2) {\n            transition_in(if_block0, 1);\n          }\n        } else {\n          if_block0 = create_if_block_5(ctx);\n          if_block0.c();\n          transition_in(if_block0, 1);\n          if_block0.m(t0.parentNode, t0);\n        }\n      } else if (if_block0) {\n        group_outros();\n        transition_out(if_block0, 1, 1, () => {\n          if_block0 = null;\n        });\n        check_outros();\n      }\n      if (dirty & /*$wallets$, hideWalletRowMenu*/5) {\n        each_value = /*$wallets$*/ctx[0];\n        group_outros();\n        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div0, outro_and_destroy_block, create_each_block, null, get_each_context);\n        check_outros();\n      }\n      if ( /*device*/ctx[10].type === 'desktop') if_block1.p(ctx, dirty);\n      const walletappbadge0_changes = {};\n      if (dirty & /*validAppChain*/16) walletappbadge0_changes.color = ! /*validAppChain*/ctx[4] ? '#FFAF00' : ! /*validAppChain*/ctx[4].icon ? '#EFF1FC' : undefined;\n      if (dirty & /*validAppChain, defaultChainStyles*/24) walletappbadge0_changes.customBackgroundColor = /*validAppChain*/ctx[4] ? /*validAppChain*/ctx[4].color || /*defaultChainStyles*/ctx[3] && /*defaultChainStyles*/ctx[3].color || unrecognizedChainStyle.color : '#FFE7B3';\n      if (dirty & /*validAppChain, defaultChainStyles*/24) walletappbadge0_changes.icon = /*validAppChain*/ctx[4] ? /*validAppChain*/ctx[4].icon || /*defaultChainStyles*/ctx[3] && /*defaultChainStyles*/ctx[3].icon || unrecognizedChainStyle.icon : warningIcon;\n      walletappbadge0.$set(walletappbadge0_changes);\n      if ( /*validAppChain*/ctx[4]) {\n        if (if_block2) {\n          if (dirty & /*validAppChain*/16) {\n            transition_in(if_block2, 1);\n          }\n        } else {\n          if_block2 = create_if_block_3$1();\n          if_block2.c();\n          transition_in(if_block2, 1);\n          if_block2.m(div3, null);\n        }\n      } else if (if_block2) {\n        group_outros();\n        transition_out(if_block2, 1, 1, () => {\n          if_block2 = null;\n        });\n        check_outros();\n      }\n      if ((!current || dirty & /*$_*/32) && t5_value !== (t5_value = /*$_*/ctx[5]('accountCenter.currentNetwork', {\n        default: en.accountCenter.currentNetwork\n      }) + \"\")) set_data(t5, t5_value);\n      if ( /*appMetadata*/ctx[8] && ( /*appMetadata*/ctx[8].gettingStartedGuide || /*appMetadata*/ctx[8].explore)) if_block3.p(ctx, dirty);\n      if ((!current || dirty & /*$_*/32) && t14_value !== (t14_value = /*$_*/ctx[5]('accountCenter.backToApp', {\n        default: en.accountCenter.backToApp\n      }) + \"\")) set_data(t14, t14_value);\n      if (!current || dirty & /*validAppChain, defaultChainStyles*/24) {\n        toggle_class(div14, \"background-blue\", /*validAppChain*/ctx[4] && /*validAppChain*/ctx[4].icon || /*defaultChainStyles*/ctx[3]);\n      }\n      if (!current || dirty & /*validAppChain*/16) {\n        toggle_class(div14, \"background-yellow\", ! /*validAppChain*/ctx[4]);\n      }\n      if (!current || dirty & /*validAppChain, defaultChainStyles*/24) {\n        toggle_class(div14, \"background-gray\", /*validAppChain*/ctx[4] && ! /*defaultChainStyles*/ctx[3]);\n      }\n    },\n    i(local) {\n      if (current) return;\n      transition_in(if_block0);\n      for (let i = 0; i < each_value.length; i += 1) {\n        transition_in(each_blocks[i]);\n      }\n      transition_in(walletappbadge0.$$.fragment, local);\n      transition_in(if_block2);\n      transition_in(networkselector.$$.fragment, local);\n      transition_in(walletappbadge1.$$.fragment, local);\n      if (!div16_intro) {\n        add_render_callback(() => {\n          div16_intro = create_in_transition(div16, fly, {\n            delay: /*position*/ctx[9].includes('top') ? 100 : 0,\n            duration: 600,\n            y: /*position*/ctx[9].includes('top') ? 56 : -76,\n            easing: quartOut,\n            opacity: 0\n          });\n          div16_intro.start();\n        });\n      }\n      current = true;\n    },\n    o(local) {\n      transition_out(if_block0);\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        transition_out(each_blocks[i]);\n      }\n      transition_out(walletappbadge0.$$.fragment, local);\n      transition_out(if_block2);\n      transition_out(networkselector.$$.fragment, local);\n      transition_out(walletappbadge1.$$.fragment, local);\n      current = false;\n    },\n    d(detaching) {\n      if (if_block0) if_block0.d(detaching);\n      if (detaching) detach(t0);\n      if (detaching) detach(div16);\n      for (let i = 0; i < each_blocks.length; i += 1) {\n        each_blocks[i].d();\n      }\n      if (if_block1) if_block1.d();\n      destroy_component(walletappbadge0);\n      if (if_block2) if_block2.d();\n      destroy_component(networkselector);\n      destroy_component(walletappbadge1);\n      if (if_block3) if_block3.d();\n      mounted = false;\n      run_all(dispose);\n    }\n  };\n}\nfunction instance$3($$self, $$props, $$invalidate) {\n  let primaryWallet;\n  let connectedChain;\n  let validAppChain;\n  let defaultChainStyles;\n  let $wallets$;\n  let $_;\n  component_subscribe($$self, wallets$, $$value => $$invalidate(0, $wallets$ = $$value));\n  component_subscribe($$self, _, $$value => $$invalidate(5, $_ = $$value));\n  function disconnectAllWallets() {\n    $wallets$.forEach(_ref5 => {\n      let {\n        label\n      } = _ref5;\n      return disconnect({\n        label\n      });\n    });\n  }\n  const {\n    chains: appChains\n  } = state.get();\n  const {\n    appMetadata\n  } = configuration;\n  let disconnectConfirmModal = false;\n  let hideWalletRowMenu;\n  const {\n    position\n  } = state.get().accountCenter;\n  const {\n    device\n  } = configuration;\n  function click_handler(event) {\n    bubble.call(this, $$self, event);\n  }\n  const func = () => $$invalidate(1, disconnectConfirmModal = false);\n  function walletrow_hideMenu_binding(value) {\n    hideWalletRowMenu = value;\n    $$invalidate(2, hideWalletRowMenu);\n  }\n  const click_handler_1 = () => connect();\n  const click_handler_2 = () => $$invalidate(1, disconnectConfirmModal = true);\n  const click_handler_3 = () => updateAccountCenter({\n    expanded: false\n  });\n  $$self.$$.update = () => {\n    if ($$self.$$.dirty & /*$wallets$*/1) {\n      $$invalidate(12, [primaryWallet] = $wallets$, primaryWallet);\n    }\n    if ($$self.$$.dirty & /*primaryWallet*/4096) {\n      $$invalidate(11, [connectedChain] = primaryWallet ? primaryWallet.chains : [], connectedChain);\n    }\n    if ($$self.$$.dirty & /*connectedChain*/2048) {\n      $$invalidate(4, validAppChain = appChains.find(_ref6 => {\n        let {\n          id,\n          namespace\n        } = _ref6;\n        return connectedChain ? id === connectedChain.id && namespace === connectedChain.namespace : false;\n      }));\n    }\n    if ($$self.$$.dirty & /*connectedChain*/2048) {\n      $$invalidate(3, defaultChainStyles = getDefaultChainStyles(connectedChain && connectedChain.id));\n    }\n  };\n  return [$wallets$, disconnectConfirmModal, hideWalletRowMenu, defaultChainStyles, validAppChain, $_, disconnectAllWallets, appChains, appMetadata, position, device, connectedChain, primaryWallet, click_handler, func, walletrow_hideMenu_binding, click_handler_1, click_handler_2, click_handler_3];\n}\nclass Maximized extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance$3, create_fragment$3, safe_not_equal, {}, add_css$2);\n  }\n}\n\n/* src/views/account-center/Minimized.svelte generated by Svelte v3.55.1 */\n\nfunction add_css$1(target) {\n  append_styles(target, \"svelte-15oro6i\", \".minimized.svelte-15oro6i{--background-color:var(--account-center-minimized-background, var(--w3o-background-color, white));--text-color:var(--w3o-text-color, var(--gray-700));--border-color:var(--account-center-border, var(--w3o-border-color, var(--onboard-gray-200, var(--gray-200))));--border-radius:var(--account-center-border-radius, var(--w3o-border-radius, 1rem));cursor:pointer;pointer-events:auto;width:100%;padding:0.5rem;border:1px solid;background:var(--background-color);color:var(--text-color);border-color:var(--border-color);border-radius:var(--border-radius);box-shadow:var(\\n      --account-center-box-shadow,\\n      var(--onboard-shadow-3, var(--shadow-3))\\n    )}.inner-row.svelte-15oro6i{display:flex;flex-flow:row nowrap;align-items:center;gap:0.5rem;padding:0 0.25rem}.wallet-info.svelte-15oro6i{display:flex;flex:1;flex-flow:column;height:2.5rem;overflow:hidden}.address.svelte-15oro6i{font-weight:700;line-height:1.25rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:var(--account-center-minimized-address-color, inherit)}.balance.svelte-15oro6i{font-weight:400;line-height:1.25rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;opacity:0.6;color:var(--account-center-minimized-balance-color, inherit)}.chain-icon.svelte-15oro6i{width:22px;height:22px;padding:4px;border-radius:25px;margin-right:4px}.container.svelte-15oro6i{border:1px solid transparent;border-radius:16px;padding:1px;transition:border-color 250ms ease-in-out, backround 250ms ease-in-out;max-width:128px;cursor:default}.drop-shadow.svelte-15oro6i{filter:drop-shadow(0px 1px 4px rgba(0, 0, 0, 0.2))}.color-yellow.svelte-15oro6i{color:var(\\n      --account-center-chain-warning,\\n      var(--onboard-warning-500, var(--warning-500))\\n    )}.color-white.svelte-15oro6i{color:var(--onboard-primary-100, var(--primary-100))}\");\n}\n\n// (175:6) {#if firstAddressBalance}\nfunction create_if_block$1(ctx) {\n  let div;\n  let t0_value = ( /*firstAddressBalance*/ctx[4].length > 8 ? /*firstAddressBalance*/ctx[4].slice(0, 8) : /*firstAddressBalance*/ctx[4]) + \"\";\n  let t0;\n  let t1;\n  let t2;\n  let div_intro;\n  return {\n    c() {\n      div = element(\"div\");\n      t0 = text(t0_value);\n      t1 = space();\n      t2 = text( /*firstAddressAsset*/ctx[1]);\n      attr(div, \"class\", \"balance svelte-15oro6i\");\n    },\n    m(target, anchor) {\n      insert(target, div, anchor);\n      append(div, t0);\n      append(div, t1);\n      append(div, t2);\n    },\n    p(ctx, dirty) {\n      if (dirty & /*firstAddressBalance*/16 && t0_value !== (t0_value = ( /*firstAddressBalance*/ctx[4].length > 8 ? /*firstAddressBalance*/ctx[4].slice(0, 8) : /*firstAddressBalance*/ctx[4]) + \"\")) set_data(t0, t0_value);\n      if (dirty & /*firstAddressAsset*/2) set_data(t2, /*firstAddressAsset*/ctx[1]);\n    },\n    i(local) {\n      if (!div_intro) {\n        add_render_callback(() => {\n          div_intro = create_in_transition(div, fade, {});\n          div_intro.start();\n        });\n      }\n    },\n    o: noop,\n    d(detaching) {\n      if (detaching) detach(div);\n    }\n  };\n}\nfunction create_fragment$2(ctx) {\n  let div11;\n  let div10;\n  let div3;\n  let div0;\n  let walletappbadge0;\n  let t0;\n  let div1;\n  let walletappbadge1;\n  let t1;\n  let div2;\n  let successstatusicon;\n  let t2;\n  let div5;\n  let div4;\n  let t3_value = ( /*ensName*/ctx[7] ? shortenDomain( /*ensName*/ctx[7]) : /*unsName*/ctx[6] ? shortenDomain( /*unsName*/ctx[6]) : /*shortenedFirstAddress*/ctx[5]) + \"\";\n  let t3;\n  let t4;\n  let t5;\n  let div9;\n  let div8;\n  let div7;\n  let div6;\n  let raw_value = ( /*validAppChain*/ctx[3] ? /*validAppChain*/ctx[3].icon || /*defaultChainStyles*/ctx[2] && /*defaultChainStyles*/ctx[2].icon || unrecognizedChainStyle.icon : warningIcon) + \"\";\n  let div6_style_value;\n  let t6;\n  let networkselector;\n  let div8_style_value;\n  let div11_intro;\n  let div11_outro;\n  let current;\n  let mounted;\n  let dispose;\n  walletappbadge0 = new WalletAppBadge({\n    props: {\n      size: 32,\n      padding: 4,\n      background: 'white',\n      border: \"darkGreen\",\n      radius: 8,\n      icon: /*appIcon*/ctx[8]\n    }\n  });\n  walletappbadge1 = new WalletAppBadge({\n    props: {\n      size: 32,\n      padding: 4,\n      background: \"green\",\n      border: \"darkGreen\",\n      radius: 8,\n      icon: /*primaryWallet*/ctx[0] ? /*primaryWallet*/ctx[0].icon : ''\n    }\n  });\n  successstatusicon = new SuccessStatusIcon({\n    props: {\n      size: 14\n    }\n  });\n  let if_block = /*firstAddressBalance*/ctx[4] && create_if_block$1(ctx);\n  networkselector = new NetworkSelector({\n    props: {\n      chains: /*chains*/ctx[9],\n      colorVar: \"--account-center-minimized-network-selector-color\",\n      selectIcon: caretIcon,\n      parentCSSId: \"minimized_ac\"\n    }\n  });\n  return {\n    c() {\n      div11 = element(\"div\");\n      div10 = element(\"div\");\n      div3 = element(\"div\");\n      div0 = element(\"div\");\n      create_component(walletappbadge0.$$.fragment);\n      t0 = space();\n      div1 = element(\"div\");\n      create_component(walletappbadge1.$$.fragment);\n      t1 = space();\n      div2 = element(\"div\");\n      create_component(successstatusicon.$$.fragment);\n      t2 = space();\n      div5 = element(\"div\");\n      div4 = element(\"div\");\n      t3 = text(t3_value);\n      t4 = space();\n      if (if_block) if_block.c();\n      t5 = space();\n      div9 = element(\"div\");\n      div8 = element(\"div\");\n      div7 = element(\"div\");\n      div6 = element(\"div\");\n      t6 = space();\n      create_component(networkselector.$$.fragment);\n      attr(div0, \"class\", \"drop-shadow svelte-15oro6i\");\n      set_style(div1, \"margin-left\", \"-0.5rem\");\n      attr(div1, \"class\", \"drop-shadow svelte-15oro6i\");\n      set_style(div2, \"right\", \"-4px\");\n      set_style(div2, \"bottom\", \"-4px\");\n      attr(div2, \"class\", \"drop-shadow absolute svelte-15oro6i\");\n      attr(div3, \"class\", \"flex relative\");\n      attr(div4, \"class\", \"address svelte-15oro6i\");\n      attr(div5, \"class\", \"wallet-info svelte-15oro6i\");\n      attr(div6, \"class\", \"chain-icon flex justify-center items-center svelte-15oro6i\");\n      attr(div6, \"style\", div6_style_value = `background-color: ${/*validAppChain*/ctx[3] ? /*validAppChain*/ctx[3].color || /*defaultChainStyles*/ctx[2] && /*defaultChainStyles*/ctx[2].color || unrecognizedChainStyle.color : 'var(--onboard-warning-200, var(--warning-200))'};`);\n      toggle_class(div6, \"color-yellow\", ! /*validAppChain*/ctx[3]);\n      toggle_class(div6, \"color-white\", /*validAppChain*/ctx[3] && ! /*validAppChain*/ctx[3].icon);\n      attr(div7, \"class\", \"flex items-center\");\n      attr(div8, \"class\", \"container shadow-1 flex items-center svelte-15oro6i\");\n      attr(div8, \"style\", div8_style_value = `border-color: var(${/*validAppChain*/ctx[3] ? '--onboard-primary-200, var(--primary-200)' : '--onboard-warning-500, var(--warning-500)'}); background-color: var(${/*validAppChain*/ctx[3] ? '--account-center-minimized-chain-select-background, var(--primary-100)' : '--account-center-minimized-chain-select-background-warning, var(--warning-100)'})`);\n      attr(div9, \"class\", \"network\");\n      attr(div10, \"class\", \"inner-row svelte-15oro6i\");\n      attr(div11, \"class\", \"minimized svelte-15oro6i\");\n    },\n    m(target, anchor) {\n      insert(target, div11, anchor);\n      append(div11, div10);\n      append(div10, div3);\n      append(div3, div0);\n      mount_component(walletappbadge0, div0, null);\n      append(div3, t0);\n      append(div3, div1);\n      mount_component(walletappbadge1, div1, null);\n      append(div3, t1);\n      append(div3, div2);\n      mount_component(successstatusicon, div2, null);\n      append(div10, t2);\n      append(div10, div5);\n      append(div5, div4);\n      append(div4, t3);\n      append(div5, t4);\n      if (if_block) if_block.m(div5, null);\n      append(div10, t5);\n      append(div10, div9);\n      append(div9, div8);\n      append(div8, div7);\n      append(div7, div6);\n      div6.innerHTML = raw_value;\n      append(div7, t6);\n      mount_component(networkselector, div7, null);\n      current = true;\n      if (!mounted) {\n        dispose = [listen(div8, \"click\", stop_propagation( /*click_handler*/ctx[14])), listen(div11, \"click\", stop_propagation( /*maximize*/ctx[10]))];\n        mounted = true;\n      }\n    },\n    p(ctx, _ref7) {\n      let [dirty] = _ref7;\n      const walletappbadge1_changes = {};\n      if (dirty & /*primaryWallet*/1) walletappbadge1_changes.icon = /*primaryWallet*/ctx[0] ? /*primaryWallet*/ctx[0].icon : '';\n      walletappbadge1.$set(walletappbadge1_changes);\n      if ((!current || dirty & /*ensName, unsName, shortenedFirstAddress*/224) && t3_value !== (t3_value = ( /*ensName*/ctx[7] ? shortenDomain( /*ensName*/ctx[7]) : /*unsName*/ctx[6] ? shortenDomain( /*unsName*/ctx[6]) : /*shortenedFirstAddress*/ctx[5]) + \"\")) set_data(t3, t3_value);\n      if ( /*firstAddressBalance*/ctx[4]) {\n        if (if_block) {\n          if_block.p(ctx, dirty);\n          if (dirty & /*firstAddressBalance*/16) {\n            transition_in(if_block, 1);\n          }\n        } else {\n          if_block = create_if_block$1(ctx);\n          if_block.c();\n          transition_in(if_block, 1);\n          if_block.m(div5, null);\n        }\n      } else if (if_block) {\n        if_block.d(1);\n        if_block = null;\n      }\n      if ((!current || dirty & /*validAppChain, defaultChainStyles*/12) && raw_value !== (raw_value = ( /*validAppChain*/ctx[3] ? /*validAppChain*/ctx[3].icon || /*defaultChainStyles*/ctx[2] && /*defaultChainStyles*/ctx[2].icon || unrecognizedChainStyle.icon : warningIcon) + \"\")) div6.innerHTML = raw_value;\n      if (!current || dirty & /*validAppChain, defaultChainStyles*/12 && div6_style_value !== (div6_style_value = `background-color: ${/*validAppChain*/ctx[3] ? /*validAppChain*/ctx[3].color || /*defaultChainStyles*/ctx[2] && /*defaultChainStyles*/ctx[2].color || unrecognizedChainStyle.color : 'var(--onboard-warning-200, var(--warning-200))'};`)) {\n        attr(div6, \"style\", div6_style_value);\n      }\n      if (!current || dirty & /*validAppChain*/8) {\n        toggle_class(div6, \"color-yellow\", ! /*validAppChain*/ctx[3]);\n      }\n      if (!current || dirty & /*validAppChain*/8) {\n        toggle_class(div6, \"color-white\", /*validAppChain*/ctx[3] && ! /*validAppChain*/ctx[3].icon);\n      }\n      if (!current || dirty & /*validAppChain*/8 && div8_style_value !== (div8_style_value = `border-color: var(${/*validAppChain*/ctx[3] ? '--onboard-primary-200, var(--primary-200)' : '--onboard-warning-500, var(--warning-500)'}); background-color: var(${/*validAppChain*/ctx[3] ? '--account-center-minimized-chain-select-background, var(--primary-100)' : '--account-center-minimized-chain-select-background-warning, var(--warning-100)'})`)) {\n        attr(div8, \"style\", div8_style_value);\n      }\n    },\n    i(local) {\n      if (current) return;\n      transition_in(walletappbadge0.$$.fragment, local);\n      transition_in(walletappbadge1.$$.fragment, local);\n      transition_in(successstatusicon.$$.fragment, local);\n      transition_in(if_block);\n      transition_in(networkselector.$$.fragment, local);\n      add_render_callback(() => {\n        if (div11_outro) div11_outro.end(1);\n        div11_intro = create_in_transition(div11, fade, {\n          duration: 250\n        });\n        div11_intro.start();\n      });\n      current = true;\n    },\n    o(local) {\n      transition_out(walletappbadge0.$$.fragment, local);\n      transition_out(walletappbadge1.$$.fragment, local);\n      transition_out(successstatusicon.$$.fragment, local);\n      transition_out(networkselector.$$.fragment, local);\n      if (div11_intro) div11_intro.invalidate();\n      div11_outro = create_out_transition(div11, fade, {\n        duration: 100\n      });\n      current = false;\n    },\n    d(detaching) {\n      if (detaching) detach(div11);\n      destroy_component(walletappbadge0);\n      destroy_component(walletappbadge1);\n      destroy_component(successstatusicon);\n      if (if_block) if_block.d();\n      destroy_component(networkselector);\n      if (detaching && div11_outro) div11_outro.end();\n      mounted = false;\n      run_all(dispose);\n    }\n  };\n}\nfunction instance$2($$self, $$props, $$invalidate) {\n  let primaryWallet;\n  let firstAccount;\n  let ensName;\n  let unsName;\n  let shortenedFirstAddress;\n  let firstAddressAsset;\n  let firstAddressBalance;\n  let primaryChain;\n  let validAppChain;\n  let defaultChainStyles;\n  let $wallets$;\n  component_subscribe($$self, wallets$, $$value => $$invalidate(13, $wallets$ = $$value));\n  const {\n    appMetadata\n  } = configuration;\n  const appIcon = appMetadata && appMetadata.icon || questionIcon;\n  const chains = state.get().chains;\n  function maximize() {\n    updateAccountCenter({\n      expanded: true\n    });\n  }\n  function click_handler(event) {\n    bubble.call(this, $$self, event);\n  }\n  $$self.$$.update = () => {\n    if ($$self.$$.dirty & /*$wallets$*/8192) {\n      $$invalidate(0, [primaryWallet] = $wallets$, primaryWallet);\n    }\n    if ($$self.$$.dirty & /*primaryWallet*/1) {\n      $$invalidate(12, [firstAccount] = primaryWallet ? primaryWallet.accounts : [], firstAccount);\n    }\n    if ($$self.$$.dirty & /*firstAccount*/4096) {\n      $$invalidate(7, ensName = firstAccount && firstAccount.ens && shortenDomain(firstAccount.ens.name));\n    }\n    if ($$self.$$.dirty & /*firstAccount*/4096) {\n      $$invalidate(6, unsName = firstAccount && firstAccount.uns && shortenDomain(firstAccount.uns.name));\n    }\n    if ($$self.$$.dirty & /*firstAccount*/4096) {\n      $$invalidate(5, shortenedFirstAddress = firstAccount ? shortenAddress(firstAccount.address) : '');\n    }\n    if ($$self.$$.dirty & /*firstAccount*/4096) {\n      $$invalidate(1, [firstAddressAsset] = firstAccount && firstAccount.balance ? Object.keys(firstAccount.balance) : [], firstAddressAsset);\n    }\n    if ($$self.$$.dirty & /*firstAccount, firstAddressAsset*/4098) {\n      $$invalidate(4, firstAddressBalance = firstAccount && firstAccount.balance ? firstAccount.balance[firstAddressAsset] : null);\n    }\n    if ($$self.$$.dirty & /*primaryWallet*/1) {\n      $$invalidate(11, primaryChain = primaryWallet && primaryWallet.chains[0]);\n    }\n    if ($$self.$$.dirty & /*primaryChain*/2048) {\n      $$invalidate(3, validAppChain = chains.find(_ref8 => {\n        let {\n          id,\n          namespace\n        } = _ref8;\n        return primaryChain ? id === primaryChain.id && namespace === primaryChain.namespace : false;\n      }));\n    }\n    if ($$self.$$.dirty & /*primaryChain*/2048) {\n      $$invalidate(2, defaultChainStyles = getDefaultChainStyles(primaryChain && primaryChain.id));\n    }\n  };\n  return [primaryWallet, firstAddressAsset, defaultChainStyles, validAppChain, firstAddressBalance, shortenedFirstAddress, unsName, ensName, appIcon, chains, maximize, primaryChain, firstAccount, $wallets$, click_handler];\n}\nclass Minimized extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance$2, create_fragment$2, safe_not_equal, {}, add_css$1);\n  }\n}\n\n/* src/views/account-center/Micro.svelte generated by Svelte v3.55.1 */\n\nfunction add_css(target) {\n  append_styles(target, \"svelte-15xtubp\", \".minimized.svelte-15xtubp{--background-color:var(--account-center-micro-background, var(--w3o-background-color, white));--text-color:var(--w3o-text-color);--border-color:var(--account-center-border, var(--w3o-border-color, var(--onboard-gray-200, var(--gray-200))));--border-radius:var(--account-center-border-radius, var(--w3o-border-radius, 1rem));cursor:pointer;pointer-events:auto;border:1px solid transparent;background:var(--background-color);color:var(--text-color);border-color:var(--border-color);border-radius:var(--border-radius);box-shadow:var(\\n      --account-center-box-shadow,\\n      var(--onboard-shadow-3, var(--shadow-3))\\n    )}.drop-shadow.svelte-15xtubp{filter:drop-shadow(0px 1px 4px rgba(0, 0, 0, 0.2))}.inner-row.svelte-15xtubp{display:flex;flex-flow:row nowrap;width:80px;padding:0.75rem}.wallet-square-wrapper.svelte-15xtubp{position:relative;margin-left:-8px}.check-icon-wrapper.svelte-15xtubp{position:absolute;right:-4px;bottom:-4px}\");\n}\nfunction create_fragment$1(ctx) {\n  let div5;\n  let div4;\n  let div0;\n  let walletappbadge0;\n  let t0;\n  let div3;\n  let div1;\n  let walletappbadge1;\n  let t1;\n  let div2;\n  let successstatusicon;\n  let current;\n  let mounted;\n  let dispose;\n  walletappbadge0 = new WalletAppBadge({\n    props: {\n      size: 32,\n      padding: 4,\n      background: 'white',\n      border: \"darkGreen\",\n      radius: 8,\n      icon: /*appIcon*/ctx[1]\n    }\n  });\n  walletappbadge1 = new WalletAppBadge({\n    props: {\n      size: 32,\n      padding: 4,\n      background: \"green\",\n      border: \"darkGreen\",\n      radius: 8,\n      icon: /*primaryWallet*/ctx[0] ? /*primaryWallet*/ctx[0].icon : ''\n    }\n  });\n  successstatusicon = new SuccessStatusIcon({\n    props: {\n      size: 14\n    }\n  });\n  return {\n    c() {\n      div5 = element(\"div\");\n      div4 = element(\"div\");\n      div0 = element(\"div\");\n      create_component(walletappbadge0.$$.fragment);\n      t0 = space();\n      div3 = element(\"div\");\n      div1 = element(\"div\");\n      create_component(walletappbadge1.$$.fragment);\n      t1 = space();\n      div2 = element(\"div\");\n      create_component(successstatusicon.$$.fragment);\n      attr(div0, \"class\", \"drop-shadow svelte-15xtubp\");\n      attr(div1, \"class\", \"drop-shadow svelte-15xtubp\");\n      attr(div2, \"class\", \"check-icon-wrapper drop-shadow svelte-15xtubp\");\n      attr(div3, \"class\", \"wallet-square-wrapper svelte-15xtubp\");\n      attr(div4, \"class\", \"inner-row svelte-15xtubp\");\n      attr(div5, \"class\", \"minimized svelte-15xtubp\");\n    },\n    m(target, anchor) {\n      insert(target, div5, anchor);\n      append(div5, div4);\n      append(div4, div0);\n      mount_component(walletappbadge0, div0, null);\n      append(div4, t0);\n      append(div4, div3);\n      append(div3, div1);\n      mount_component(walletappbadge1, div1, null);\n      append(div3, t1);\n      append(div3, div2);\n      mount_component(successstatusicon, div2, null);\n      current = true;\n      if (!mounted) {\n        dispose = listen(div5, \"click\", stop_propagation( /*maximize*/ctx[2]));\n        mounted = true;\n      }\n    },\n    p(ctx, _ref9) {\n      let [dirty] = _ref9;\n      const walletappbadge1_changes = {};\n      if (dirty & /*primaryWallet*/1) walletappbadge1_changes.icon = /*primaryWallet*/ctx[0] ? /*primaryWallet*/ctx[0].icon : '';\n      walletappbadge1.$set(walletappbadge1_changes);\n    },\n    i(local) {\n      if (current) return;\n      transition_in(walletappbadge0.$$.fragment, local);\n      transition_in(walletappbadge1.$$.fragment, local);\n      transition_in(successstatusicon.$$.fragment, local);\n      current = true;\n    },\n    o(local) {\n      transition_out(walletappbadge0.$$.fragment, local);\n      transition_out(walletappbadge1.$$.fragment, local);\n      transition_out(successstatusicon.$$.fragment, local);\n      current = false;\n    },\n    d(detaching) {\n      if (detaching) detach(div5);\n      destroy_component(walletappbadge0);\n      destroy_component(walletappbadge1);\n      destroy_component(successstatusicon);\n      mounted = false;\n      dispose();\n    }\n  };\n}\nfunction instance$1($$self, $$props, $$invalidate) {\n  let primaryWallet;\n  let $wallets$;\n  component_subscribe($$self, wallets$, $$value => $$invalidate(3, $wallets$ = $$value));\n  const {\n    appMetadata\n  } = configuration;\n  const appIcon = appMetadata && appMetadata.icon || questionIcon;\n  function maximize() {\n    updateAccountCenter({\n      expanded: true\n    });\n  }\n  $$self.$$.update = () => {\n    if ($$self.$$.dirty & /*$wallets$*/8) {\n      $$invalidate(0, [primaryWallet] = $wallets$, primaryWallet);\n    }\n  };\n  return [primaryWallet, appIcon, maximize, $wallets$];\n}\nclass Micro extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance$1, create_fragment$1, safe_not_equal, {}, add_css);\n  }\n}\n\n/* src/views/account-center/Index.svelte generated by Svelte v3.55.1 */\n\nfunction create_else_block(ctx) {\n  let maximized;\n  let current;\n  maximized = new Maximized({});\n  return {\n    c() {\n      create_component(maximized.$$.fragment);\n    },\n    m(target, anchor) {\n      mount_component(maximized, target, anchor);\n      current = true;\n    },\n    p: noop,\n    i(local) {\n      if (current) return;\n      transition_in(maximized.$$.fragment, local);\n      current = true;\n    },\n    o(local) {\n      transition_out(maximized.$$.fragment, local);\n      current = false;\n    },\n    d(detaching) {\n      destroy_component(maximized, detaching);\n    }\n  };\n}\n\n// (32:63) \nfunction create_if_block_3(ctx) {\n  let micro;\n  let current;\n  micro = new Micro({});\n  return {\n    c() {\n      create_component(micro.$$.fragment);\n    },\n    m(target, anchor) {\n      mount_component(micro, target, anchor);\n      current = true;\n    },\n    p: noop,\n    i(local) {\n      if (current) return;\n      transition_in(micro.$$.fragment, local);\n      current = true;\n    },\n    o(local) {\n      transition_out(micro.$$.fragment, local);\n      current = false;\n    },\n    d(detaching) {\n      destroy_component(micro, detaching);\n    }\n  };\n}\n\n// (29:64) \nfunction create_if_block_2(ctx) {\n  let minimized;\n  let current;\n  minimized = new Minimized({});\n  return {\n    c() {\n      create_component(minimized.$$.fragment);\n    },\n    m(target, anchor) {\n      mount_component(minimized, target, anchor);\n      current = true;\n    },\n    p: noop,\n    i(local) {\n      if (current) return;\n      transition_in(minimized.$$.fragment, local);\n      current = true;\n    },\n    o(local) {\n      transition_out(minimized.$$.fragment, local);\n      current = false;\n    },\n    d(detaching) {\n      destroy_component(minimized, detaching);\n    }\n  };\n}\n\n// (23:0) {#if mountInContainer}\nfunction create_if_block(ctx) {\n  let if_block_anchor;\n  let current;\n  let if_block = /*$wallets$*/ctx[2].length && create_if_block_1();\n  return {\n    c() {\n      if (if_block) if_block.c();\n      if_block_anchor = empty();\n    },\n    m(target, anchor) {\n      if (if_block) if_block.m(target, anchor);\n      insert(target, if_block_anchor, anchor);\n      current = true;\n    },\n    p(ctx, dirty) {\n      if ( /*$wallets$*/ctx[2].length) {\n        if (if_block) {\n          if (dirty & /*$wallets$*/4) {\n            transition_in(if_block, 1);\n          }\n        } else {\n          if_block = create_if_block_1();\n          if_block.c();\n          transition_in(if_block, 1);\n          if_block.m(if_block_anchor.parentNode, if_block_anchor);\n        }\n      } else if (if_block) {\n        group_outros();\n        transition_out(if_block, 1, 1, () => {\n          if_block = null;\n        });\n        check_outros();\n      }\n    },\n    i(local) {\n      if (current) return;\n      transition_in(if_block);\n      current = true;\n    },\n    o(local) {\n      transition_out(if_block);\n      current = false;\n    },\n    d(detaching) {\n      if (if_block) if_block.d(detaching);\n      if (detaching) detach(if_block_anchor);\n    }\n  };\n}\n\n// (24:2) {#if $wallets$.length}\nfunction create_if_block_1(ctx) {\n  let div;\n  let index;\n  let current;\n  index = new Index({});\n  return {\n    c() {\n      div = element(\"div\");\n      create_component(index.$$.fragment);\n      attr(div, \"class\", \"container flex flex-column fixed z-indexed\");\n    },\n    m(target, anchor) {\n      insert(target, div, anchor);\n      mount_component(index, div, null);\n      current = true;\n    },\n    i(local) {\n      if (current) return;\n      transition_in(index.$$.fragment, local);\n      current = true;\n    },\n    o(local) {\n      transition_out(index.$$.fragment, local);\n      current = false;\n    },\n    d(detaching) {\n      if (detaching) detach(div);\n      destroy_component(index);\n    }\n  };\n}\nfunction create_fragment(ctx) {\n  let current_block_type_index;\n  let if_block;\n  let if_block_anchor;\n  let current;\n  let mounted;\n  let dispose;\n  const if_block_creators = [create_if_block, create_if_block_2, create_if_block_3, create_else_block];\n  const if_blocks = [];\n  function select_block_type(ctx, dirty) {\n    if ( /*mountInContainer*/ctx[0]) return 0;\n    if (! /*$accountCenter$*/ctx[1].expanded && ! /*$accountCenter$*/ctx[1].minimal) return 1;\n    if (! /*$accountCenter$*/ctx[1].expanded && /*$accountCenter$*/ctx[1].minimal) return 2;\n    return 3;\n  }\n  current_block_type_index = select_block_type(ctx);\n  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n  return {\n    c() {\n      if_block.c();\n      if_block_anchor = empty();\n    },\n    m(target, anchor) {\n      if_blocks[current_block_type_index].m(target, anchor);\n      insert(target, if_block_anchor, anchor);\n      current = true;\n      if (!mounted) {\n        dispose = listen(window, \"click\", /*minimize*/ctx[4]);\n        mounted = true;\n      }\n    },\n    p(ctx, _ref10) {\n      let [dirty] = _ref10;\n      let previous_block_index = current_block_type_index;\n      current_block_type_index = select_block_type(ctx);\n      if (current_block_type_index === previous_block_index) {\n        if_blocks[current_block_type_index].p(ctx, dirty);\n      } else {\n        group_outros();\n        transition_out(if_blocks[previous_block_index], 1, 1, () => {\n          if_blocks[previous_block_index] = null;\n        });\n        check_outros();\n        if_block = if_blocks[current_block_type_index];\n        if (!if_block) {\n          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n          if_block.c();\n        } else {\n          if_block.p(ctx, dirty);\n        }\n        transition_in(if_block, 1);\n        if_block.m(if_block_anchor.parentNode, if_block_anchor);\n      }\n    },\n    i(local) {\n      if (current) return;\n      transition_in(if_block);\n      current = true;\n    },\n    o(local) {\n      transition_out(if_block);\n      current = false;\n    },\n    d(detaching) {\n      if_blocks[current_block_type_index].d(detaching);\n      if (detaching) detach(if_block_anchor);\n      mounted = false;\n      dispose();\n    }\n  };\n}\nfunction instance($$self, $$props, $$invalidate) {\n  let $accountCenter$;\n  let $wallets$;\n  component_subscribe($$self, wallets$, $$value => $$invalidate(2, $wallets$ = $$value));\n  let {\n    mountInContainer = false\n  } = $$props;\n  const accountCenter$ = state.select('accountCenter').pipe(startWith(state.get().accountCenter), shareReplay(1));\n  component_subscribe($$self, accountCenter$, value => $$invalidate(1, $accountCenter$ = value));\n  onDestroy(minimize);\n  function minimize() {\n    if ($accountCenter$.expanded) {\n      updateAccountCenter({\n        expanded: false\n      });\n    }\n  }\n  $$self.$$set = $$props => {\n    if ('mountInContainer' in $$props) $$invalidate(0, mountInContainer = $$props.mountInContainer);\n  };\n  return [mountInContainer, $accountCenter$, $wallets$, accountCenter$, minimize];\n}\nclass Index extends SvelteComponent {\n  constructor(options) {\n    super();\n    init(this, options, instance, create_fragment, safe_not_equal, {\n      mountInContainer: 0\n    });\n  }\n}\nexport { Index as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}