{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { matchPath, useLocation } from 'react-router-dom';\nimport { routes } from '../Router';\nconst useActiveRoute = () => {\n  _s();\n  const location = useLocation();\n  const activeRoute = useMemo(() => Object.values(routes).find(route => !!matchPath(location.pathname, {\n    path: route.path,\n    exact: true\n  })), [location.pathname]);\n  return activeRoute !== null && activeRoute !== void 0 ? activeRoute : {};\n};\n_s(useActiveRoute, \"aKef6o0FjJOLoIXicD49MsxFDrI=\", false, function () {\n  return [useLocation];\n});\nexport default useActiveRoute;","map":{"version":3,"names":["useMemo","matchPath","useLocation","routes","useActiveRoute","location","activeRoute","Object","values","find","route","pathname","path","exact"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/hooks/useActiveRoute.ts"],"sourcesContent":["import { useMemo } from 'react'\nimport { matchPath, useLocation } from 'react-router-dom'\n\nimport { routes } from '../Router'\n\nconst useActiveRoute = (): Partial<{\n  path: string\n  isRoot?: boolean | undefined\n}> => {\n  const location = useLocation()\n  const activeRoute = useMemo(\n    () =>\n      Object.values(routes).find(\n        (route) =>\n          !!matchPath(location.pathname, { path: route.path, exact: true }),\n      ),\n    [location.pathname],\n  )\n\n  return activeRoute ?? {}\n}\n\nexport default useActiveRoute\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAEzD,SAASC,MAAM,QAAQ,WAAW;AAElC,MAAMC,cAAc,GAAG,MAGjB;EAAA;EACJ,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAMI,WAAW,GAAGN,OAAO,CACzB,MACEO,MAAM,CAACC,MAAM,CAACL,MAAM,CAAC,CAACM,IAAI,CACvBC,KAAK,IACJ,CAAC,CAACT,SAAS,CAACI,QAAQ,CAACM,QAAQ,EAAE;IAAEC,IAAI,EAAEF,KAAK,CAACE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC,CACpE,EACH,CAACR,QAAQ,CAACM,QAAQ,CAAC,CACpB;EAED,OAAOL,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,CAAC,CAAC;AAC1B,CAAC;AAAA,GAfKF,cAAc;EAAA,QAIDF,WAAW;AAAA;AAa9B,eAAeE,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}