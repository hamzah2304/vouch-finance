{"ast":null,"code":"var _jsxFileName = \"/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/wallet/components/USDCFaucetButton.tsx\",\n  _s = $RefreshSig$();\nimport { Button, css } from '@mui/material';\nimport { useWeb3React } from '@web3-react/core';\nimport { useCallback, useEffect, useState } from 'react';\nimport { HumaModal, HumaModalHeader } from '../../../components/humaModal';\nimport { useTestERC20Contract } from '../../../hooks/useContract';\nimport { useContractFunctionTestUSDC } from '../../../hooks/useContractFunctionTestUSDC';\nimport { usePoolInfo } from '../../../hooks/usePool';\nimport { downScale } from '../../../utils/number';\nimport { POOL_NAME, POOL_TYPE } from '../../../utils/pool';\nimport { TxStateType } from '../../../utils/transaction';\nimport { ErrorModal, LoadingModal, TxDoneModal } from '../../sdk/components';\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function USDCFaucetButton(_ref) {\n  _s();\n  let {\n    variant = 'outlined'\n  } = _ref;\n  const {\n    account,\n    provider\n  } = useWeb3React();\n  const poolInfo = usePoolInfo(POOL_NAME.HumaCreditLine, POOL_TYPE.CreditLine);\n  const testUSDCContract = useTestERC20Contract(poolInfo === null || poolInfo === void 0 ? void 0 : poolInfo.poolUnderlyingToken.address);\n  const {\n    loading,\n    state,\n    send,\n    reset,\n    failReason\n  } = useContractFunctionTestUSDC(state => state);\n  const [mintSuccess, setMintSuccess] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [step, setStep] = useState('Minting');\n  const [balance, setBalance] = useState('0');\n  useEffect(() => {\n    if (state === TxStateType.Success) {\n      setStep('Done');\n      setMintSuccess(true);\n    }\n    if (failReason) {\n      setStep('Error');\n    }\n  }, [failReason, state]);\n  useEffect(() => {\n    const loadBalance = async () => {\n      if (testUSDCContract == null || account == null) {\n        return;\n      }\n      const balance = await testUSDCContract.balanceOf(account);\n      const decimals = await testUSDCContract.decimals();\n      setBalance(downScale(balance, decimals));\n    };\n    setInterval(loadBalance, 2000);\n  }, [testUSDCContract, account]);\n  const styles = {\n    faucetButton: css`\n      margin-right: 5px;\n    `,\n    faucetText: css`\n      font-family: 'Uni-Neue-Regular';\n      font-size: 18px;\n      margin-right: 12px;\n    `\n  };\n  const mintTestTokens = useCallback(() => {\n    send(testUSDCContract, 'give1000To', [account], provider);\n  }, [account, testUSDCContract, provider, send]);\n  const onClickButton = () => {\n    setIsOpen(true);\n    mintTestTokens();\n  };\n  const handleCloseModal = () => {\n    reset();\n    setIsOpen(false);\n    if (step !== 'Done') {\n      setStep('Minting');\n    }\n  };\n  let text = 'Get Test USDC';\n  if (mintSuccess) {\n    text = 'Success!';\n  } else if (loading) {\n    text = 'Waiting...';\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsxs(\"span\", {\n      css: styles.faucetText,\n      children: [\"$\", balance, \" USDC\"]\n    }), _jsx(Button, {\n      css: styles.faucetButton,\n      disabled: loading || mintSuccess,\n      variant: variant,\n      onClick: onClickButton,\n      children: text\n    }), _jsxs(HumaModal, {\n      isOpen: isOpen,\n      overflowY: \"auto\",\n      onClose: handleCloseModal,\n      width: \"480px\",\n      padding: \"30px 40px\",\n      disableBackdropClick: true,\n      children: [_jsx(HumaModalHeader, {\n        onClose: handleCloseModal,\n        height: 0\n      }), step === 'Minting' && _jsx(LoadingModal, {\n        title: \"Transaction Pending\",\n        description: \"Waiting for confirmation...\"\n      }), step === 'Done' && _jsx(TxDoneModal, {\n        content: ['You have successfully minted 1000 test USDC.'],\n        handleAction: handleCloseModal\n      }), step === 'Error' && _jsx(ErrorModal, {\n        title: \"Supply\",\n        errorReason: \"Sorry there was an error\",\n        errorMessage: failReason,\n        handleOk: handleCloseModal\n      })]\n    })]\n  });\n}\n_s(USDCFaucetButton, \"5WesfSTfQBz5xgGSJnO0KKolGR4=\", false, function () {\n  return [useWeb3React, usePoolInfo, useTestERC20Contract, useContractFunctionTestUSDC];\n});\n_c = USDCFaucetButton;\nvar _c;\n$RefreshReg$(_c, \"USDCFaucetButton\");","map":{"version":3,"names":["Button","css","useWeb3React","useCallback","useEffect","useState","HumaModal","HumaModalHeader","useTestERC20Contract","useContractFunctionTestUSDC","usePoolInfo","downScale","POOL_NAME","POOL_TYPE","TxStateType","ErrorModal","LoadingModal","TxDoneModal","USDCFaucetButton","variant","account","provider","poolInfo","HumaCreditLine","CreditLine","testUSDCContract","poolUnderlyingToken","address","loading","state","send","reset","failReason","mintSuccess","setMintSuccess","isOpen","setIsOpen","step","setStep","balance","setBalance","Success","loadBalance","balanceOf","decimals","setInterval","styles","faucetButton","faucetText","mintTestTokens","onClickButton","handleCloseModal","text"],"sources":["/Users/hamzahmahmood/Downloads/ETHDenver/huma-workshop/huma-demo-dapp/src/features/wallet/components/USDCFaucetButton.tsx"],"sourcesContent":["import { Button, css } from '@mui/material'\nimport { useWeb3React } from '@web3-react/core'\nimport { ReactElement, useCallback, useEffect, useState } from 'react'\n\nimport { HumaModal, HumaModalHeader } from '../../../components/humaModal'\nimport { useTestERC20Contract } from '../../../hooks/useContract'\nimport { useContractFunctionTestUSDC } from '../../../hooks/useContractFunctionTestUSDC'\nimport { usePoolInfo } from '../../../hooks/usePool'\nimport { downScale } from '../../../utils/number'\nimport { POOL_NAME, POOL_TYPE } from '../../../utils/pool'\nimport { TxStateType } from '../../../utils/transaction'\nimport { ErrorModal, LoadingModal, TxDoneModal } from '../../sdk/components'\n\ntype Props = {\n  variant?: 'outlined' | 'contained'\n}\n\nexport function USDCFaucetButton({\n  variant = 'outlined',\n}: Props): ReactElement {\n  const { account, provider } = useWeb3React()\n  const poolInfo = usePoolInfo(POOL_NAME.HumaCreditLine, POOL_TYPE.CreditLine)\n  const testUSDCContract = useTestERC20Contract(\n    poolInfo?.poolUnderlyingToken.address,\n  )\n  const { loading, state, send, reset, failReason } =\n    useContractFunctionTestUSDC((state) => state)\n  const [mintSuccess, setMintSuccess] = useState<boolean>(false)\n  const [isOpen, setIsOpen] = useState(false)\n  const [step, setStep] = useState<'Minting' | 'Done' | 'Error'>('Minting')\n  const [balance, setBalance] = useState('0')\n\n  useEffect(() => {\n    if (state === TxStateType.Success) {\n      setStep('Done')\n      setMintSuccess(true)\n    }\n    if (failReason) {\n      setStep('Error')\n    }\n  }, [failReason, state])\n\n  useEffect(() => {\n    const loadBalance = async () => {\n      if (testUSDCContract == null || account == null) {\n        return\n      }\n      const balance = await testUSDCContract.balanceOf(account)\n      const decimals = await testUSDCContract.decimals()\n      setBalance(downScale(balance, decimals))\n    }\n    setInterval(loadBalance, 2000)\n  }, [testUSDCContract, account])\n\n  const styles = {\n    faucetButton: css`\n      margin-right: 5px;\n    `,\n    faucetText: css`\n      font-family: 'Uni-Neue-Regular';\n      font-size: 18px;\n      margin-right: 12px;\n    `,\n  }\n\n  const mintTestTokens = useCallback(() => {\n    send(testUSDCContract!, 'give1000To', [account], provider)\n  }, [account, testUSDCContract, provider, send])\n\n  const onClickButton = () => {\n    setIsOpen(true)\n    mintTestTokens()\n  }\n\n  const handleCloseModal = () => {\n    reset()\n    setIsOpen(false)\n    if (step !== 'Done') {\n      setStep('Minting')\n    }\n  }\n\n  let text = 'Get Test USDC'\n  if (mintSuccess) {\n    text = 'Success!'\n  } else if (loading) {\n    text = 'Waiting...'\n  }\n\n  return (\n    <>\n      <span css={styles.faucetText}>${balance} USDC</span>\n      <Button\n        css={styles.faucetButton}\n        disabled={loading || mintSuccess}\n        variant={variant}\n        onClick={onClickButton}\n      >\n        {text}\n      </Button>\n      <HumaModal\n        isOpen={isOpen}\n        overflowY='auto'\n        onClose={handleCloseModal}\n        width='480px'\n        padding='30px 40px'\n        disableBackdropClick\n      >\n        <HumaModalHeader onClose={handleCloseModal} height={0} />\n        {step === 'Minting' && (\n          <LoadingModal\n            title='Transaction Pending'\n            description='Waiting for confirmation...'\n          />\n        )}\n        {step === 'Done' && (\n          <TxDoneModal\n            content={['You have successfully minted 1000 test USDC.']}\n            handleAction={handleCloseModal}\n          />\n        )}\n        {step === 'Error' && (\n          <ErrorModal\n            title='Supply'\n            errorReason='Sorry there was an error'\n            errorMessage={failReason}\n            handleOk={handleCloseModal}\n          />\n        )}\n      </HumaModal>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}