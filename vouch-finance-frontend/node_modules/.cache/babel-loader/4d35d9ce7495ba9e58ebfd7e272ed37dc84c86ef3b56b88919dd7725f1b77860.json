{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkFlow = void 0;\nconst preact_1 = require(\"preact\");\nconst rxjs_1 = require(\"rxjs\");\nconst ConnectDialog_1 = require(\"../ConnectDialog/ConnectDialog\");\nclass LinkFlow {\n  constructor(options) {\n    this.extensionUI$ = new rxjs_1.BehaviorSubject({});\n    this.subscriptions = new rxjs_1.Subscription();\n    this.isConnected = false;\n    this.chainId = 1;\n    this.isOpen = false;\n    this.onCancel = null;\n    this.root = null;\n    // if true, hide QR code in LinkFlow (which happens if no jsonRpcUrl is provided)\n    this.connectDisabled = false;\n    this.darkMode = options.darkMode;\n    this.version = options.version;\n    this.sessionId = options.sessionId;\n    this.sessionSecret = options.sessionSecret;\n    this.linkAPIUrl = options.linkAPIUrl;\n    this.isParentConnection = options.isParentConnection;\n    this.connected$ = options.connected$;\n    this.chainId$ = options.chainId$;\n  }\n  attach(el) {\n    this.root = document.createElement(\"div\");\n    this.root.className = \"-cbwsdk-link-flow-root\";\n    el.appendChild(this.root);\n    this.render();\n    this.subscriptions.add(this.connected$.subscribe(v => {\n      if (this.isConnected !== v) {\n        this.isConnected = v;\n        this.render();\n      }\n    }));\n    this.subscriptions.add(this.chainId$.subscribe(chainId => {\n      if (this.chainId !== chainId) {\n        this.chainId = chainId;\n        this.render();\n      }\n    }));\n  }\n  detach() {\n    var _a;\n    if (!this.root) {\n      return;\n    }\n    this.subscriptions.unsubscribe();\n    (0, preact_1.render)(null, this.root);\n    (_a = this.root.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.root);\n  }\n  setConnectDisabled(connectDisabled) {\n    this.connectDisabled = connectDisabled;\n  }\n  open(options) {\n    this.isOpen = true;\n    this.onCancel = options.onCancel;\n    this.render();\n  }\n  close() {\n    this.isOpen = false;\n    this.onCancel = null;\n    this.render();\n  }\n  render() {\n    if (!this.root) {\n      return;\n    }\n    const subscription = this.extensionUI$.subscribe(() => {\n      if (!this.root) {\n        return;\n      }\n      (0, preact_1.render)((0, preact_1.h)(ConnectDialog_1.ConnectDialog, {\n        darkMode: this.darkMode,\n        version: this.version,\n        sessionId: this.sessionId,\n        sessionSecret: this.sessionSecret,\n        linkAPIUrl: this.linkAPIUrl,\n        isOpen: this.isOpen,\n        isConnected: this.isConnected,\n        isParentConnection: this.isParentConnection,\n        chainId: this.chainId,\n        onCancel: this.onCancel,\n        connectDisabled: this.connectDisabled\n      }), this.root);\n    });\n    this.subscriptions.add(subscription);\n  }\n}\nexports.LinkFlow = LinkFlow;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}