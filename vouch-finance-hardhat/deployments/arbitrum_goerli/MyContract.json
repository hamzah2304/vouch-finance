{
  "address": "0x283a65A0638B7254E98B1DdF4e6BF0FbD320314c",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_scoreTypeJobId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_userSignature",
          "type": "bytes"
        }
      ],
      "name": "calculateMacroScore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_scoreTypeJobId",
          "type": "bytes32"
        }
      ],
      "name": "prequalifyUser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "prequalified",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3441fe5c86535290472c80e496eae7bdbe5ba18c0c09d4229b7de9e61945651f",
  "receipt": {
    "to": null,
    "from": "0x1d35cB13B952d55Fdc9118b0e4980a675c88B2Ae",
    "contractAddress": "0x283a65A0638B7254E98B1DdF4e6BF0FbD320314c",
    "transactionIndex": 1,
    "gasUsed": "1461505",
    "logsBloom": "0x
    "blockHash": "0xa6a6d81fa40d69b9b19829fb1b38a040ddd274c58c28ed6e17f8d2684f80fb7c",
    "transactionHash": "0x3441fe5c86535290472c80e496eae7bdbe5ba18c0c09d4229b7de9e61945651f",
    "logs": [],
    "blockNumber": 9799217,
    "cumulativeGasUsed": "1461505",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7411acaf5979d0a53291e5dd04a8155a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_scoreTypeJobId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_userSignature\",\"type\":\"bytes\"}],\"name\":\"calculateMacroScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_scoreTypeJobId\",\"type\":\"bytes32\"}],\"name\":\"prequalifyUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"prequalified\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.11;\\n\\nimport \\\"./interfaces/IScoracle.sol\\\";\\n\\ncontract MyContract {\\n    address constant SCORACLE_ADDRESS = 0xe953f329041dA0D5Cf23159abc4b45f6fbf8Ab17;\\n\\n    constructor() {}\\n\\n    function calculateMacroScore(bytes32 _scoreTypeJobId, bytes memory _userSignature) external {\\n        IScoracle scoracle = IScoracle(SCORACLE_ADDRESS);\\n        scoracle.scoreRequest(msg.sender, _scoreTypeJobId, _userSignature);\\n    }\\n\\n    function prequalifyUser(\\n        bytes32 _scoreTypeJobId\\n    ) public view returns (bool prequalified, uint256 score) {\\n        IScoracle scoracle = IScoracle(SCORACLE_ADDRESS);\\n\\n        // Scoracle's getScore will read an already calculated score from the Scoracle contract's state.\\n        IScoracle.ScoreData memory scoreData = scoracle.getScore(msg.sender, _scoreTypeJobId);\\n\\n        prequalified = (scoreData.score > 650) ? true : false;\\n\\n        return (prequalified, scoreData.score);\\n    }\\n}\\n\",\"keccak256\":\"0x2a7d942d4effd85b9681d0851d2d4cf7bad78cf9aa787e24e8741ac24ec9ff68\",\"license\":\"MIT\"},\"contracts/interfaces/IScoracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.11;\\n\\ninterface IScoracle {\\n    struct ScoreData {\\n        uint40 lastUpdated;\\n        uint216 score;\\n        bytes extraData;\\n    }\\n\\n    //===============Events===============\\n\\n    /**\\n     * @dev emitted upon callback function of chainlink call. emits the address that was updated, the time it was updatedand the tick that was returned\\n     * @param addressToScore The address whose score is being updated\\n     * @param lastUpdated Timestamp of last update\\n     * @param score The new score\\n     * @param extraData Extra data to the type of score request\\n     **/\\n    event ScoreUpdated(\\n        address indexed addressToScore,\\n        uint256 lastUpdated,\\n        uint256 score,\\n        bytes extraData\\n    );\\n\\n    /**\\n     * @dev Added a new score type\\n     * @param scoreTypeJobId The new adapter job id\\n     * @param scoreTypeName The new score type name\\n     **/\\n    event ScoreTypeAdded(bytes32 indexed scoreTypeJobId, string scoreTypeName);\\n\\n    /**\\n     * @dev Deactivated a score type\\n     * @param scoreTypeJobId The new adapter job id\\n     **/\\n    event ScoreTypeDeactivated(bytes32 indexed scoreTypeJobId);\\n\\n    /**\\n     * @dev Updated the chainlink node address\\n     * @param chainlinkNode The new chainlink node address\\n     **/\\n    event ChainlinkNodeUpdated(address indexed chainlinkNode);\\n\\n    /**\\n     * @dev Updated the chainlink oracle address\\n     * @param chainlinkOracle The new chainlink oracle address\\n     **/\\n    event ChainlinkOracleUpdated(address indexed chainlinkOracle);\\n\\n    /**\\n     * @dev Updated the base fee\\n     * @param baseFee Base fee updated\\n     **/\\n    event BaseFeeUpdated(uint256 baseFee);\\n\\n    /**\\n     * @dev Updated the chainlink fee\\n     * @param chainlinkFee The new chainlink fee\\n     **/\\n    event ChainlinkFeeUpdated(uint256 chainlinkFee);\\n\\n    //===============Main Functions===============\\n\\n    function scoreRequest(\\n        address addressToScore,\\n        bytes32 _scoreTypeJobId,\\n        bytes memory _userSignature\\n    ) external payable;\\n\\n    //===============Governance/Admin Functions===============\\n\\n    function addScoreType(bytes32 _scoreTypeJobId, string memory _scoreTypeName) external;\\n\\n    function deactivateScoreType(bytes32 _scoreTypeJobId) external;\\n\\n    function updateChainlinkNode(address chainlinkNode) external;\\n\\n    function updateChainlinkOracle(address chainlinkOracle) external;\\n\\n    function updateBaseFee(uint256 baseFee) external;\\n\\n    function updateChainlinkFee(uint256 chainlinkFee) external;\\n\\n    function depositLINK(uint256 amount) external;\\n\\n    function withdrawLINK(uint256 amount) external;\\n\\n    function withdrawETH(uint256 amount) external;\\n\\n    //===============Get Functions===============\\n\\n    function getScore(\\n        address _user,\\n        bytes32 _scoreTypeJobId\\n    ) external view returns (ScoreData memory scoreData);\\n\\n    function checkScoreTypeExists(\\n        bytes32 _scoreTypeJobId\\n    ) external view returns (bool, string memory, bytes32);\\n\\n    function getChainlinkNode() external view returns (address);\\n\\n    function getChainlinkOracle() external view returns (address);\\n\\n    function getBaseFee() external view returns (uint256);\\n\\n    function getChainlinkFee() external view returns (uint256);\\n\\n    function getScoreBounds() external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0xa44cf4f5fb0a949874a87bb0908e8752b1694294c74ebd8e8898448415e5e802\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506107db806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806353e683411461003b578063ea5e568e1461006c575b600080fd5b61005560048036038101906100509190610267565b610088565b6040516100639291906102c8565b60405180910390f35b61008660048036038101906100819190610437565b610190565b005b600080600073e953f329041da0d5cf23159abc4b45f6fbf8ab17905060008173ffffffffffffffffffffffffffffffffffffffff16638fa71f0b33876040518363ffffffff1660e01b81526004016100e19291906104e3565b600060405180830381865afa1580156100fe573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061012791906106c9565b905061028a81602001517affffffffffffffffffffffffffffffffffffffffffffffffffffff161161015a57600061015d565b60015b9350838160200151807affffffffffffffffffffffffffffffffffffffffffffffffffffff169050935093505050915091565b600073e953f329041da0d5cf23159abc4b45f6fbf8ab1790508073ffffffffffffffffffffffffffffffffffffffff1663bb264c323385856040518463ffffffff1660e01b81526004016101e693929190610767565b600060405180830381600087803b15801561020057600080fd5b505af1158015610214573d6000803e3d6000fd5b50505050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61024481610231565b811461024f57600080fd5b50565b6000813590506102618161023b565b92915050565b60006020828403121561027d5761027c610227565b5b600061028b84828501610252565b91505092915050565b60008115159050919050565b6102a981610294565b82525050565b6000819050919050565b6102c2816102af565b82525050565b60006040820190506102dd60008301856102a0565b6102ea60208301846102b9565b9392505050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610344826102fb565b810181811067ffffffffffffffff821117156103635761036261030c565b5b80604052505050565b600061037661021d565b9050610382828261033b565b919050565b600067ffffffffffffffff8211156103a2576103a161030c565b5b6103ab826102fb565b9050602081019050919050565b82818337600083830152505050565b60006103da6103d584610387565b61036c565b9050828152602081018484840111156103f6576103f56102f6565b5b6104018482856103b8565b509392505050565b600082601f83011261041e5761041d6102f1565b5b813561042e8482602086016103c7565b91505092915050565b6000806040838503121561044e5761044d610227565b5b600061045c85828601610252565b925050602083013567ffffffffffffffff81111561047d5761047c61022c565b5b61048985828601610409565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104be82610493565b9050919050565b6104ce816104b3565b82525050565b6104dd81610231565b82525050565b60006040820190506104f860008301856104c5565b61050560208301846104d4565b9392505050565b600080fd5b600080fd5b600064ffffffffff82169050919050565b61053081610516565b811461053b57600080fd5b50565b60008151905061054d81610527565b92915050565b60007affffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b61058381610553565b811461058e57600080fd5b50565b6000815190506105a08161057a565b92915050565b60005b838110156105c45780820151818401526020810190506105a9565b838111156105d3576000848401525b50505050565b60006105ec6105e784610387565b61036c565b905082815260208101848484011115610608576106076102f6565b5b6106138482856105a6565b509392505050565b600082601f8301126106305761062f6102f1565b5b81516106408482602086016105d9565b91505092915050565b60006060828403121561065f5761065e61050c565b5b610669606061036c565b905060006106798482850161053e565b600083015250602061068d84828501610591565b602083015250604082015167ffffffffffffffff8111156106b1576106b0610511565b5b6106bd8482850161061b565b60408301525092915050565b6000602082840312156106df576106de610227565b5b600082015167ffffffffffffffff8111156106fd576106fc61022c565b5b61070984828501610649565b91505092915050565b600081519050919050565b600082825260208201905092915050565b600061073982610712565b610743818561071d565b93506107538185602086016105a6565b61075c816102fb565b840191505092915050565b600060608201905061077c60008301866104c5565b61078960208301856104d4565b818103604083015261079b818461072e565b905094935050505056fea264697066735822122009712f85f3cf7dcff2b99da47a710a7d75ecb1754d5917a3fb37d48f73099f9864736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806353e683411461003b578063ea5e568e1461006c575b600080fd5b61005560048036038101906100509190610267565b610088565b6040516100639291906102c8565b60405180910390f35b61008660048036038101906100819190610437565b610190565b005b600080600073e953f329041da0d5cf23159abc4b45f6fbf8ab17905060008173ffffffffffffffffffffffffffffffffffffffff16638fa71f0b33876040518363ffffffff1660e01b81526004016100e19291906104e3565b600060405180830381865afa1580156100fe573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061012791906106c9565b905061028a81602001517affffffffffffffffffffffffffffffffffffffffffffffffffffff161161015a57600061015d565b60015b9350838160200151807affffffffffffffffffffffffffffffffffffffffffffffffffffff169050935093505050915091565b600073e953f329041da0d5cf23159abc4b45f6fbf8ab1790508073ffffffffffffffffffffffffffffffffffffffff1663bb264c323385856040518463ffffffff1660e01b81526004016101e693929190610767565b600060405180830381600087803b15801561020057600080fd5b505af1158015610214573d6000803e3d6000fd5b50505050505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61024481610231565b811461024f57600080fd5b50565b6000813590506102618161023b565b92915050565b60006020828403121561027d5761027c610227565b5b600061028b84828501610252565b91505092915050565b60008115159050919050565b6102a981610294565b82525050565b6000819050919050565b6102c2816102af565b82525050565b60006040820190506102dd60008301856102a0565b6102ea60208301846102b9565b9392505050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610344826102fb565b810181811067ffffffffffffffff821117156103635761036261030c565b5b80604052505050565b600061037661021d565b9050610382828261033b565b919050565b600067ffffffffffffffff8211156103a2576103a161030c565b5b6103ab826102fb565b9050602081019050919050565b82818337600083830152505050565b60006103da6103d584610387565b61036c565b9050828152602081018484840111156103f6576103f56102f6565b5b6104018482856103b8565b509392505050565b600082601f83011261041e5761041d6102f1565b5b813561042e8482602086016103c7565b91505092915050565b6000806040838503121561044e5761044d610227565b5b600061045c85828601610252565b925050602083013567ffffffffffffffff81111561047d5761047c61022c565b5b61048985828601610409565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104be82610493565b9050919050565b6104ce816104b3565b82525050565b6104dd81610231565b82525050565b60006040820190506104f860008301856104c5565b61050560208301846104d4565b9392505050565b600080fd5b600080fd5b600064ffffffffff82169050919050565b61053081610516565b811461053b57600080fd5b50565b60008151905061054d81610527565b92915050565b60007affffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b61058381610553565b811461058e57600080fd5b50565b6000815190506105a08161057a565b92915050565b60005b838110156105c45780820151818401526020810190506105a9565b838111156105d3576000848401525b50505050565b60006105ec6105e784610387565b61036c565b905082815260208101848484011115610608576106076102f6565b5b6106138482856105a6565b509392505050565b600082601f8301126106305761062f6102f1565b5b81516106408482602086016105d9565b91505092915050565b60006060828403121561065f5761065e61050c565b5b610669606061036c565b905060006106798482850161053e565b600083015250602061068d84828501610591565b602083015250604082015167ffffffffffffffff8111156106b1576106b0610511565b5b6106bd8482850161061b565b60408301525092915050565b6000602082840312156106df576106de610227565b5b600082015167ffffffffffffffff8111156106fd576106fc61022c565b5b61070984828501610649565b91505092915050565b600081519050919050565b600082825260208201905092915050565b600061073982610712565b610743818561071d565b93506107538185602086016105a6565b61075c816102fb565b840191505092915050565b600060608201905061077c60008301866104c5565b61078960208301856104d4565b818103604083015261079b818461072e565b905094935050505056fea264697066735822122009712f85f3cf7dcff2b99da47a710a7d75ecb1754d5917a3fb37d48f73099f9864736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}